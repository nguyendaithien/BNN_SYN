// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module quant_and_pack (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        prior_outputs_0_0_V_address0,
        prior_outputs_0_0_V_ce0,
        prior_outputs_0_0_V_q0,
        prior_outputs_0_1_V_address0,
        prior_outputs_0_1_V_ce0,
        prior_outputs_0_1_V_q0,
        prior_outputs_0_2_V_address0,
        prior_outputs_0_2_V_ce0,
        prior_outputs_0_2_V_q0,
        prior_outputs_0_3_V_address0,
        prior_outputs_0_3_V_ce0,
        prior_outputs_0_3_V_q0,
        prior_outputs_0_4_V_address0,
        prior_outputs_0_4_V_ce0,
        prior_outputs_0_4_V_q0,
        prior_outputs_0_5_V_address0,
        prior_outputs_0_5_V_ce0,
        prior_outputs_0_5_V_q0,
        prior_outputs_0_6_V_address0,
        prior_outputs_0_6_V_ce0,
        prior_outputs_0_6_V_q0,
        prior_outputs_0_7_V_address0,
        prior_outputs_0_7_V_ce0,
        prior_outputs_0_7_V_q0,
        prior_outputs_0_8_V_address0,
        prior_outputs_0_8_V_ce0,
        prior_outputs_0_8_V_q0,
        prior_outputs_0_9_V_address0,
        prior_outputs_0_9_V_ce0,
        prior_outputs_0_9_V_q0,
        prior_outputs_0_10_V_address0,
        prior_outputs_0_10_V_ce0,
        prior_outputs_0_10_V_q0,
        prior_outputs_0_11_V_address0,
        prior_outputs_0_11_V_ce0,
        prior_outputs_0_11_V_q0,
        prior_outputs_0_12_V_address0,
        prior_outputs_0_12_V_ce0,
        prior_outputs_0_12_V_q0,
        prior_outputs_0_13_V_address0,
        prior_outputs_0_13_V_ce0,
        prior_outputs_0_13_V_q0,
        prior_outputs_0_14_V_address0,
        prior_outputs_0_14_V_ce0,
        prior_outputs_0_14_V_q0,
        prior_outputs_0_15_V_address0,
        prior_outputs_0_15_V_ce0,
        prior_outputs_0_15_V_q0,
        prior_outputs_1_0_V_address0,
        prior_outputs_1_0_V_ce0,
        prior_outputs_1_0_V_q0,
        prior_outputs_1_1_V_address0,
        prior_outputs_1_1_V_ce0,
        prior_outputs_1_1_V_q0,
        prior_outputs_1_2_V_address0,
        prior_outputs_1_2_V_ce0,
        prior_outputs_1_2_V_q0,
        prior_outputs_1_3_V_address0,
        prior_outputs_1_3_V_ce0,
        prior_outputs_1_3_V_q0,
        prior_outputs_1_4_V_address0,
        prior_outputs_1_4_V_ce0,
        prior_outputs_1_4_V_q0,
        prior_outputs_1_5_V_address0,
        prior_outputs_1_5_V_ce0,
        prior_outputs_1_5_V_q0,
        prior_outputs_1_6_V_address0,
        prior_outputs_1_6_V_ce0,
        prior_outputs_1_6_V_q0,
        prior_outputs_1_7_V_address0,
        prior_outputs_1_7_V_ce0,
        prior_outputs_1_7_V_q0,
        prior_outputs_1_8_V_address0,
        prior_outputs_1_8_V_ce0,
        prior_outputs_1_8_V_q0,
        prior_outputs_1_9_V_address0,
        prior_outputs_1_9_V_ce0,
        prior_outputs_1_9_V_q0,
        prior_outputs_1_10_V_address0,
        prior_outputs_1_10_V_ce0,
        prior_outputs_1_10_V_q0,
        prior_outputs_1_11_V_address0,
        prior_outputs_1_11_V_ce0,
        prior_outputs_1_11_V_q0,
        prior_outputs_1_12_V_address0,
        prior_outputs_1_12_V_ce0,
        prior_outputs_1_12_V_q0,
        prior_outputs_1_13_V_address0,
        prior_outputs_1_13_V_ce0,
        prior_outputs_1_13_V_q0,
        prior_outputs_1_14_V_address0,
        prior_outputs_1_14_V_ce0,
        prior_outputs_1_14_V_q0,
        prior_outputs_1_15_V_address0,
        prior_outputs_1_15_V_ce0,
        prior_outputs_1_15_V_q0,
        prior_outputs_2_0_V_address0,
        prior_outputs_2_0_V_ce0,
        prior_outputs_2_0_V_q0,
        prior_outputs_2_1_V_address0,
        prior_outputs_2_1_V_ce0,
        prior_outputs_2_1_V_q0,
        prior_outputs_2_2_V_address0,
        prior_outputs_2_2_V_ce0,
        prior_outputs_2_2_V_q0,
        prior_outputs_2_3_V_address0,
        prior_outputs_2_3_V_ce0,
        prior_outputs_2_3_V_q0,
        prior_outputs_2_4_V_address0,
        prior_outputs_2_4_V_ce0,
        prior_outputs_2_4_V_q0,
        prior_outputs_2_5_V_address0,
        prior_outputs_2_5_V_ce0,
        prior_outputs_2_5_V_q0,
        prior_outputs_2_6_V_address0,
        prior_outputs_2_6_V_ce0,
        prior_outputs_2_6_V_q0,
        prior_outputs_2_7_V_address0,
        prior_outputs_2_7_V_ce0,
        prior_outputs_2_7_V_q0,
        prior_outputs_2_8_V_address0,
        prior_outputs_2_8_V_ce0,
        prior_outputs_2_8_V_q0,
        prior_outputs_2_9_V_address0,
        prior_outputs_2_9_V_ce0,
        prior_outputs_2_9_V_q0,
        prior_outputs_2_10_V_address0,
        prior_outputs_2_10_V_ce0,
        prior_outputs_2_10_V_q0,
        prior_outputs_2_11_V_address0,
        prior_outputs_2_11_V_ce0,
        prior_outputs_2_11_V_q0,
        prior_outputs_2_12_V_address0,
        prior_outputs_2_12_V_ce0,
        prior_outputs_2_12_V_q0,
        prior_outputs_2_13_V_address0,
        prior_outputs_2_13_V_ce0,
        prior_outputs_2_13_V_q0,
        prior_outputs_2_14_V_address0,
        prior_outputs_2_14_V_ce0,
        prior_outputs_2_14_V_q0,
        prior_outputs_2_15_V_address0,
        prior_outputs_2_15_V_ce0,
        prior_outputs_2_15_V_q0,
        prior_outputs_3_0_V_address0,
        prior_outputs_3_0_V_ce0,
        prior_outputs_3_0_V_q0,
        prior_outputs_3_1_V_address0,
        prior_outputs_3_1_V_ce0,
        prior_outputs_3_1_V_q0,
        prior_outputs_3_2_V_address0,
        prior_outputs_3_2_V_ce0,
        prior_outputs_3_2_V_q0,
        prior_outputs_3_3_V_address0,
        prior_outputs_3_3_V_ce0,
        prior_outputs_3_3_V_q0,
        prior_outputs_3_4_V_address0,
        prior_outputs_3_4_V_ce0,
        prior_outputs_3_4_V_q0,
        prior_outputs_3_5_V_address0,
        prior_outputs_3_5_V_ce0,
        prior_outputs_3_5_V_q0,
        prior_outputs_3_6_V_address0,
        prior_outputs_3_6_V_ce0,
        prior_outputs_3_6_V_q0,
        prior_outputs_3_7_V_address0,
        prior_outputs_3_7_V_ce0,
        prior_outputs_3_7_V_q0,
        prior_outputs_3_8_V_address0,
        prior_outputs_3_8_V_ce0,
        prior_outputs_3_8_V_q0,
        prior_outputs_3_9_V_address0,
        prior_outputs_3_9_V_ce0,
        prior_outputs_3_9_V_q0,
        prior_outputs_3_10_V_address0,
        prior_outputs_3_10_V_ce0,
        prior_outputs_3_10_V_q0,
        prior_outputs_3_11_V_address0,
        prior_outputs_3_11_V_ce0,
        prior_outputs_3_11_V_q0,
        prior_outputs_3_12_V_address0,
        prior_outputs_3_12_V_ce0,
        prior_outputs_3_12_V_q0,
        prior_outputs_3_13_V_address0,
        prior_outputs_3_13_V_ce0,
        prior_outputs_3_13_V_q0,
        prior_outputs_3_14_V_address0,
        prior_outputs_3_14_V_ce0,
        prior_outputs_3_14_V_q0,
        prior_outputs_3_15_V_address0,
        prior_outputs_3_15_V_ce0,
        prior_outputs_3_15_V_q0,
        msb_buffer_0_V_address0,
        msb_buffer_0_V_ce0,
        msb_buffer_0_V_q0,
        msb_buffer_0_V_address1,
        msb_buffer_0_V_ce1,
        msb_buffer_0_V_we1,
        msb_buffer_0_V_d1,
        msb_buffer_1_V_address0,
        msb_buffer_1_V_ce0,
        msb_buffer_1_V_q0,
        msb_buffer_1_V_address1,
        msb_buffer_1_V_ce1,
        msb_buffer_1_V_we1,
        msb_buffer_1_V_d1,
        H_fmap,
        in_channels
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] prior_outputs_0_0_V_address0;
output   prior_outputs_0_0_V_ce0;
input  [15:0] prior_outputs_0_0_V_q0;
output  [10:0] prior_outputs_0_1_V_address0;
output   prior_outputs_0_1_V_ce0;
input  [15:0] prior_outputs_0_1_V_q0;
output  [10:0] prior_outputs_0_2_V_address0;
output   prior_outputs_0_2_V_ce0;
input  [15:0] prior_outputs_0_2_V_q0;
output  [10:0] prior_outputs_0_3_V_address0;
output   prior_outputs_0_3_V_ce0;
input  [15:0] prior_outputs_0_3_V_q0;
output  [10:0] prior_outputs_0_4_V_address0;
output   prior_outputs_0_4_V_ce0;
input  [15:0] prior_outputs_0_4_V_q0;
output  [10:0] prior_outputs_0_5_V_address0;
output   prior_outputs_0_5_V_ce0;
input  [15:0] prior_outputs_0_5_V_q0;
output  [10:0] prior_outputs_0_6_V_address0;
output   prior_outputs_0_6_V_ce0;
input  [15:0] prior_outputs_0_6_V_q0;
output  [10:0] prior_outputs_0_7_V_address0;
output   prior_outputs_0_7_V_ce0;
input  [15:0] prior_outputs_0_7_V_q0;
output  [10:0] prior_outputs_0_8_V_address0;
output   prior_outputs_0_8_V_ce0;
input  [15:0] prior_outputs_0_8_V_q0;
output  [10:0] prior_outputs_0_9_V_address0;
output   prior_outputs_0_9_V_ce0;
input  [15:0] prior_outputs_0_9_V_q0;
output  [10:0] prior_outputs_0_10_V_address0;
output   prior_outputs_0_10_V_ce0;
input  [15:0] prior_outputs_0_10_V_q0;
output  [10:0] prior_outputs_0_11_V_address0;
output   prior_outputs_0_11_V_ce0;
input  [15:0] prior_outputs_0_11_V_q0;
output  [10:0] prior_outputs_0_12_V_address0;
output   prior_outputs_0_12_V_ce0;
input  [15:0] prior_outputs_0_12_V_q0;
output  [10:0] prior_outputs_0_13_V_address0;
output   prior_outputs_0_13_V_ce0;
input  [15:0] prior_outputs_0_13_V_q0;
output  [10:0] prior_outputs_0_14_V_address0;
output   prior_outputs_0_14_V_ce0;
input  [15:0] prior_outputs_0_14_V_q0;
output  [10:0] prior_outputs_0_15_V_address0;
output   prior_outputs_0_15_V_ce0;
input  [15:0] prior_outputs_0_15_V_q0;
output  [10:0] prior_outputs_1_0_V_address0;
output   prior_outputs_1_0_V_ce0;
input  [15:0] prior_outputs_1_0_V_q0;
output  [10:0] prior_outputs_1_1_V_address0;
output   prior_outputs_1_1_V_ce0;
input  [15:0] prior_outputs_1_1_V_q0;
output  [10:0] prior_outputs_1_2_V_address0;
output   prior_outputs_1_2_V_ce0;
input  [15:0] prior_outputs_1_2_V_q0;
output  [10:0] prior_outputs_1_3_V_address0;
output   prior_outputs_1_3_V_ce0;
input  [15:0] prior_outputs_1_3_V_q0;
output  [10:0] prior_outputs_1_4_V_address0;
output   prior_outputs_1_4_V_ce0;
input  [15:0] prior_outputs_1_4_V_q0;
output  [10:0] prior_outputs_1_5_V_address0;
output   prior_outputs_1_5_V_ce0;
input  [15:0] prior_outputs_1_5_V_q0;
output  [10:0] prior_outputs_1_6_V_address0;
output   prior_outputs_1_6_V_ce0;
input  [15:0] prior_outputs_1_6_V_q0;
output  [10:0] prior_outputs_1_7_V_address0;
output   prior_outputs_1_7_V_ce0;
input  [15:0] prior_outputs_1_7_V_q0;
output  [10:0] prior_outputs_1_8_V_address0;
output   prior_outputs_1_8_V_ce0;
input  [15:0] prior_outputs_1_8_V_q0;
output  [10:0] prior_outputs_1_9_V_address0;
output   prior_outputs_1_9_V_ce0;
input  [15:0] prior_outputs_1_9_V_q0;
output  [10:0] prior_outputs_1_10_V_address0;
output   prior_outputs_1_10_V_ce0;
input  [15:0] prior_outputs_1_10_V_q0;
output  [10:0] prior_outputs_1_11_V_address0;
output   prior_outputs_1_11_V_ce0;
input  [15:0] prior_outputs_1_11_V_q0;
output  [10:0] prior_outputs_1_12_V_address0;
output   prior_outputs_1_12_V_ce0;
input  [15:0] prior_outputs_1_12_V_q0;
output  [10:0] prior_outputs_1_13_V_address0;
output   prior_outputs_1_13_V_ce0;
input  [15:0] prior_outputs_1_13_V_q0;
output  [10:0] prior_outputs_1_14_V_address0;
output   prior_outputs_1_14_V_ce0;
input  [15:0] prior_outputs_1_14_V_q0;
output  [10:0] prior_outputs_1_15_V_address0;
output   prior_outputs_1_15_V_ce0;
input  [15:0] prior_outputs_1_15_V_q0;
output  [10:0] prior_outputs_2_0_V_address0;
output   prior_outputs_2_0_V_ce0;
input  [15:0] prior_outputs_2_0_V_q0;
output  [10:0] prior_outputs_2_1_V_address0;
output   prior_outputs_2_1_V_ce0;
input  [15:0] prior_outputs_2_1_V_q0;
output  [10:0] prior_outputs_2_2_V_address0;
output   prior_outputs_2_2_V_ce0;
input  [15:0] prior_outputs_2_2_V_q0;
output  [10:0] prior_outputs_2_3_V_address0;
output   prior_outputs_2_3_V_ce0;
input  [15:0] prior_outputs_2_3_V_q0;
output  [10:0] prior_outputs_2_4_V_address0;
output   prior_outputs_2_4_V_ce0;
input  [15:0] prior_outputs_2_4_V_q0;
output  [10:0] prior_outputs_2_5_V_address0;
output   prior_outputs_2_5_V_ce0;
input  [15:0] prior_outputs_2_5_V_q0;
output  [10:0] prior_outputs_2_6_V_address0;
output   prior_outputs_2_6_V_ce0;
input  [15:0] prior_outputs_2_6_V_q0;
output  [10:0] prior_outputs_2_7_V_address0;
output   prior_outputs_2_7_V_ce0;
input  [15:0] prior_outputs_2_7_V_q0;
output  [10:0] prior_outputs_2_8_V_address0;
output   prior_outputs_2_8_V_ce0;
input  [15:0] prior_outputs_2_8_V_q0;
output  [10:0] prior_outputs_2_9_V_address0;
output   prior_outputs_2_9_V_ce0;
input  [15:0] prior_outputs_2_9_V_q0;
output  [10:0] prior_outputs_2_10_V_address0;
output   prior_outputs_2_10_V_ce0;
input  [15:0] prior_outputs_2_10_V_q0;
output  [10:0] prior_outputs_2_11_V_address0;
output   prior_outputs_2_11_V_ce0;
input  [15:0] prior_outputs_2_11_V_q0;
output  [10:0] prior_outputs_2_12_V_address0;
output   prior_outputs_2_12_V_ce0;
input  [15:0] prior_outputs_2_12_V_q0;
output  [10:0] prior_outputs_2_13_V_address0;
output   prior_outputs_2_13_V_ce0;
input  [15:0] prior_outputs_2_13_V_q0;
output  [10:0] prior_outputs_2_14_V_address0;
output   prior_outputs_2_14_V_ce0;
input  [15:0] prior_outputs_2_14_V_q0;
output  [10:0] prior_outputs_2_15_V_address0;
output   prior_outputs_2_15_V_ce0;
input  [15:0] prior_outputs_2_15_V_q0;
output  [10:0] prior_outputs_3_0_V_address0;
output   prior_outputs_3_0_V_ce0;
input  [15:0] prior_outputs_3_0_V_q0;
output  [10:0] prior_outputs_3_1_V_address0;
output   prior_outputs_3_1_V_ce0;
input  [15:0] prior_outputs_3_1_V_q0;
output  [10:0] prior_outputs_3_2_V_address0;
output   prior_outputs_3_2_V_ce0;
input  [15:0] prior_outputs_3_2_V_q0;
output  [10:0] prior_outputs_3_3_V_address0;
output   prior_outputs_3_3_V_ce0;
input  [15:0] prior_outputs_3_3_V_q0;
output  [10:0] prior_outputs_3_4_V_address0;
output   prior_outputs_3_4_V_ce0;
input  [15:0] prior_outputs_3_4_V_q0;
output  [10:0] prior_outputs_3_5_V_address0;
output   prior_outputs_3_5_V_ce0;
input  [15:0] prior_outputs_3_5_V_q0;
output  [10:0] prior_outputs_3_6_V_address0;
output   prior_outputs_3_6_V_ce0;
input  [15:0] prior_outputs_3_6_V_q0;
output  [10:0] prior_outputs_3_7_V_address0;
output   prior_outputs_3_7_V_ce0;
input  [15:0] prior_outputs_3_7_V_q0;
output  [10:0] prior_outputs_3_8_V_address0;
output   prior_outputs_3_8_V_ce0;
input  [15:0] prior_outputs_3_8_V_q0;
output  [10:0] prior_outputs_3_9_V_address0;
output   prior_outputs_3_9_V_ce0;
input  [15:0] prior_outputs_3_9_V_q0;
output  [10:0] prior_outputs_3_10_V_address0;
output   prior_outputs_3_10_V_ce0;
input  [15:0] prior_outputs_3_10_V_q0;
output  [10:0] prior_outputs_3_11_V_address0;
output   prior_outputs_3_11_V_ce0;
input  [15:0] prior_outputs_3_11_V_q0;
output  [10:0] prior_outputs_3_12_V_address0;
output   prior_outputs_3_12_V_ce0;
input  [15:0] prior_outputs_3_12_V_q0;
output  [10:0] prior_outputs_3_13_V_address0;
output   prior_outputs_3_13_V_ce0;
input  [15:0] prior_outputs_3_13_V_q0;
output  [10:0] prior_outputs_3_14_V_address0;
output   prior_outputs_3_14_V_ce0;
input  [15:0] prior_outputs_3_14_V_q0;
output  [10:0] prior_outputs_3_15_V_address0;
output   prior_outputs_3_15_V_ce0;
input  [15:0] prior_outputs_3_15_V_q0;
output  [10:0] msb_buffer_0_V_address0;
output   msb_buffer_0_V_ce0;
input  [63:0] msb_buffer_0_V_q0;
output  [10:0] msb_buffer_0_V_address1;
output   msb_buffer_0_V_ce1;
output   msb_buffer_0_V_we1;
output  [63:0] msb_buffer_0_V_d1;
output  [10:0] msb_buffer_1_V_address0;
output   msb_buffer_1_V_ce0;
input  [63:0] msb_buffer_1_V_q0;
output  [10:0] msb_buffer_1_V_address1;
output   msb_buffer_1_V_ce1;
output   msb_buffer_1_V_we1;
output  [63:0] msb_buffer_1_V_d1;
input  [6:0] H_fmap;
input  [7:0] in_channels;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg prior_outputs_0_0_V_ce0;
reg prior_outputs_0_1_V_ce0;
reg prior_outputs_0_2_V_ce0;
reg prior_outputs_0_3_V_ce0;
reg prior_outputs_0_4_V_ce0;
reg prior_outputs_0_5_V_ce0;
reg prior_outputs_0_6_V_ce0;
reg prior_outputs_0_7_V_ce0;
reg prior_outputs_0_8_V_ce0;
reg prior_outputs_0_9_V_ce0;
reg prior_outputs_0_10_V_ce0;
reg prior_outputs_0_11_V_ce0;
reg prior_outputs_0_12_V_ce0;
reg prior_outputs_0_13_V_ce0;
reg prior_outputs_0_14_V_ce0;
reg prior_outputs_0_15_V_ce0;
reg prior_outputs_1_0_V_ce0;
reg prior_outputs_1_1_V_ce0;
reg prior_outputs_1_2_V_ce0;
reg prior_outputs_1_3_V_ce0;
reg prior_outputs_1_4_V_ce0;
reg prior_outputs_1_5_V_ce0;
reg prior_outputs_1_6_V_ce0;
reg prior_outputs_1_7_V_ce0;
reg prior_outputs_1_8_V_ce0;
reg prior_outputs_1_9_V_ce0;
reg prior_outputs_1_10_V_ce0;
reg prior_outputs_1_11_V_ce0;
reg prior_outputs_1_12_V_ce0;
reg prior_outputs_1_13_V_ce0;
reg prior_outputs_1_14_V_ce0;
reg prior_outputs_1_15_V_ce0;
reg prior_outputs_2_0_V_ce0;
reg prior_outputs_2_1_V_ce0;
reg prior_outputs_2_2_V_ce0;
reg prior_outputs_2_3_V_ce0;
reg prior_outputs_2_4_V_ce0;
reg prior_outputs_2_5_V_ce0;
reg prior_outputs_2_6_V_ce0;
reg prior_outputs_2_7_V_ce0;
reg prior_outputs_2_8_V_ce0;
reg prior_outputs_2_9_V_ce0;
reg prior_outputs_2_10_V_ce0;
reg prior_outputs_2_11_V_ce0;
reg prior_outputs_2_12_V_ce0;
reg prior_outputs_2_13_V_ce0;
reg prior_outputs_2_14_V_ce0;
reg prior_outputs_2_15_V_ce0;
reg prior_outputs_3_0_V_ce0;
reg prior_outputs_3_1_V_ce0;
reg prior_outputs_3_2_V_ce0;
reg prior_outputs_3_3_V_ce0;
reg prior_outputs_3_4_V_ce0;
reg prior_outputs_3_5_V_ce0;
reg prior_outputs_3_6_V_ce0;
reg prior_outputs_3_7_V_ce0;
reg prior_outputs_3_8_V_ce0;
reg prior_outputs_3_9_V_ce0;
reg prior_outputs_3_10_V_ce0;
reg prior_outputs_3_11_V_ce0;
reg prior_outputs_3_12_V_ce0;
reg prior_outputs_3_13_V_ce0;
reg prior_outputs_3_14_V_ce0;
reg prior_outputs_3_15_V_ce0;
reg msb_buffer_0_V_ce0;
reg msb_buffer_0_V_ce1;
reg msb_buffer_0_V_we1;
reg[63:0] msb_buffer_0_V_d1;
reg msb_buffer_1_V_ce0;
reg msb_buffer_1_V_ce1;
reg msb_buffer_1_V_we1;
reg[63:0] msb_buffer_1_V_d1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [13:0] indvar_flatten16_reg_1140;
reg   [2:0] ch_t_0_reg_1151;
reg   [11:0] indvar_flatten_reg_1162;
reg   [5:0] row_0_reg_1173;
reg   [5:0] col_0_reg_1184;
wire   [5:0] empty_fu_1467_p1;
reg   [5:0] empty_reg_3358;
wire   [11:0] mul_ln29_fu_1479_p2;
reg   [11:0] mul_ln29_reg_3363;
wire   [13:0] tmp_16_fu_1485_p3;
reg   [13:0] tmp_16_reg_3368;
wire   [0:0] icmp_ln39_fu_1493_p2;
reg   [0:0] icmp_ln39_reg_3373;
wire   [0:0] icmp_ln37_fu_1745_p2;
reg   [0:0] icmp_ln37_reg_3378;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln37_reg_3378_pp0_iter1_reg;
reg   [0:0] icmp_ln37_reg_3378_pp0_iter2_reg;
reg   [0:0] icmp_ln37_reg_3378_pp0_iter3_reg;
wire   [13:0] add_ln37_fu_1750_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] select_ln37_1_fu_1791_p3;
reg   [2:0] select_ln37_1_reg_3387;
wire   [1:0] trunc_ln37_fu_1799_p1;
reg   [1:0] trunc_ln37_reg_3392;
reg   [1:0] trunc_ln37_reg_3392_pp0_iter1_reg;
wire   [0:0] select_ln37_2_fu_1808_p3;
reg   [0:0] select_ln37_2_reg_3412;
reg   [0:0] select_ln37_2_reg_3412_pp0_iter1_reg;
reg   [0:0] select_ln37_2_reg_3412_pp0_iter2_reg;
reg   [0:0] select_ln37_2_reg_3412_pp0_iter3_reg;
wire   [5:0] select_ln37_3_fu_1816_p3;
reg   [5:0] select_ln37_3_reg_3416;
reg   [5:0] select_ln37_3_reg_3416_pp0_iter1_reg;
reg   [5:0] select_ln37_3_reg_3416_pp0_iter2_reg;
reg   [5:0] select_ln37_3_reg_3416_pp0_iter3_reg;
wire   [0:0] select_ln37_4_fu_1839_p3;
reg   [0:0] select_ln37_4_reg_3436;
reg   [0:0] select_ln37_4_reg_3436_pp0_iter1_reg;
reg   [0:0] select_ln37_4_reg_3436_pp0_iter2_reg;
reg   [0:0] select_ln37_4_reg_3436_pp0_iter3_reg;
wire   [0:0] select_ln37_5_fu_1862_p3;
reg   [0:0] select_ln37_5_reg_3440;
reg   [0:0] select_ln37_5_reg_3440_pp0_iter1_reg;
reg   [0:0] select_ln37_5_reg_3440_pp0_iter2_reg;
reg   [0:0] select_ln37_5_reg_3440_pp0_iter3_reg;
wire   [0:0] select_ln37_6_fu_1885_p3;
reg   [0:0] select_ln37_6_reg_3444;
reg   [0:0] select_ln37_6_reg_3444_pp0_iter1_reg;
reg   [0:0] select_ln37_6_reg_3444_pp0_iter2_reg;
reg   [0:0] select_ln37_6_reg_3444_pp0_iter3_reg;
wire   [0:0] select_ln37_7_fu_1908_p3;
reg   [0:0] select_ln37_7_reg_3448;
reg   [0:0] select_ln37_7_reg_3448_pp0_iter1_reg;
reg   [0:0] select_ln37_7_reg_3448_pp0_iter2_reg;
reg   [0:0] select_ln37_7_reg_3448_pp0_iter3_reg;
wire   [0:0] select_ln37_8_fu_1931_p3;
reg   [0:0] select_ln37_8_reg_3452;
reg   [0:0] select_ln37_8_reg_3452_pp0_iter1_reg;
reg   [0:0] select_ln37_8_reg_3452_pp0_iter2_reg;
reg   [0:0] select_ln37_8_reg_3452_pp0_iter3_reg;
wire   [0:0] select_ln37_9_fu_1954_p3;
reg   [0:0] select_ln37_9_reg_3456;
reg   [0:0] select_ln37_9_reg_3456_pp0_iter1_reg;
reg   [0:0] select_ln37_9_reg_3456_pp0_iter2_reg;
reg   [0:0] select_ln37_9_reg_3456_pp0_iter3_reg;
wire   [0:0] select_ln37_10_fu_1977_p3;
reg   [0:0] select_ln37_10_reg_3460;
reg   [0:0] select_ln37_10_reg_3460_pp0_iter1_reg;
reg   [0:0] select_ln37_10_reg_3460_pp0_iter2_reg;
reg   [0:0] select_ln37_10_reg_3460_pp0_iter3_reg;
wire   [0:0] select_ln37_11_fu_2000_p3;
reg   [0:0] select_ln37_11_reg_3464;
reg   [0:0] select_ln37_11_reg_3464_pp0_iter1_reg;
reg   [0:0] select_ln37_11_reg_3464_pp0_iter2_reg;
reg   [0:0] select_ln37_11_reg_3464_pp0_iter3_reg;
wire   [0:0] select_ln37_12_fu_2023_p3;
reg   [0:0] select_ln37_12_reg_3468;
reg   [0:0] select_ln37_12_reg_3468_pp0_iter1_reg;
reg   [0:0] select_ln37_12_reg_3468_pp0_iter2_reg;
reg   [0:0] select_ln37_12_reg_3468_pp0_iter3_reg;
wire   [0:0] select_ln37_13_fu_2046_p3;
reg   [0:0] select_ln37_13_reg_3472;
reg   [0:0] select_ln37_13_reg_3472_pp0_iter1_reg;
reg   [0:0] select_ln37_13_reg_3472_pp0_iter2_reg;
reg   [0:0] select_ln37_13_reg_3472_pp0_iter3_reg;
wire   [0:0] select_ln37_14_fu_2069_p3;
reg   [0:0] select_ln37_14_reg_3476;
reg   [0:0] select_ln37_14_reg_3476_pp0_iter1_reg;
reg   [0:0] select_ln37_14_reg_3476_pp0_iter2_reg;
reg   [0:0] select_ln37_14_reg_3476_pp0_iter3_reg;
wire   [0:0] select_ln37_15_fu_2092_p3;
reg   [0:0] select_ln37_15_reg_3480;
reg   [0:0] select_ln37_15_reg_3480_pp0_iter1_reg;
reg   [0:0] select_ln37_15_reg_3480_pp0_iter2_reg;
reg   [0:0] select_ln37_15_reg_3480_pp0_iter3_reg;
wire   [0:0] select_ln37_16_fu_2115_p3;
reg   [0:0] select_ln37_16_reg_3484;
reg   [0:0] select_ln37_16_reg_3484_pp0_iter1_reg;
reg   [0:0] select_ln37_16_reg_3484_pp0_iter2_reg;
reg   [0:0] select_ln37_16_reg_3484_pp0_iter3_reg;
wire   [0:0] select_ln37_17_fu_2138_p3;
reg   [0:0] select_ln37_17_reg_3488;
reg   [0:0] select_ln37_17_reg_3488_pp0_iter1_reg;
reg   [0:0] select_ln37_17_reg_3488_pp0_iter2_reg;
reg   [0:0] select_ln37_17_reg_3488_pp0_iter3_reg;
wire   [0:0] select_ln37_18_fu_2161_p3;
reg   [0:0] select_ln37_18_reg_3492;
reg   [0:0] select_ln37_18_reg_3492_pp0_iter1_reg;
reg   [0:0] select_ln37_18_reg_3492_pp0_iter2_reg;
reg   [0:0] select_ln37_18_reg_3492_pp0_iter3_reg;
wire   [5:0] select_ln38_fu_2193_p3;
reg   [5:0] select_ln38_reg_3496;
wire   [5:0] select_ln38_1_fu_2201_p3;
reg   [5:0] select_ln38_1_reg_3501;
wire   [5:0] col_fu_2209_p2;
wire   [11:0] select_ln38_2_fu_2221_p3;
reg   [10:0] msb_buffer_0_V_addr_reg_3838;
reg   [10:0] msb_buffer_0_V_addr_reg_3838_pp0_iter2_reg;
reg   [10:0] msb_buffer_0_V_addr_reg_3838_pp0_iter3_reg;
reg   [10:0] msb_buffer_1_V_addr_reg_3844;
reg   [10:0] msb_buffer_1_V_addr_reg_3844_pp0_iter2_reg;
reg   [10:0] msb_buffer_1_V_addr_reg_3844_pp0_iter3_reg;
wire   [15:0] tmp_1_fu_2328_p6;
reg   [15:0] tmp_1_reg_3850;
wire   [15:0] tmp_2_fu_2341_p6;
reg   [15:0] tmp_2_reg_3855;
wire   [15:0] tmp_3_fu_2354_p6;
reg   [15:0] tmp_3_reg_3860;
wire   [15:0] tmp_4_fu_2367_p6;
reg   [15:0] tmp_4_reg_3865;
wire   [15:0] tmp_5_fu_2380_p6;
reg   [15:0] tmp_5_reg_3870;
wire   [15:0] tmp_6_fu_2393_p6;
reg   [15:0] tmp_6_reg_3875;
wire   [15:0] tmp_7_fu_2406_p6;
reg   [15:0] tmp_7_reg_3880;
wire   [15:0] tmp_8_fu_2419_p6;
reg   [15:0] tmp_8_reg_3885;
wire   [15:0] tmp_9_fu_2432_p6;
reg   [15:0] tmp_9_reg_3890;
wire   [15:0] tmp_s_fu_2445_p6;
reg   [15:0] tmp_s_reg_3895;
wire   [15:0] tmp_10_fu_2458_p6;
reg   [15:0] tmp_10_reg_3900;
wire   [15:0] tmp_11_fu_2471_p6;
reg   [15:0] tmp_11_reg_3905;
wire   [15:0] tmp_12_fu_2484_p6;
reg   [15:0] tmp_12_reg_3910;
wire   [15:0] tmp_13_fu_2497_p6;
reg   [15:0] tmp_13_reg_3915;
wire   [15:0] tmp_14_fu_2510_p6;
reg   [15:0] tmp_14_reg_3920;
wire   [15:0] tmp_15_fu_2523_p6;
reg   [15:0] tmp_15_reg_3925;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
wire   [1:0] grp_to2bit_fu_1371_ap_return;
wire   [1:0] grp_to2bit_fu_1377_ap_return;
wire   [1:0] grp_to2bit_fu_1383_ap_return;
wire   [1:0] grp_to2bit_fu_1389_ap_return;
wire   [1:0] grp_to2bit_fu_1395_ap_return;
wire   [1:0] grp_to2bit_fu_1401_ap_return;
wire   [1:0] grp_to2bit_fu_1407_ap_return;
wire   [1:0] grp_to2bit_fu_1413_ap_return;
wire   [1:0] grp_to2bit_fu_1419_ap_return;
wire   [1:0] grp_to2bit_fu_1425_ap_return;
wire   [1:0] grp_to2bit_fu_1431_ap_return;
wire   [1:0] grp_to2bit_fu_1437_ap_return;
wire   [1:0] grp_to2bit_fu_1443_ap_return;
wire   [1:0] grp_to2bit_fu_1449_ap_return;
wire   [1:0] grp_to2bit_fu_1455_ap_return;
wire   [1:0] grp_to2bit_fu_1461_ap_return;
reg   [2:0] ap_phi_mux_ch_t_0_phi_fu_1155_p4;
wire    ap_block_pp0_stage0;
reg   [5:0] ap_phi_mux_row_0_phi_fu_1177_p4;
reg   [1:0] ap_phi_mux_p_Val2_0_phi_fu_1199_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_0_reg_1195;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_0_reg_1195;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_0_reg_1195;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_0_reg_1195;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_0_reg_1195;
reg   [1:0] ap_phi_mux_p_Val2_1_phi_fu_1210_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_1_reg_1206;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_1_reg_1206;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_1_reg_1206;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_1_reg_1206;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_1_reg_1206;
reg   [1:0] ap_phi_mux_p_Val2_2_phi_fu_1221_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_2_reg_1217;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_2_reg_1217;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_2_reg_1217;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_2_reg_1217;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_2_reg_1217;
reg   [1:0] ap_phi_mux_p_Val2_3_phi_fu_1232_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_3_reg_1228;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_3_reg_1228;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_3_reg_1228;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_3_reg_1228;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_3_reg_1228;
reg   [1:0] ap_phi_mux_p_Val2_4_phi_fu_1243_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_4_reg_1239;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_4_reg_1239;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_4_reg_1239;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_4_reg_1239;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_4_reg_1239;
reg   [1:0] ap_phi_mux_p_Val2_58_phi_fu_1254_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_58_reg_1250;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_58_reg_1250;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_58_reg_1250;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_58_reg_1250;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_58_reg_1250;
reg   [1:0] ap_phi_mux_p_Val2_69_phi_fu_1265_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_69_reg_1261;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_69_reg_1261;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_69_reg_1261;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_69_reg_1261;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_69_reg_1261;
reg   [1:0] ap_phi_mux_p_Val2_7_phi_fu_1276_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_7_reg_1272;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_7_reg_1272;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_7_reg_1272;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_7_reg_1272;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_7_reg_1272;
reg   [1:0] ap_phi_mux_p_Val2_8_phi_fu_1287_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_8_reg_1283;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_8_reg_1283;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_8_reg_1283;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_8_reg_1283;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_8_reg_1283;
reg   [1:0] ap_phi_mux_p_Val2_9_phi_fu_1298_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_9_reg_1294;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_9_reg_1294;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_9_reg_1294;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_9_reg_1294;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_9_reg_1294;
reg   [1:0] ap_phi_mux_p_Val2_10_phi_fu_1309_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_10_reg_1305;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_10_reg_1305;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_10_reg_1305;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_10_reg_1305;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_10_reg_1305;
reg   [1:0] ap_phi_mux_p_Val2_11_phi_fu_1320_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_11_reg_1316;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_11_reg_1316;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_11_reg_1316;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_11_reg_1316;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_11_reg_1316;
reg   [1:0] ap_phi_mux_p_Val2_12_phi_fu_1331_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_12_reg_1327;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_12_reg_1327;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_12_reg_1327;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_12_reg_1327;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_12_reg_1327;
reg   [1:0] ap_phi_mux_p_Val2_13_phi_fu_1342_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_13_reg_1338;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_13_reg_1338;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_13_reg_1338;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_13_reg_1338;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_13_reg_1338;
reg   [1:0] ap_phi_mux_p_Val2_14_phi_fu_1353_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_14_reg_1349;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_14_reg_1349;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_14_reg_1349;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_14_reg_1349;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_14_reg_1349;
reg   [1:0] ap_phi_mux_p_Val2_15_phi_fu_1364_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_15_reg_1360;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_15_reg_1360;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_15_reg_1360;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_15_reg_1360;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_15_reg_1360;
wire   [63:0] zext_ln43_2_fu_2258_p1;
wire   [6:0] mul_ln29_fu_1479_p0;
wire   [5:0] mul_ln29_fu_1479_p1;
wire   [1:0] trunc_ln41_fu_1499_p1;
wire   [5:0] channel_start_fu_1503_p3;
wire   [7:0] zext_ln41_fu_1511_p1;
wire   [5:0] or_ln44_fu_1520_p2;
wire   [7:0] zext_ln44_fu_1526_p1;
wire   [5:0] or_ln44_1_fu_1535_p2;
wire   [7:0] zext_ln44_1_fu_1541_p1;
wire   [5:0] or_ln44_2_fu_1550_p2;
wire   [7:0] zext_ln44_2_fu_1556_p1;
wire   [5:0] or_ln44_3_fu_1565_p2;
wire   [7:0] zext_ln44_3_fu_1571_p1;
wire   [5:0] or_ln44_4_fu_1580_p2;
wire   [7:0] zext_ln44_4_fu_1586_p1;
wire   [5:0] or_ln44_5_fu_1595_p2;
wire   [7:0] zext_ln44_5_fu_1601_p1;
wire   [5:0] or_ln44_6_fu_1610_p2;
wire   [7:0] zext_ln44_6_fu_1616_p1;
wire   [5:0] or_ln44_7_fu_1625_p2;
wire   [7:0] zext_ln44_7_fu_1631_p1;
wire   [5:0] or_ln44_8_fu_1640_p2;
wire   [7:0] zext_ln44_8_fu_1646_p1;
wire   [5:0] or_ln44_9_fu_1655_p2;
wire   [7:0] zext_ln44_9_fu_1661_p1;
wire   [5:0] or_ln44_10_fu_1670_p2;
wire   [7:0] zext_ln44_10_fu_1676_p1;
wire   [5:0] or_ln44_11_fu_1685_p2;
wire   [7:0] zext_ln44_11_fu_1691_p1;
wire   [5:0] or_ln44_12_fu_1700_p2;
wire   [7:0] zext_ln44_12_fu_1706_p1;
wire   [5:0] or_ln44_13_fu_1715_p2;
wire   [7:0] zext_ln44_13_fu_1721_p1;
wire   [5:0] or_ln44_14_fu_1730_p2;
wire   [7:0] zext_ln44_14_fu_1736_p1;
wire   [0:0] icmp_ln38_fu_1762_p2;
wire   [2:0] ch_t_fu_1756_p2;
wire   [1:0] trunc_ln41_1_fu_1775_p1;
wire   [5:0] channel_start_mid1_fu_1779_p3;
wire   [7:0] zext_ln41_1_fu_1787_p1;
wire   [0:0] icmp_ln45_16_fu_1803_p2;
wire   [0:0] icmp_ln45_fu_1515_p2;
wire   [5:0] or_ln44_15_fu_1824_p2;
wire   [7:0] zext_ln44_15_fu_1830_p1;
wire   [0:0] icmp_ln45_17_fu_1834_p2;
wire   [0:0] icmp_ln45_1_fu_1530_p2;
wire   [5:0] or_ln44_16_fu_1847_p2;
wire   [7:0] zext_ln44_16_fu_1853_p1;
wire   [0:0] icmp_ln45_18_fu_1857_p2;
wire   [0:0] icmp_ln45_2_fu_1545_p2;
wire   [5:0] or_ln44_17_fu_1870_p2;
wire   [7:0] zext_ln44_17_fu_1876_p1;
wire   [0:0] icmp_ln45_19_fu_1880_p2;
wire   [0:0] icmp_ln45_3_fu_1560_p2;
wire   [5:0] or_ln44_18_fu_1893_p2;
wire   [7:0] zext_ln44_18_fu_1899_p1;
wire   [0:0] icmp_ln45_20_fu_1903_p2;
wire   [0:0] icmp_ln45_4_fu_1575_p2;
wire   [5:0] or_ln44_19_fu_1916_p2;
wire   [7:0] zext_ln44_19_fu_1922_p1;
wire   [0:0] icmp_ln45_21_fu_1926_p2;
wire   [0:0] icmp_ln45_5_fu_1590_p2;
wire   [5:0] or_ln44_20_fu_1939_p2;
wire   [7:0] zext_ln44_20_fu_1945_p1;
wire   [0:0] icmp_ln45_22_fu_1949_p2;
wire   [0:0] icmp_ln45_6_fu_1605_p2;
wire   [5:0] or_ln44_21_fu_1962_p2;
wire   [7:0] zext_ln44_21_fu_1968_p1;
wire   [0:0] icmp_ln45_23_fu_1972_p2;
wire   [0:0] icmp_ln45_7_fu_1620_p2;
wire   [5:0] or_ln44_22_fu_1985_p2;
wire   [7:0] zext_ln44_22_fu_1991_p1;
wire   [0:0] icmp_ln45_24_fu_1995_p2;
wire   [0:0] icmp_ln45_8_fu_1635_p2;
wire   [5:0] or_ln44_23_fu_2008_p2;
wire   [7:0] zext_ln44_23_fu_2014_p1;
wire   [0:0] icmp_ln45_25_fu_2018_p2;
wire   [0:0] icmp_ln45_9_fu_1650_p2;
wire   [5:0] or_ln44_24_fu_2031_p2;
wire   [7:0] zext_ln44_24_fu_2037_p1;
wire   [0:0] icmp_ln45_26_fu_2041_p2;
wire   [0:0] icmp_ln45_10_fu_1665_p2;
wire   [5:0] or_ln44_25_fu_2054_p2;
wire   [7:0] zext_ln44_25_fu_2060_p1;
wire   [0:0] icmp_ln45_27_fu_2064_p2;
wire   [0:0] icmp_ln45_11_fu_1680_p2;
wire   [5:0] or_ln44_26_fu_2077_p2;
wire   [7:0] zext_ln44_26_fu_2083_p1;
wire   [0:0] icmp_ln45_28_fu_2087_p2;
wire   [0:0] icmp_ln45_12_fu_1695_p2;
wire   [5:0] or_ln44_27_fu_2100_p2;
wire   [7:0] zext_ln44_27_fu_2106_p1;
wire   [0:0] icmp_ln45_29_fu_2110_p2;
wire   [0:0] icmp_ln45_13_fu_1710_p2;
wire   [5:0] or_ln44_28_fu_2123_p2;
wire   [7:0] zext_ln44_28_fu_2129_p1;
wire   [0:0] icmp_ln45_30_fu_2133_p2;
wire   [0:0] icmp_ln45_14_fu_1725_p2;
wire   [5:0] or_ln44_29_fu_2146_p2;
wire   [7:0] zext_ln44_29_fu_2152_p1;
wire   [0:0] icmp_ln45_31_fu_2156_p2;
wire   [0:0] icmp_ln45_15_fu_1740_p2;
wire   [0:0] icmp_ln39_1_fu_2169_p2;
wire   [5:0] select_ln37_fu_1767_p3;
wire   [0:0] select_ln37_19_fu_2174_p3;
wire   [0:0] or_ln38_fu_2187_p2;
wire   [5:0] row_fu_2181_p2;
wire   [11:0] add_ln38_1_fu_2215_p2;
wire   [10:0] tmp_17_fu_2232_p3;
wire   [11:0] zext_ln38_fu_2229_p1;
wire   [11:0] zext_ln43_fu_2239_p1;
wire   [11:0] add_ln43_fu_2243_p2;
wire   [11:0] zext_ln43_1_fu_2249_p1;
wire   [11:0] add_ln43_1_fu_2252_p2;
wire   [5:0] xor_ln37_fu_2536_p2;
wire   [5:0] xor_ln37_1_fu_2545_p2;
wire   [5:0] xor_ln37_2_fu_2554_p2;
wire   [5:0] xor_ln37_3_fu_2563_p2;
wire   [5:0] xor_ln37_4_fu_2572_p2;
wire   [5:0] xor_ln37_5_fu_2581_p2;
wire   [5:0] xor_ln37_6_fu_2590_p2;
wire   [5:0] xor_ln37_7_fu_2599_p2;
wire   [5:0] xor_ln37_8_fu_2608_p2;
wire   [5:0] xor_ln37_9_fu_2617_p2;
wire   [5:0] xor_ln37_10_fu_2626_p2;
wire   [5:0] xor_ln37_11_fu_2635_p2;
wire   [5:0] xor_ln37_12_fu_2644_p2;
wire   [5:0] xor_ln37_13_fu_2653_p2;
wire   [5:0] xor_ln37_14_fu_2662_p2;
wire   [5:0] xor_ln37_15_fu_2671_p2;
wire   [0:0] tmp_18_fu_2684_p3;
wire   [31:0] zext_ln37_fu_2541_p1;
wire   [63:0] zext_ln821_fu_2692_p1;
wire   [0:0] trunc_ln821_fu_2680_p1;
wire   [63:0] zext_ln821_1_fu_2706_p1;
wire   [0:0] tmp_21_fu_2724_p3;
reg   [63:0] tmp_19_fu_2696_p4;
wire   [31:0] zext_ln37_1_fu_2550_p1;
wire   [63:0] zext_ln821_2_fu_2732_p1;
wire   [0:0] trunc_ln821_1_fu_2720_p1;
reg   [63:0] tmp_20_fu_2710_p4;
wire   [63:0] zext_ln821_3_fu_2746_p1;
wire   [0:0] tmp_24_fu_2764_p3;
reg   [63:0] tmp_22_fu_2736_p4;
wire   [31:0] zext_ln37_2_fu_2559_p1;
wire   [63:0] zext_ln821_4_fu_2772_p1;
wire   [0:0] trunc_ln821_2_fu_2760_p1;
reg   [63:0] tmp_23_fu_2750_p4;
wire   [63:0] zext_ln821_5_fu_2786_p1;
wire   [0:0] tmp_27_fu_2804_p3;
reg   [63:0] tmp_25_fu_2776_p4;
wire   [31:0] zext_ln37_3_fu_2568_p1;
wire   [63:0] zext_ln821_6_fu_2812_p1;
wire   [0:0] trunc_ln821_3_fu_2800_p1;
reg   [63:0] tmp_26_fu_2790_p4;
wire   [63:0] zext_ln821_7_fu_2826_p1;
wire   [0:0] tmp_30_fu_2844_p3;
reg   [63:0] tmp_28_fu_2816_p4;
wire   [31:0] zext_ln37_4_fu_2577_p1;
wire   [63:0] zext_ln821_8_fu_2852_p1;
wire   [0:0] trunc_ln821_4_fu_2840_p1;
reg   [63:0] tmp_29_fu_2830_p4;
wire   [63:0] zext_ln821_9_fu_2866_p1;
wire   [0:0] tmp_33_fu_2884_p3;
reg   [63:0] tmp_31_fu_2856_p4;
wire   [31:0] zext_ln37_5_fu_2586_p1;
wire   [63:0] zext_ln821_10_fu_2892_p1;
wire   [0:0] trunc_ln821_5_fu_2880_p1;
reg   [63:0] tmp_32_fu_2870_p4;
wire   [63:0] zext_ln821_11_fu_2906_p1;
wire   [0:0] tmp_36_fu_2924_p3;
reg   [63:0] tmp_34_fu_2896_p4;
wire   [31:0] zext_ln37_6_fu_2595_p1;
wire   [63:0] zext_ln821_12_fu_2932_p1;
wire   [0:0] trunc_ln821_6_fu_2920_p1;
reg   [63:0] tmp_35_fu_2910_p4;
wire   [63:0] zext_ln821_13_fu_2946_p1;
wire   [0:0] tmp_39_fu_2964_p3;
reg   [63:0] tmp_37_fu_2936_p4;
wire   [31:0] zext_ln37_7_fu_2604_p1;
wire   [63:0] zext_ln821_14_fu_2972_p1;
wire   [0:0] trunc_ln821_7_fu_2960_p1;
reg   [63:0] tmp_38_fu_2950_p4;
wire   [63:0] zext_ln821_15_fu_2986_p1;
wire   [0:0] tmp_42_fu_3004_p3;
reg   [63:0] tmp_40_fu_2976_p4;
wire   [31:0] zext_ln37_8_fu_2613_p1;
wire   [63:0] zext_ln821_16_fu_3012_p1;
wire   [0:0] trunc_ln821_8_fu_3000_p1;
reg   [63:0] tmp_41_fu_2990_p4;
wire   [63:0] zext_ln821_17_fu_3026_p1;
wire   [0:0] tmp_45_fu_3044_p3;
reg   [63:0] tmp_43_fu_3016_p4;
wire   [31:0] zext_ln37_9_fu_2622_p1;
wire   [63:0] zext_ln821_18_fu_3052_p1;
wire   [0:0] trunc_ln821_9_fu_3040_p1;
reg   [63:0] tmp_44_fu_3030_p4;
wire   [63:0] zext_ln821_19_fu_3066_p1;
wire   [0:0] tmp_48_fu_3084_p3;
reg   [63:0] tmp_46_fu_3056_p4;
wire   [31:0] zext_ln37_10_fu_2631_p1;
wire   [63:0] zext_ln821_20_fu_3092_p1;
wire   [0:0] trunc_ln821_10_fu_3080_p1;
reg   [63:0] tmp_47_fu_3070_p4;
wire   [63:0] zext_ln821_21_fu_3106_p1;
wire   [0:0] tmp_51_fu_3124_p3;
reg   [63:0] tmp_49_fu_3096_p4;
wire   [31:0] zext_ln37_11_fu_2640_p1;
wire   [63:0] zext_ln821_22_fu_3132_p1;
wire   [0:0] trunc_ln821_11_fu_3120_p1;
reg   [63:0] tmp_50_fu_3110_p4;
wire   [63:0] zext_ln821_23_fu_3146_p1;
wire   [0:0] tmp_54_fu_3164_p3;
reg   [63:0] tmp_52_fu_3136_p4;
wire   [31:0] zext_ln37_12_fu_2649_p1;
wire   [63:0] zext_ln821_24_fu_3172_p1;
wire   [0:0] trunc_ln821_12_fu_3160_p1;
reg   [63:0] tmp_53_fu_3150_p4;
wire   [63:0] zext_ln821_25_fu_3186_p1;
wire   [0:0] tmp_57_fu_3204_p3;
reg   [63:0] tmp_55_fu_3176_p4;
wire   [31:0] zext_ln37_13_fu_2658_p1;
wire   [63:0] zext_ln821_26_fu_3212_p1;
wire   [0:0] trunc_ln821_13_fu_3200_p1;
reg   [63:0] tmp_56_fu_3190_p4;
wire   [63:0] zext_ln821_27_fu_3226_p1;
wire   [0:0] tmp_60_fu_3244_p3;
reg   [63:0] tmp_58_fu_3216_p4;
wire   [31:0] zext_ln37_14_fu_2667_p1;
wire   [63:0] zext_ln821_28_fu_3252_p1;
wire   [0:0] trunc_ln821_14_fu_3240_p1;
reg   [63:0] tmp_59_fu_3230_p4;
wire   [63:0] zext_ln821_29_fu_3266_p1;
wire   [0:0] tmp_63_fu_3284_p3;
reg   [63:0] tmp_61_fu_3256_p4;
wire   [31:0] zext_ln37_15_fu_2676_p1;
wire   [63:0] zext_ln821_30_fu_3292_p1;
wire   [0:0] trunc_ln821_15_fu_3280_p1;
reg   [63:0] tmp_62_fu_3270_p4;
wire   [63:0] zext_ln821_31_fu_3307_p1;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [11:0] mul_ln29_fu_1479_p00;
wire   [11:0] mul_ln29_fu_1479_p10;
reg    ap_condition_509;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

to2bit grp_to2bit_fu_1371(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(tmp_1_reg_3850),
    .ap_return(grp_to2bit_fu_1371_ap_return)
);

to2bit grp_to2bit_fu_1377(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(tmp_2_reg_3855),
    .ap_return(grp_to2bit_fu_1377_ap_return)
);

to2bit grp_to2bit_fu_1383(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(tmp_3_reg_3860),
    .ap_return(grp_to2bit_fu_1383_ap_return)
);

to2bit grp_to2bit_fu_1389(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(tmp_4_reg_3865),
    .ap_return(grp_to2bit_fu_1389_ap_return)
);

to2bit grp_to2bit_fu_1395(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(tmp_5_reg_3870),
    .ap_return(grp_to2bit_fu_1395_ap_return)
);

to2bit grp_to2bit_fu_1401(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(tmp_6_reg_3875),
    .ap_return(grp_to2bit_fu_1401_ap_return)
);

to2bit grp_to2bit_fu_1407(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(tmp_7_reg_3880),
    .ap_return(grp_to2bit_fu_1407_ap_return)
);

to2bit grp_to2bit_fu_1413(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(tmp_8_reg_3885),
    .ap_return(grp_to2bit_fu_1413_ap_return)
);

to2bit grp_to2bit_fu_1419(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(tmp_9_reg_3890),
    .ap_return(grp_to2bit_fu_1419_ap_return)
);

to2bit grp_to2bit_fu_1425(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(tmp_s_reg_3895),
    .ap_return(grp_to2bit_fu_1425_ap_return)
);

to2bit grp_to2bit_fu_1431(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(tmp_10_reg_3900),
    .ap_return(grp_to2bit_fu_1431_ap_return)
);

to2bit grp_to2bit_fu_1437(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(tmp_11_reg_3905),
    .ap_return(grp_to2bit_fu_1437_ap_return)
);

to2bit grp_to2bit_fu_1443(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(tmp_12_reg_3910),
    .ap_return(grp_to2bit_fu_1443_ap_return)
);

to2bit grp_to2bit_fu_1449(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(tmp_13_reg_3915),
    .ap_return(grp_to2bit_fu_1449_ap_return)
);

to2bit grp_to2bit_fu_1455(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(tmp_14_reg_3920),
    .ap_return(grp_to2bit_fu_1455_ap_return)
);

to2bit grp_to2bit_fu_1461(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(tmp_15_reg_3925),
    .ap_return(grp_to2bit_fu_1461_ap_return)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U320(
    .din0(prior_outputs_0_0_V_q0),
    .din1(prior_outputs_1_0_V_q0),
    .din2(prior_outputs_2_0_V_q0),
    .din3(prior_outputs_3_0_V_q0),
    .din4(trunc_ln37_reg_3392_pp0_iter1_reg),
    .dout(tmp_1_fu_2328_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U321(
    .din0(prior_outputs_0_1_V_q0),
    .din1(prior_outputs_1_1_V_q0),
    .din2(prior_outputs_2_1_V_q0),
    .din3(prior_outputs_3_1_V_q0),
    .din4(trunc_ln37_reg_3392_pp0_iter1_reg),
    .dout(tmp_2_fu_2341_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U322(
    .din0(prior_outputs_0_2_V_q0),
    .din1(prior_outputs_1_2_V_q0),
    .din2(prior_outputs_2_2_V_q0),
    .din3(prior_outputs_3_2_V_q0),
    .din4(trunc_ln37_reg_3392_pp0_iter1_reg),
    .dout(tmp_3_fu_2354_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U323(
    .din0(prior_outputs_0_3_V_q0),
    .din1(prior_outputs_1_3_V_q0),
    .din2(prior_outputs_2_3_V_q0),
    .din3(prior_outputs_3_3_V_q0),
    .din4(trunc_ln37_reg_3392_pp0_iter1_reg),
    .dout(tmp_4_fu_2367_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U324(
    .din0(prior_outputs_0_4_V_q0),
    .din1(prior_outputs_1_4_V_q0),
    .din2(prior_outputs_2_4_V_q0),
    .din3(prior_outputs_3_4_V_q0),
    .din4(trunc_ln37_reg_3392_pp0_iter1_reg),
    .dout(tmp_5_fu_2380_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U325(
    .din0(prior_outputs_0_5_V_q0),
    .din1(prior_outputs_1_5_V_q0),
    .din2(prior_outputs_2_5_V_q0),
    .din3(prior_outputs_3_5_V_q0),
    .din4(trunc_ln37_reg_3392_pp0_iter1_reg),
    .dout(tmp_6_fu_2393_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U326(
    .din0(prior_outputs_0_6_V_q0),
    .din1(prior_outputs_1_6_V_q0),
    .din2(prior_outputs_2_6_V_q0),
    .din3(prior_outputs_3_6_V_q0),
    .din4(trunc_ln37_reg_3392_pp0_iter1_reg),
    .dout(tmp_7_fu_2406_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U327(
    .din0(prior_outputs_0_7_V_q0),
    .din1(prior_outputs_1_7_V_q0),
    .din2(prior_outputs_2_7_V_q0),
    .din3(prior_outputs_3_7_V_q0),
    .din4(trunc_ln37_reg_3392_pp0_iter1_reg),
    .dout(tmp_8_fu_2419_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U328(
    .din0(prior_outputs_0_8_V_q0),
    .din1(prior_outputs_1_8_V_q0),
    .din2(prior_outputs_2_8_V_q0),
    .din3(prior_outputs_3_8_V_q0),
    .din4(trunc_ln37_reg_3392_pp0_iter1_reg),
    .dout(tmp_9_fu_2432_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U329(
    .din0(prior_outputs_0_9_V_q0),
    .din1(prior_outputs_1_9_V_q0),
    .din2(prior_outputs_2_9_V_q0),
    .din3(prior_outputs_3_9_V_q0),
    .din4(trunc_ln37_reg_3392_pp0_iter1_reg),
    .dout(tmp_s_fu_2445_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U330(
    .din0(prior_outputs_0_10_V_q0),
    .din1(prior_outputs_1_10_V_q0),
    .din2(prior_outputs_2_10_V_q0),
    .din3(prior_outputs_3_10_V_q0),
    .din4(trunc_ln37_reg_3392_pp0_iter1_reg),
    .dout(tmp_10_fu_2458_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U331(
    .din0(prior_outputs_0_11_V_q0),
    .din1(prior_outputs_1_11_V_q0),
    .din2(prior_outputs_2_11_V_q0),
    .din3(prior_outputs_3_11_V_q0),
    .din4(trunc_ln37_reg_3392_pp0_iter1_reg),
    .dout(tmp_11_fu_2471_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U332(
    .din0(prior_outputs_0_12_V_q0),
    .din1(prior_outputs_1_12_V_q0),
    .din2(prior_outputs_2_12_V_q0),
    .din3(prior_outputs_3_12_V_q0),
    .din4(trunc_ln37_reg_3392_pp0_iter1_reg),
    .dout(tmp_12_fu_2484_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U333(
    .din0(prior_outputs_0_13_V_q0),
    .din1(prior_outputs_1_13_V_q0),
    .din2(prior_outputs_2_13_V_q0),
    .din3(prior_outputs_3_13_V_q0),
    .din4(trunc_ln37_reg_3392_pp0_iter1_reg),
    .dout(tmp_13_fu_2497_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U334(
    .din0(prior_outputs_0_14_V_q0),
    .din1(prior_outputs_1_14_V_q0),
    .din2(prior_outputs_2_14_V_q0),
    .din3(prior_outputs_3_14_V_q0),
    .din4(trunc_ln37_reg_3392_pp0_iter1_reg),
    .dout(tmp_14_fu_2510_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U335(
    .din0(prior_outputs_0_15_V_q0),
    .din1(prior_outputs_1_15_V_q0),
    .din2(prior_outputs_2_15_V_q0),
    .din3(prior_outputs_3_15_V_q0),
    .din4(trunc_ln37_reg_3392_pp0_iter1_reg),
    .dout(tmp_15_fu_2523_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_509)) begin
        if (((select_ln37_2_fu_1808_p3 == 1'd0) & (icmp_ln37_fu_1745_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_0_reg_1195 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_0_reg_1195 <= ap_phi_reg_pp0_iter0_p_Val2_0_reg_1195;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_509)) begin
        if (((select_ln37_13_fu_2046_p3 == 1'd0) & (icmp_ln37_fu_1745_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_10_reg_1305 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_10_reg_1305 <= ap_phi_reg_pp0_iter0_p_Val2_10_reg_1305;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_509)) begin
        if (((select_ln37_14_fu_2069_p3 == 1'd0) & (icmp_ln37_fu_1745_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_11_reg_1316 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_11_reg_1316 <= ap_phi_reg_pp0_iter0_p_Val2_11_reg_1316;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_509)) begin
        if (((select_ln37_15_fu_2092_p3 == 1'd0) & (icmp_ln37_fu_1745_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_12_reg_1327 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_12_reg_1327 <= ap_phi_reg_pp0_iter0_p_Val2_12_reg_1327;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_509)) begin
        if (((select_ln37_16_fu_2115_p3 == 1'd0) & (icmp_ln37_fu_1745_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_13_reg_1338 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_13_reg_1338 <= ap_phi_reg_pp0_iter0_p_Val2_13_reg_1338;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_509)) begin
        if (((select_ln37_17_fu_2138_p3 == 1'd0) & (icmp_ln37_fu_1745_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_14_reg_1349 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_14_reg_1349 <= ap_phi_reg_pp0_iter0_p_Val2_14_reg_1349;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_509)) begin
        if (((select_ln37_18_fu_2161_p3 == 1'd0) & (icmp_ln37_fu_1745_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_15_reg_1360 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_15_reg_1360 <= ap_phi_reg_pp0_iter0_p_Val2_15_reg_1360;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_509)) begin
        if (((select_ln37_4_fu_1839_p3 == 1'd0) & (icmp_ln37_fu_1745_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_1_reg_1206 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_1_reg_1206 <= ap_phi_reg_pp0_iter0_p_Val2_1_reg_1206;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_509)) begin
        if (((select_ln37_5_fu_1862_p3 == 1'd0) & (icmp_ln37_fu_1745_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_2_reg_1217 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_2_reg_1217 <= ap_phi_reg_pp0_iter0_p_Val2_2_reg_1217;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_509)) begin
        if (((select_ln37_6_fu_1885_p3 == 1'd0) & (icmp_ln37_fu_1745_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_3_reg_1228 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_3_reg_1228 <= ap_phi_reg_pp0_iter0_p_Val2_3_reg_1228;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_509)) begin
        if (((select_ln37_7_fu_1908_p3 == 1'd0) & (icmp_ln37_fu_1745_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_4_reg_1239 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_4_reg_1239 <= ap_phi_reg_pp0_iter0_p_Val2_4_reg_1239;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_509)) begin
        if (((select_ln37_8_fu_1931_p3 == 1'd0) & (icmp_ln37_fu_1745_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_58_reg_1250 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_58_reg_1250 <= ap_phi_reg_pp0_iter0_p_Val2_58_reg_1250;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_509)) begin
        if (((select_ln37_9_fu_1954_p3 == 1'd0) & (icmp_ln37_fu_1745_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_69_reg_1261 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_69_reg_1261 <= ap_phi_reg_pp0_iter0_p_Val2_69_reg_1261;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_509)) begin
        if (((select_ln37_10_fu_1977_p3 == 1'd0) & (icmp_ln37_fu_1745_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_7_reg_1272 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_7_reg_1272 <= ap_phi_reg_pp0_iter0_p_Val2_7_reg_1272;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_509)) begin
        if (((select_ln37_11_fu_2000_p3 == 1'd0) & (icmp_ln37_fu_1745_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_8_reg_1283 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_8_reg_1283 <= ap_phi_reg_pp0_iter0_p_Val2_8_reg_1283;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_509)) begin
        if (((select_ln37_12_fu_2023_p3 == 1'd0) & (icmp_ln37_fu_1745_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_9_reg_1294 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_9_reg_1294 <= ap_phi_reg_pp0_iter0_p_Val2_9_reg_1294;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_3378 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ch_t_0_reg_1151 <= select_ln37_1_reg_3387;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ch_t_0_reg_1151 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_fu_1745_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_0_reg_1184 <= col_fu_2209_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        col_0_reg_1184 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_fu_1745_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten16_reg_1140 <= add_ln37_fu_1750_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten16_reg_1140 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_fu_1745_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_1162 <= select_ln38_2_fu_2221_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_1162 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_3378 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        row_0_reg_1173 <= select_ln38_1_reg_3501;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        row_0_reg_1173 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_p_Val2_0_reg_1195 <= ap_phi_reg_pp0_iter1_p_Val2_0_reg_1195;
        ap_phi_reg_pp0_iter2_p_Val2_10_reg_1305 <= ap_phi_reg_pp0_iter1_p_Val2_10_reg_1305;
        ap_phi_reg_pp0_iter2_p_Val2_11_reg_1316 <= ap_phi_reg_pp0_iter1_p_Val2_11_reg_1316;
        ap_phi_reg_pp0_iter2_p_Val2_12_reg_1327 <= ap_phi_reg_pp0_iter1_p_Val2_12_reg_1327;
        ap_phi_reg_pp0_iter2_p_Val2_13_reg_1338 <= ap_phi_reg_pp0_iter1_p_Val2_13_reg_1338;
        ap_phi_reg_pp0_iter2_p_Val2_14_reg_1349 <= ap_phi_reg_pp0_iter1_p_Val2_14_reg_1349;
        ap_phi_reg_pp0_iter2_p_Val2_15_reg_1360 <= ap_phi_reg_pp0_iter1_p_Val2_15_reg_1360;
        ap_phi_reg_pp0_iter2_p_Val2_1_reg_1206 <= ap_phi_reg_pp0_iter1_p_Val2_1_reg_1206;
        ap_phi_reg_pp0_iter2_p_Val2_2_reg_1217 <= ap_phi_reg_pp0_iter1_p_Val2_2_reg_1217;
        ap_phi_reg_pp0_iter2_p_Val2_3_reg_1228 <= ap_phi_reg_pp0_iter1_p_Val2_3_reg_1228;
        ap_phi_reg_pp0_iter2_p_Val2_4_reg_1239 <= ap_phi_reg_pp0_iter1_p_Val2_4_reg_1239;
        ap_phi_reg_pp0_iter2_p_Val2_58_reg_1250 <= ap_phi_reg_pp0_iter1_p_Val2_58_reg_1250;
        ap_phi_reg_pp0_iter2_p_Val2_69_reg_1261 <= ap_phi_reg_pp0_iter1_p_Val2_69_reg_1261;
        ap_phi_reg_pp0_iter2_p_Val2_7_reg_1272 <= ap_phi_reg_pp0_iter1_p_Val2_7_reg_1272;
        ap_phi_reg_pp0_iter2_p_Val2_8_reg_1283 <= ap_phi_reg_pp0_iter1_p_Val2_8_reg_1283;
        ap_phi_reg_pp0_iter2_p_Val2_9_reg_1294 <= ap_phi_reg_pp0_iter1_p_Val2_9_reg_1294;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_p_Val2_0_reg_1195 <= ap_phi_reg_pp0_iter2_p_Val2_0_reg_1195;
        ap_phi_reg_pp0_iter3_p_Val2_10_reg_1305 <= ap_phi_reg_pp0_iter2_p_Val2_10_reg_1305;
        ap_phi_reg_pp0_iter3_p_Val2_11_reg_1316 <= ap_phi_reg_pp0_iter2_p_Val2_11_reg_1316;
        ap_phi_reg_pp0_iter3_p_Val2_12_reg_1327 <= ap_phi_reg_pp0_iter2_p_Val2_12_reg_1327;
        ap_phi_reg_pp0_iter3_p_Val2_13_reg_1338 <= ap_phi_reg_pp0_iter2_p_Val2_13_reg_1338;
        ap_phi_reg_pp0_iter3_p_Val2_14_reg_1349 <= ap_phi_reg_pp0_iter2_p_Val2_14_reg_1349;
        ap_phi_reg_pp0_iter3_p_Val2_15_reg_1360 <= ap_phi_reg_pp0_iter2_p_Val2_15_reg_1360;
        ap_phi_reg_pp0_iter3_p_Val2_1_reg_1206 <= ap_phi_reg_pp0_iter2_p_Val2_1_reg_1206;
        ap_phi_reg_pp0_iter3_p_Val2_2_reg_1217 <= ap_phi_reg_pp0_iter2_p_Val2_2_reg_1217;
        ap_phi_reg_pp0_iter3_p_Val2_3_reg_1228 <= ap_phi_reg_pp0_iter2_p_Val2_3_reg_1228;
        ap_phi_reg_pp0_iter3_p_Val2_4_reg_1239 <= ap_phi_reg_pp0_iter2_p_Val2_4_reg_1239;
        ap_phi_reg_pp0_iter3_p_Val2_58_reg_1250 <= ap_phi_reg_pp0_iter2_p_Val2_58_reg_1250;
        ap_phi_reg_pp0_iter3_p_Val2_69_reg_1261 <= ap_phi_reg_pp0_iter2_p_Val2_69_reg_1261;
        ap_phi_reg_pp0_iter3_p_Val2_7_reg_1272 <= ap_phi_reg_pp0_iter2_p_Val2_7_reg_1272;
        ap_phi_reg_pp0_iter3_p_Val2_8_reg_1283 <= ap_phi_reg_pp0_iter2_p_Val2_8_reg_1283;
        ap_phi_reg_pp0_iter3_p_Val2_9_reg_1294 <= ap_phi_reg_pp0_iter2_p_Val2_9_reg_1294;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_reg_pp0_iter4_p_Val2_0_reg_1195 <= ap_phi_reg_pp0_iter3_p_Val2_0_reg_1195;
        ap_phi_reg_pp0_iter4_p_Val2_10_reg_1305 <= ap_phi_reg_pp0_iter3_p_Val2_10_reg_1305;
        ap_phi_reg_pp0_iter4_p_Val2_11_reg_1316 <= ap_phi_reg_pp0_iter3_p_Val2_11_reg_1316;
        ap_phi_reg_pp0_iter4_p_Val2_12_reg_1327 <= ap_phi_reg_pp0_iter3_p_Val2_12_reg_1327;
        ap_phi_reg_pp0_iter4_p_Val2_13_reg_1338 <= ap_phi_reg_pp0_iter3_p_Val2_13_reg_1338;
        ap_phi_reg_pp0_iter4_p_Val2_14_reg_1349 <= ap_phi_reg_pp0_iter3_p_Val2_14_reg_1349;
        ap_phi_reg_pp0_iter4_p_Val2_15_reg_1360 <= ap_phi_reg_pp0_iter3_p_Val2_15_reg_1360;
        ap_phi_reg_pp0_iter4_p_Val2_1_reg_1206 <= ap_phi_reg_pp0_iter3_p_Val2_1_reg_1206;
        ap_phi_reg_pp0_iter4_p_Val2_2_reg_1217 <= ap_phi_reg_pp0_iter3_p_Val2_2_reg_1217;
        ap_phi_reg_pp0_iter4_p_Val2_3_reg_1228 <= ap_phi_reg_pp0_iter3_p_Val2_3_reg_1228;
        ap_phi_reg_pp0_iter4_p_Val2_4_reg_1239 <= ap_phi_reg_pp0_iter3_p_Val2_4_reg_1239;
        ap_phi_reg_pp0_iter4_p_Val2_58_reg_1250 <= ap_phi_reg_pp0_iter3_p_Val2_58_reg_1250;
        ap_phi_reg_pp0_iter4_p_Val2_69_reg_1261 <= ap_phi_reg_pp0_iter3_p_Val2_69_reg_1261;
        ap_phi_reg_pp0_iter4_p_Val2_7_reg_1272 <= ap_phi_reg_pp0_iter3_p_Val2_7_reg_1272;
        ap_phi_reg_pp0_iter4_p_Val2_8_reg_1283 <= ap_phi_reg_pp0_iter3_p_Val2_8_reg_1283;
        ap_phi_reg_pp0_iter4_p_Val2_9_reg_1294 <= ap_phi_reg_pp0_iter3_p_Val2_9_reg_1294;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_reg_3358 <= empty_fu_1467_p1;
        icmp_ln39_reg_3373 <= icmp_ln39_fu_1493_p2;
        mul_ln29_reg_3363 <= mul_ln29_fu_1479_p2;
        tmp_16_reg_3368[13 : 2] <= tmp_16_fu_1485_p3[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln37_reg_3378 <= icmp_ln37_fu_1745_p2;
        icmp_ln37_reg_3378_pp0_iter1_reg <= icmp_ln37_reg_3378;
        select_ln37_10_reg_3460_pp0_iter1_reg <= select_ln37_10_reg_3460;
        select_ln37_11_reg_3464_pp0_iter1_reg <= select_ln37_11_reg_3464;
        select_ln37_12_reg_3468_pp0_iter1_reg <= select_ln37_12_reg_3468;
        select_ln37_13_reg_3472_pp0_iter1_reg <= select_ln37_13_reg_3472;
        select_ln37_14_reg_3476_pp0_iter1_reg <= select_ln37_14_reg_3476;
        select_ln37_15_reg_3480_pp0_iter1_reg <= select_ln37_15_reg_3480;
        select_ln37_16_reg_3484_pp0_iter1_reg <= select_ln37_16_reg_3484;
        select_ln37_17_reg_3488_pp0_iter1_reg <= select_ln37_17_reg_3488;
        select_ln37_18_reg_3492_pp0_iter1_reg <= select_ln37_18_reg_3492;
        select_ln37_2_reg_3412_pp0_iter1_reg <= select_ln37_2_reg_3412;
        select_ln37_3_reg_3416_pp0_iter1_reg[5 : 4] <= select_ln37_3_reg_3416[5 : 4];
        select_ln37_4_reg_3436_pp0_iter1_reg <= select_ln37_4_reg_3436;
        select_ln37_5_reg_3440_pp0_iter1_reg <= select_ln37_5_reg_3440;
        select_ln37_6_reg_3444_pp0_iter1_reg <= select_ln37_6_reg_3444;
        select_ln37_7_reg_3448_pp0_iter1_reg <= select_ln37_7_reg_3448;
        select_ln37_8_reg_3452_pp0_iter1_reg <= select_ln37_8_reg_3452;
        select_ln37_9_reg_3456_pp0_iter1_reg <= select_ln37_9_reg_3456;
        trunc_ln37_reg_3392_pp0_iter1_reg <= trunc_ln37_reg_3392;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln37_reg_3378_pp0_iter2_reg <= icmp_ln37_reg_3378_pp0_iter1_reg;
        icmp_ln37_reg_3378_pp0_iter3_reg <= icmp_ln37_reg_3378_pp0_iter2_reg;
        msb_buffer_0_V_addr_reg_3838_pp0_iter2_reg <= msb_buffer_0_V_addr_reg_3838;
        msb_buffer_0_V_addr_reg_3838_pp0_iter3_reg <= msb_buffer_0_V_addr_reg_3838_pp0_iter2_reg;
        msb_buffer_1_V_addr_reg_3844_pp0_iter2_reg <= msb_buffer_1_V_addr_reg_3844;
        msb_buffer_1_V_addr_reg_3844_pp0_iter3_reg <= msb_buffer_1_V_addr_reg_3844_pp0_iter2_reg;
        select_ln37_10_reg_3460_pp0_iter2_reg <= select_ln37_10_reg_3460_pp0_iter1_reg;
        select_ln37_10_reg_3460_pp0_iter3_reg <= select_ln37_10_reg_3460_pp0_iter2_reg;
        select_ln37_11_reg_3464_pp0_iter2_reg <= select_ln37_11_reg_3464_pp0_iter1_reg;
        select_ln37_11_reg_3464_pp0_iter3_reg <= select_ln37_11_reg_3464_pp0_iter2_reg;
        select_ln37_12_reg_3468_pp0_iter2_reg <= select_ln37_12_reg_3468_pp0_iter1_reg;
        select_ln37_12_reg_3468_pp0_iter3_reg <= select_ln37_12_reg_3468_pp0_iter2_reg;
        select_ln37_13_reg_3472_pp0_iter2_reg <= select_ln37_13_reg_3472_pp0_iter1_reg;
        select_ln37_13_reg_3472_pp0_iter3_reg <= select_ln37_13_reg_3472_pp0_iter2_reg;
        select_ln37_14_reg_3476_pp0_iter2_reg <= select_ln37_14_reg_3476_pp0_iter1_reg;
        select_ln37_14_reg_3476_pp0_iter3_reg <= select_ln37_14_reg_3476_pp0_iter2_reg;
        select_ln37_15_reg_3480_pp0_iter2_reg <= select_ln37_15_reg_3480_pp0_iter1_reg;
        select_ln37_15_reg_3480_pp0_iter3_reg <= select_ln37_15_reg_3480_pp0_iter2_reg;
        select_ln37_16_reg_3484_pp0_iter2_reg <= select_ln37_16_reg_3484_pp0_iter1_reg;
        select_ln37_16_reg_3484_pp0_iter3_reg <= select_ln37_16_reg_3484_pp0_iter2_reg;
        select_ln37_17_reg_3488_pp0_iter2_reg <= select_ln37_17_reg_3488_pp0_iter1_reg;
        select_ln37_17_reg_3488_pp0_iter3_reg <= select_ln37_17_reg_3488_pp0_iter2_reg;
        select_ln37_18_reg_3492_pp0_iter2_reg <= select_ln37_18_reg_3492_pp0_iter1_reg;
        select_ln37_18_reg_3492_pp0_iter3_reg <= select_ln37_18_reg_3492_pp0_iter2_reg;
        select_ln37_2_reg_3412_pp0_iter2_reg <= select_ln37_2_reg_3412_pp0_iter1_reg;
        select_ln37_2_reg_3412_pp0_iter3_reg <= select_ln37_2_reg_3412_pp0_iter2_reg;
        select_ln37_3_reg_3416_pp0_iter2_reg[5 : 4] <= select_ln37_3_reg_3416_pp0_iter1_reg[5 : 4];
        select_ln37_3_reg_3416_pp0_iter3_reg[5 : 4] <= select_ln37_3_reg_3416_pp0_iter2_reg[5 : 4];
        select_ln37_4_reg_3436_pp0_iter2_reg <= select_ln37_4_reg_3436_pp0_iter1_reg;
        select_ln37_4_reg_3436_pp0_iter3_reg <= select_ln37_4_reg_3436_pp0_iter2_reg;
        select_ln37_5_reg_3440_pp0_iter2_reg <= select_ln37_5_reg_3440_pp0_iter1_reg;
        select_ln37_5_reg_3440_pp0_iter3_reg <= select_ln37_5_reg_3440_pp0_iter2_reg;
        select_ln37_6_reg_3444_pp0_iter2_reg <= select_ln37_6_reg_3444_pp0_iter1_reg;
        select_ln37_6_reg_3444_pp0_iter3_reg <= select_ln37_6_reg_3444_pp0_iter2_reg;
        select_ln37_7_reg_3448_pp0_iter2_reg <= select_ln37_7_reg_3448_pp0_iter1_reg;
        select_ln37_7_reg_3448_pp0_iter3_reg <= select_ln37_7_reg_3448_pp0_iter2_reg;
        select_ln37_8_reg_3452_pp0_iter2_reg <= select_ln37_8_reg_3452_pp0_iter1_reg;
        select_ln37_8_reg_3452_pp0_iter3_reg <= select_ln37_8_reg_3452_pp0_iter2_reg;
        select_ln37_9_reg_3456_pp0_iter2_reg <= select_ln37_9_reg_3456_pp0_iter1_reg;
        select_ln37_9_reg_3456_pp0_iter3_reg <= select_ln37_9_reg_3456_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_3378 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        msb_buffer_0_V_addr_reg_3838 <= zext_ln43_2_fu_2258_p1;
        msb_buffer_1_V_addr_reg_3844 <= zext_ln43_2_fu_2258_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_fu_1745_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln37_10_reg_3460 <= select_ln37_10_fu_1977_p3;
        select_ln37_11_reg_3464 <= select_ln37_11_fu_2000_p3;
        select_ln37_12_reg_3468 <= select_ln37_12_fu_2023_p3;
        select_ln37_13_reg_3472 <= select_ln37_13_fu_2046_p3;
        select_ln37_14_reg_3476 <= select_ln37_14_fu_2069_p3;
        select_ln37_15_reg_3480 <= select_ln37_15_fu_2092_p3;
        select_ln37_16_reg_3484 <= select_ln37_16_fu_2115_p3;
        select_ln37_17_reg_3488 <= select_ln37_17_fu_2138_p3;
        select_ln37_18_reg_3492 <= select_ln37_18_fu_2161_p3;
        select_ln37_2_reg_3412 <= select_ln37_2_fu_1808_p3;
        select_ln37_3_reg_3416[5 : 4] <= select_ln37_3_fu_1816_p3[5 : 4];
        select_ln37_4_reg_3436 <= select_ln37_4_fu_1839_p3;
        select_ln37_5_reg_3440 <= select_ln37_5_fu_1862_p3;
        select_ln37_6_reg_3444 <= select_ln37_6_fu_1885_p3;
        select_ln37_7_reg_3448 <= select_ln37_7_fu_1908_p3;
        select_ln37_8_reg_3452 <= select_ln37_8_fu_1931_p3;
        select_ln37_9_reg_3456 <= select_ln37_9_fu_1954_p3;
        select_ln38_reg_3496 <= select_ln38_fu_2193_p3;
        trunc_ln37_reg_3392 <= trunc_ln37_fu_1799_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_fu_1745_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln37_1_reg_3387 <= select_ln37_1_fu_1791_p3;
        select_ln38_1_reg_3501 <= select_ln38_1_fu_2201_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_reg_3378_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_10_reg_3900 <= tmp_10_fu_2458_p6;
        tmp_11_reg_3905 <= tmp_11_fu_2471_p6;
        tmp_12_reg_3910 <= tmp_12_fu_2484_p6;
        tmp_13_reg_3915 <= tmp_13_fu_2497_p6;
        tmp_14_reg_3920 <= tmp_14_fu_2510_p6;
        tmp_15_reg_3925 <= tmp_15_fu_2523_p6;
        tmp_1_reg_3850 <= tmp_1_fu_2328_p6;
        tmp_2_reg_3855 <= tmp_2_fu_2341_p6;
        tmp_3_reg_3860 <= tmp_3_fu_2354_p6;
        tmp_4_reg_3865 <= tmp_4_fu_2367_p6;
        tmp_5_reg_3870 <= tmp_5_fu_2380_p6;
        tmp_6_reg_3875 <= tmp_6_fu_2393_p6;
        tmp_7_reg_3880 <= tmp_7_fu_2406_p6;
        tmp_8_reg_3885 <= tmp_8_fu_2419_p6;
        tmp_9_reg_3890 <= tmp_9_fu_2432_p6;
        tmp_s_reg_3895 <= tmp_s_fu_2445_p6;
    end
end

always @ (*) begin
    if ((icmp_ln37_fu_1745_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln37_reg_3378 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_ch_t_0_phi_fu_1155_p4 = select_ln37_1_reg_3387;
    end else begin
        ap_phi_mux_ch_t_0_phi_fu_1155_p4 = ch_t_0_reg_1151;
    end
end

always @ (*) begin
    if (((select_ln37_2_reg_3412_pp0_iter3_reg == 1'd1) & (icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_0_phi_fu_1199_p4 = grp_to2bit_fu_1371_ap_return;
    end else begin
        ap_phi_mux_p_Val2_0_phi_fu_1199_p4 = ap_phi_reg_pp0_iter4_p_Val2_0_reg_1195;
    end
end

always @ (*) begin
    if (((select_ln37_13_reg_3472_pp0_iter3_reg == 1'd1) & (icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_10_phi_fu_1309_p4 = grp_to2bit_fu_1431_ap_return;
    end else begin
        ap_phi_mux_p_Val2_10_phi_fu_1309_p4 = ap_phi_reg_pp0_iter4_p_Val2_10_reg_1305;
    end
end

always @ (*) begin
    if (((select_ln37_14_reg_3476_pp0_iter3_reg == 1'd1) & (icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_11_phi_fu_1320_p4 = grp_to2bit_fu_1437_ap_return;
    end else begin
        ap_phi_mux_p_Val2_11_phi_fu_1320_p4 = ap_phi_reg_pp0_iter4_p_Val2_11_reg_1316;
    end
end

always @ (*) begin
    if (((select_ln37_15_reg_3480_pp0_iter3_reg == 1'd1) & (icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_12_phi_fu_1331_p4 = grp_to2bit_fu_1443_ap_return;
    end else begin
        ap_phi_mux_p_Val2_12_phi_fu_1331_p4 = ap_phi_reg_pp0_iter4_p_Val2_12_reg_1327;
    end
end

always @ (*) begin
    if (((select_ln37_16_reg_3484_pp0_iter3_reg == 1'd1) & (icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_13_phi_fu_1342_p4 = grp_to2bit_fu_1449_ap_return;
    end else begin
        ap_phi_mux_p_Val2_13_phi_fu_1342_p4 = ap_phi_reg_pp0_iter4_p_Val2_13_reg_1338;
    end
end

always @ (*) begin
    if (((select_ln37_17_reg_3488_pp0_iter3_reg == 1'd1) & (icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_14_phi_fu_1353_p4 = grp_to2bit_fu_1455_ap_return;
    end else begin
        ap_phi_mux_p_Val2_14_phi_fu_1353_p4 = ap_phi_reg_pp0_iter4_p_Val2_14_reg_1349;
    end
end

always @ (*) begin
    if (((select_ln37_18_reg_3492_pp0_iter3_reg == 1'd1) & (icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_15_phi_fu_1364_p4 = grp_to2bit_fu_1461_ap_return;
    end else begin
        ap_phi_mux_p_Val2_15_phi_fu_1364_p4 = ap_phi_reg_pp0_iter4_p_Val2_15_reg_1360;
    end
end

always @ (*) begin
    if (((select_ln37_4_reg_3436_pp0_iter3_reg == 1'd1) & (icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_1_phi_fu_1210_p4 = grp_to2bit_fu_1377_ap_return;
    end else begin
        ap_phi_mux_p_Val2_1_phi_fu_1210_p4 = ap_phi_reg_pp0_iter4_p_Val2_1_reg_1206;
    end
end

always @ (*) begin
    if (((select_ln37_5_reg_3440_pp0_iter3_reg == 1'd1) & (icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_2_phi_fu_1221_p4 = grp_to2bit_fu_1383_ap_return;
    end else begin
        ap_phi_mux_p_Val2_2_phi_fu_1221_p4 = ap_phi_reg_pp0_iter4_p_Val2_2_reg_1217;
    end
end

always @ (*) begin
    if (((select_ln37_6_reg_3444_pp0_iter3_reg == 1'd1) & (icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_3_phi_fu_1232_p4 = grp_to2bit_fu_1389_ap_return;
    end else begin
        ap_phi_mux_p_Val2_3_phi_fu_1232_p4 = ap_phi_reg_pp0_iter4_p_Val2_3_reg_1228;
    end
end

always @ (*) begin
    if (((select_ln37_7_reg_3448_pp0_iter3_reg == 1'd1) & (icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_4_phi_fu_1243_p4 = grp_to2bit_fu_1395_ap_return;
    end else begin
        ap_phi_mux_p_Val2_4_phi_fu_1243_p4 = ap_phi_reg_pp0_iter4_p_Val2_4_reg_1239;
    end
end

always @ (*) begin
    if (((select_ln37_8_reg_3452_pp0_iter3_reg == 1'd1) & (icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_58_phi_fu_1254_p4 = grp_to2bit_fu_1401_ap_return;
    end else begin
        ap_phi_mux_p_Val2_58_phi_fu_1254_p4 = ap_phi_reg_pp0_iter4_p_Val2_58_reg_1250;
    end
end

always @ (*) begin
    if (((select_ln37_9_reg_3456_pp0_iter3_reg == 1'd1) & (icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_69_phi_fu_1265_p4 = grp_to2bit_fu_1407_ap_return;
    end else begin
        ap_phi_mux_p_Val2_69_phi_fu_1265_p4 = ap_phi_reg_pp0_iter4_p_Val2_69_reg_1261;
    end
end

always @ (*) begin
    if (((select_ln37_10_reg_3460_pp0_iter3_reg == 1'd1) & (icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_7_phi_fu_1276_p4 = grp_to2bit_fu_1413_ap_return;
    end else begin
        ap_phi_mux_p_Val2_7_phi_fu_1276_p4 = ap_phi_reg_pp0_iter4_p_Val2_7_reg_1272;
    end
end

always @ (*) begin
    if (((select_ln37_11_reg_3464_pp0_iter3_reg == 1'd1) & (icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_8_phi_fu_1287_p4 = grp_to2bit_fu_1419_ap_return;
    end else begin
        ap_phi_mux_p_Val2_8_phi_fu_1287_p4 = ap_phi_reg_pp0_iter4_p_Val2_8_reg_1283;
    end
end

always @ (*) begin
    if (((select_ln37_12_reg_3468_pp0_iter3_reg == 1'd1) & (icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_9_phi_fu_1298_p4 = grp_to2bit_fu_1425_ap_return;
    end else begin
        ap_phi_mux_p_Val2_9_phi_fu_1298_p4 = ap_phi_reg_pp0_iter4_p_Val2_9_reg_1294;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln37_reg_3378 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_row_0_phi_fu_1177_p4 = select_ln38_1_reg_3501;
    end else begin
        ap_phi_mux_row_0_phi_fu_1177_p4 = row_0_reg_1173;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        msb_buffer_0_V_ce0 = 1'b1;
    end else begin
        msb_buffer_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        msb_buffer_0_V_ce1 = 1'b1;
    end else begin
        msb_buffer_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        msb_buffer_0_V_we1 = 1'b1;
    end else begin
        msb_buffer_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        msb_buffer_1_V_ce0 = 1'b1;
    end else begin
        msb_buffer_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        msb_buffer_1_V_ce1 = 1'b1;
    end else begin
        msb_buffer_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_3378_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        msb_buffer_1_V_we1 = 1'b1;
    end else begin
        msb_buffer_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_0_0_V_ce0 = 1'b1;
    end else begin
        prior_outputs_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_0_10_V_ce0 = 1'b1;
    end else begin
        prior_outputs_0_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_0_11_V_ce0 = 1'b1;
    end else begin
        prior_outputs_0_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_0_12_V_ce0 = 1'b1;
    end else begin
        prior_outputs_0_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_0_13_V_ce0 = 1'b1;
    end else begin
        prior_outputs_0_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_0_14_V_ce0 = 1'b1;
    end else begin
        prior_outputs_0_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_0_15_V_ce0 = 1'b1;
    end else begin
        prior_outputs_0_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_0_1_V_ce0 = 1'b1;
    end else begin
        prior_outputs_0_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_0_2_V_ce0 = 1'b1;
    end else begin
        prior_outputs_0_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_0_3_V_ce0 = 1'b1;
    end else begin
        prior_outputs_0_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_0_4_V_ce0 = 1'b1;
    end else begin
        prior_outputs_0_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_0_5_V_ce0 = 1'b1;
    end else begin
        prior_outputs_0_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_0_6_V_ce0 = 1'b1;
    end else begin
        prior_outputs_0_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_0_7_V_ce0 = 1'b1;
    end else begin
        prior_outputs_0_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_0_8_V_ce0 = 1'b1;
    end else begin
        prior_outputs_0_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_0_9_V_ce0 = 1'b1;
    end else begin
        prior_outputs_0_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_1_0_V_ce0 = 1'b1;
    end else begin
        prior_outputs_1_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_1_10_V_ce0 = 1'b1;
    end else begin
        prior_outputs_1_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_1_11_V_ce0 = 1'b1;
    end else begin
        prior_outputs_1_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_1_12_V_ce0 = 1'b1;
    end else begin
        prior_outputs_1_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_1_13_V_ce0 = 1'b1;
    end else begin
        prior_outputs_1_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_1_14_V_ce0 = 1'b1;
    end else begin
        prior_outputs_1_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_1_15_V_ce0 = 1'b1;
    end else begin
        prior_outputs_1_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_1_1_V_ce0 = 1'b1;
    end else begin
        prior_outputs_1_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_1_2_V_ce0 = 1'b1;
    end else begin
        prior_outputs_1_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_1_3_V_ce0 = 1'b1;
    end else begin
        prior_outputs_1_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_1_4_V_ce0 = 1'b1;
    end else begin
        prior_outputs_1_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_1_5_V_ce0 = 1'b1;
    end else begin
        prior_outputs_1_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_1_6_V_ce0 = 1'b1;
    end else begin
        prior_outputs_1_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_1_7_V_ce0 = 1'b1;
    end else begin
        prior_outputs_1_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_1_8_V_ce0 = 1'b1;
    end else begin
        prior_outputs_1_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_1_9_V_ce0 = 1'b1;
    end else begin
        prior_outputs_1_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_2_0_V_ce0 = 1'b1;
    end else begin
        prior_outputs_2_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_2_10_V_ce0 = 1'b1;
    end else begin
        prior_outputs_2_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_2_11_V_ce0 = 1'b1;
    end else begin
        prior_outputs_2_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_2_12_V_ce0 = 1'b1;
    end else begin
        prior_outputs_2_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_2_13_V_ce0 = 1'b1;
    end else begin
        prior_outputs_2_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_2_14_V_ce0 = 1'b1;
    end else begin
        prior_outputs_2_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_2_15_V_ce0 = 1'b1;
    end else begin
        prior_outputs_2_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_2_1_V_ce0 = 1'b1;
    end else begin
        prior_outputs_2_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_2_2_V_ce0 = 1'b1;
    end else begin
        prior_outputs_2_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_2_3_V_ce0 = 1'b1;
    end else begin
        prior_outputs_2_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_2_4_V_ce0 = 1'b1;
    end else begin
        prior_outputs_2_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_2_5_V_ce0 = 1'b1;
    end else begin
        prior_outputs_2_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_2_6_V_ce0 = 1'b1;
    end else begin
        prior_outputs_2_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_2_7_V_ce0 = 1'b1;
    end else begin
        prior_outputs_2_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_2_8_V_ce0 = 1'b1;
    end else begin
        prior_outputs_2_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_2_9_V_ce0 = 1'b1;
    end else begin
        prior_outputs_2_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_3_0_V_ce0 = 1'b1;
    end else begin
        prior_outputs_3_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_3_10_V_ce0 = 1'b1;
    end else begin
        prior_outputs_3_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_3_11_V_ce0 = 1'b1;
    end else begin
        prior_outputs_3_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_3_12_V_ce0 = 1'b1;
    end else begin
        prior_outputs_3_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_3_13_V_ce0 = 1'b1;
    end else begin
        prior_outputs_3_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_3_14_V_ce0 = 1'b1;
    end else begin
        prior_outputs_3_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_3_15_V_ce0 = 1'b1;
    end else begin
        prior_outputs_3_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_3_1_V_ce0 = 1'b1;
    end else begin
        prior_outputs_3_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_3_2_V_ce0 = 1'b1;
    end else begin
        prior_outputs_3_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_3_3_V_ce0 = 1'b1;
    end else begin
        prior_outputs_3_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_3_4_V_ce0 = 1'b1;
    end else begin
        prior_outputs_3_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_3_5_V_ce0 = 1'b1;
    end else begin
        prior_outputs_3_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_3_6_V_ce0 = 1'b1;
    end else begin
        prior_outputs_3_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_3_7_V_ce0 = 1'b1;
    end else begin
        prior_outputs_3_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_3_8_V_ce0 = 1'b1;
    end else begin
        prior_outputs_3_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prior_outputs_3_9_V_ce0 = 1'b1;
    end else begin
        prior_outputs_3_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln37_fu_1745_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln37_fu_1745_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln37_fu_1750_p2 = (14'd1 + indvar_flatten16_reg_1140);

assign add_ln38_1_fu_2215_p2 = (12'd1 + indvar_flatten_reg_1162);

assign add_ln43_1_fu_2252_p2 = (add_ln43_fu_2243_p2 + zext_ln43_1_fu_2249_p1);

assign add_ln43_fu_2243_p2 = (zext_ln38_fu_2229_p1 + zext_ln43_fu_2239_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_509 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_Val2_0_reg_1195 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_10_reg_1305 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_11_reg_1316 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_12_reg_1327 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_13_reg_1338 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_14_reg_1349 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_15_reg_1360 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_1_reg_1206 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_2_reg_1217 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_3_reg_1228 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_4_reg_1239 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_58_reg_1250 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_69_reg_1261 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_7_reg_1272 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_8_reg_1283 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_9_reg_1294 = 'bx;

assign ch_t_fu_1756_p2 = (3'd1 + ap_phi_mux_ch_t_0_phi_fu_1155_p4);

assign channel_start_fu_1503_p3 = {{trunc_ln41_fu_1499_p1}, {4'd0}};

assign channel_start_mid1_fu_1779_p3 = {{trunc_ln41_1_fu_1775_p1}, {4'd0}};

assign col_fu_2209_p2 = (6'd1 + select_ln38_fu_2193_p3);

assign empty_fu_1467_p1 = H_fmap[5:0];

assign icmp_ln37_fu_1745_p2 = ((indvar_flatten16_reg_1140 == tmp_16_reg_3368) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_1762_p2 = ((indvar_flatten_reg_1162 == mul_ln29_reg_3363) ? 1'b1 : 1'b0);

assign icmp_ln39_1_fu_2169_p2 = ((col_0_reg_1184 == empty_reg_3358) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_1493_p2 = ((empty_fu_1467_p1 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_10_fu_1665_p2 = (($signed(zext_ln44_9_fu_1661_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_11_fu_1680_p2 = (($signed(zext_ln44_10_fu_1676_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_12_fu_1695_p2 = (($signed(zext_ln44_11_fu_1691_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_13_fu_1710_p2 = (($signed(zext_ln44_12_fu_1706_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_14_fu_1725_p2 = (($signed(zext_ln44_13_fu_1721_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_15_fu_1740_p2 = (($signed(zext_ln44_14_fu_1736_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_16_fu_1803_p2 = (($signed(zext_ln41_1_fu_1787_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_17_fu_1834_p2 = (($signed(zext_ln44_15_fu_1830_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_18_fu_1857_p2 = (($signed(zext_ln44_16_fu_1853_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_19_fu_1880_p2 = (($signed(zext_ln44_17_fu_1876_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_1_fu_1530_p2 = (($signed(zext_ln44_fu_1526_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_20_fu_1903_p2 = (($signed(zext_ln44_18_fu_1899_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_21_fu_1926_p2 = (($signed(zext_ln44_19_fu_1922_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_22_fu_1949_p2 = (($signed(zext_ln44_20_fu_1945_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_23_fu_1972_p2 = (($signed(zext_ln44_21_fu_1968_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_24_fu_1995_p2 = (($signed(zext_ln44_22_fu_1991_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_25_fu_2018_p2 = (($signed(zext_ln44_23_fu_2014_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_26_fu_2041_p2 = (($signed(zext_ln44_24_fu_2037_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_27_fu_2064_p2 = (($signed(zext_ln44_25_fu_2060_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_28_fu_2087_p2 = (($signed(zext_ln44_26_fu_2083_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_29_fu_2110_p2 = (($signed(zext_ln44_27_fu_2106_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_2_fu_1545_p2 = (($signed(zext_ln44_1_fu_1541_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_30_fu_2133_p2 = (($signed(zext_ln44_28_fu_2129_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_31_fu_2156_p2 = (($signed(zext_ln44_29_fu_2152_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_3_fu_1560_p2 = (($signed(zext_ln44_2_fu_1556_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_4_fu_1575_p2 = (($signed(zext_ln44_3_fu_1571_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_5_fu_1590_p2 = (($signed(zext_ln44_4_fu_1586_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_6_fu_1605_p2 = (($signed(zext_ln44_5_fu_1601_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_7_fu_1620_p2 = (($signed(zext_ln44_6_fu_1616_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_8_fu_1635_p2 = (($signed(zext_ln44_7_fu_1631_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_9_fu_1650_p2 = (($signed(zext_ln44_8_fu_1646_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_1515_p2 = (($signed(zext_ln41_fu_1511_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign msb_buffer_0_V_address0 = msb_buffer_0_V_addr_reg_3838_pp0_iter2_reg;

assign msb_buffer_0_V_address1 = msb_buffer_0_V_addr_reg_3838_pp0_iter3_reg;

always @ (*) begin
    msb_buffer_0_V_d1 = tmp_61_fu_3256_p4;
    msb_buffer_0_V_d1[zext_ln37_15_fu_2676_p1] = |(zext_ln821_30_fu_3292_p1);
end

assign msb_buffer_1_V_address0 = msb_buffer_1_V_addr_reg_3844_pp0_iter2_reg;

assign msb_buffer_1_V_address1 = msb_buffer_1_V_addr_reg_3844_pp0_iter3_reg;

always @ (*) begin
    msb_buffer_1_V_d1 = tmp_62_fu_3270_p4;
    msb_buffer_1_V_d1[zext_ln37_15_fu_2676_p1] = |(zext_ln821_31_fu_3307_p1);
end

assign mul_ln29_fu_1479_p0 = mul_ln29_fu_1479_p00;

assign mul_ln29_fu_1479_p00 = H_fmap;

assign mul_ln29_fu_1479_p1 = mul_ln29_fu_1479_p10;

assign mul_ln29_fu_1479_p10 = empty_fu_1467_p1;

assign mul_ln29_fu_1479_p2 = (mul_ln29_fu_1479_p0 * mul_ln29_fu_1479_p1);

assign or_ln38_fu_2187_p2 = (select_ln37_19_fu_2174_p3 | icmp_ln38_fu_1762_p2);

assign or_ln44_10_fu_1670_p2 = (channel_start_fu_1503_p3 | 6'd11);

assign or_ln44_11_fu_1685_p2 = (channel_start_fu_1503_p3 | 6'd12);

assign or_ln44_12_fu_1700_p2 = (channel_start_fu_1503_p3 | 6'd13);

assign or_ln44_13_fu_1715_p2 = (channel_start_fu_1503_p3 | 6'd14);

assign or_ln44_14_fu_1730_p2 = (channel_start_fu_1503_p3 | 6'd15);

assign or_ln44_15_fu_1824_p2 = (channel_start_mid1_fu_1779_p3 | 6'd1);

assign or_ln44_16_fu_1847_p2 = (channel_start_mid1_fu_1779_p3 | 6'd2);

assign or_ln44_17_fu_1870_p2 = (channel_start_mid1_fu_1779_p3 | 6'd3);

assign or_ln44_18_fu_1893_p2 = (channel_start_mid1_fu_1779_p3 | 6'd4);

assign or_ln44_19_fu_1916_p2 = (channel_start_mid1_fu_1779_p3 | 6'd5);

assign or_ln44_1_fu_1535_p2 = (channel_start_fu_1503_p3 | 6'd2);

assign or_ln44_20_fu_1939_p2 = (channel_start_mid1_fu_1779_p3 | 6'd6);

assign or_ln44_21_fu_1962_p2 = (channel_start_mid1_fu_1779_p3 | 6'd7);

assign or_ln44_22_fu_1985_p2 = (channel_start_mid1_fu_1779_p3 | 6'd8);

assign or_ln44_23_fu_2008_p2 = (channel_start_mid1_fu_1779_p3 | 6'd9);

assign or_ln44_24_fu_2031_p2 = (channel_start_mid1_fu_1779_p3 | 6'd10);

assign or_ln44_25_fu_2054_p2 = (channel_start_mid1_fu_1779_p3 | 6'd11);

assign or_ln44_26_fu_2077_p2 = (channel_start_mid1_fu_1779_p3 | 6'd12);

assign or_ln44_27_fu_2100_p2 = (channel_start_mid1_fu_1779_p3 | 6'd13);

assign or_ln44_28_fu_2123_p2 = (channel_start_mid1_fu_1779_p3 | 6'd14);

assign or_ln44_29_fu_2146_p2 = (channel_start_mid1_fu_1779_p3 | 6'd15);

assign or_ln44_2_fu_1550_p2 = (channel_start_fu_1503_p3 | 6'd3);

assign or_ln44_3_fu_1565_p2 = (channel_start_fu_1503_p3 | 6'd4);

assign or_ln44_4_fu_1580_p2 = (channel_start_fu_1503_p3 | 6'd5);

assign or_ln44_5_fu_1595_p2 = (channel_start_fu_1503_p3 | 6'd6);

assign or_ln44_6_fu_1610_p2 = (channel_start_fu_1503_p3 | 6'd7);

assign or_ln44_7_fu_1625_p2 = (channel_start_fu_1503_p3 | 6'd8);

assign or_ln44_8_fu_1640_p2 = (channel_start_fu_1503_p3 | 6'd9);

assign or_ln44_9_fu_1655_p2 = (channel_start_fu_1503_p3 | 6'd10);

assign or_ln44_fu_1520_p2 = (channel_start_fu_1503_p3 | 6'd1);

assign prior_outputs_0_0_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_0_10_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_0_11_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_0_12_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_0_13_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_0_14_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_0_15_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_0_1_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_0_2_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_0_3_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_0_4_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_0_5_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_0_6_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_0_7_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_0_8_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_0_9_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_1_0_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_1_10_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_1_11_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_1_12_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_1_13_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_1_14_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_1_15_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_1_1_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_1_2_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_1_3_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_1_4_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_1_5_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_1_6_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_1_7_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_1_8_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_1_9_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_2_0_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_2_10_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_2_11_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_2_12_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_2_13_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_2_14_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_2_15_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_2_1_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_2_2_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_2_3_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_2_4_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_2_5_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_2_6_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_2_7_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_2_8_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_2_9_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_3_0_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_3_10_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_3_11_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_3_12_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_3_13_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_3_14_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_3_15_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_3_1_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_3_2_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_3_3_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_3_4_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_3_5_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_3_6_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_3_7_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_3_8_V_address0 = zext_ln43_2_fu_2258_p1;

assign prior_outputs_3_9_V_address0 = zext_ln43_2_fu_2258_p1;

assign row_fu_2181_p2 = (6'd1 + select_ln37_fu_1767_p3);

assign select_ln37_10_fu_1977_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? icmp_ln45_23_fu_1972_p2 : icmp_ln45_7_fu_1620_p2);

assign select_ln37_11_fu_2000_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? icmp_ln45_24_fu_1995_p2 : icmp_ln45_8_fu_1635_p2);

assign select_ln37_12_fu_2023_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? icmp_ln45_25_fu_2018_p2 : icmp_ln45_9_fu_1650_p2);

assign select_ln37_13_fu_2046_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? icmp_ln45_26_fu_2041_p2 : icmp_ln45_10_fu_1665_p2);

assign select_ln37_14_fu_2069_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? icmp_ln45_27_fu_2064_p2 : icmp_ln45_11_fu_1680_p2);

assign select_ln37_15_fu_2092_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? icmp_ln45_28_fu_2087_p2 : icmp_ln45_12_fu_1695_p2);

assign select_ln37_16_fu_2115_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? icmp_ln45_29_fu_2110_p2 : icmp_ln45_13_fu_1710_p2);

assign select_ln37_17_fu_2138_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? icmp_ln45_30_fu_2133_p2 : icmp_ln45_14_fu_1725_p2);

assign select_ln37_18_fu_2161_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? icmp_ln45_31_fu_2156_p2 : icmp_ln45_15_fu_1740_p2);

assign select_ln37_19_fu_2174_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? icmp_ln39_reg_3373 : icmp_ln39_1_fu_2169_p2);

assign select_ln37_1_fu_1791_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? ch_t_fu_1756_p2 : ap_phi_mux_ch_t_0_phi_fu_1155_p4);

assign select_ln37_2_fu_1808_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? icmp_ln45_16_fu_1803_p2 : icmp_ln45_fu_1515_p2);

assign select_ln37_3_fu_1816_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? channel_start_mid1_fu_1779_p3 : channel_start_fu_1503_p3);

assign select_ln37_4_fu_1839_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? icmp_ln45_17_fu_1834_p2 : icmp_ln45_1_fu_1530_p2);

assign select_ln37_5_fu_1862_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? icmp_ln45_18_fu_1857_p2 : icmp_ln45_2_fu_1545_p2);

assign select_ln37_6_fu_1885_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? icmp_ln45_19_fu_1880_p2 : icmp_ln45_3_fu_1560_p2);

assign select_ln37_7_fu_1908_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? icmp_ln45_20_fu_1903_p2 : icmp_ln45_4_fu_1575_p2);

assign select_ln37_8_fu_1931_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? icmp_ln45_21_fu_1926_p2 : icmp_ln45_5_fu_1590_p2);

assign select_ln37_9_fu_1954_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? icmp_ln45_22_fu_1949_p2 : icmp_ln45_6_fu_1605_p2);

assign select_ln37_fu_1767_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_row_0_phi_fu_1177_p4);

assign select_ln38_1_fu_2201_p3 = ((select_ln37_19_fu_2174_p3[0:0] === 1'b1) ? row_fu_2181_p2 : select_ln37_fu_1767_p3);

assign select_ln38_2_fu_2221_p3 = ((icmp_ln38_fu_1762_p2[0:0] === 1'b1) ? 12'd1 : add_ln38_1_fu_2215_p2);

assign select_ln38_fu_2193_p3 = ((or_ln38_fu_2187_p2[0:0] === 1'b1) ? 6'd0 : col_0_reg_1184);

assign tmp_16_fu_1485_p3 = {{mul_ln29_fu_1479_p2}, {2'd0}};

assign tmp_17_fu_2232_p3 = {{select_ln38_1_reg_3501}, {5'd0}};

assign tmp_18_fu_2684_p3 = ap_phi_mux_p_Val2_0_phi_fu_1199_p4[32'd1];

always @ (*) begin
    tmp_19_fu_2696_p4 = msb_buffer_0_V_q0;
    tmp_19_fu_2696_p4[zext_ln37_fu_2541_p1] = |(zext_ln821_fu_2692_p1);
end

always @ (*) begin
    tmp_20_fu_2710_p4 = msb_buffer_1_V_q0;
    tmp_20_fu_2710_p4[zext_ln37_fu_2541_p1] = |(zext_ln821_1_fu_2706_p1);
end

assign tmp_21_fu_2724_p3 = ap_phi_mux_p_Val2_1_phi_fu_1210_p4[32'd1];

always @ (*) begin
    tmp_22_fu_2736_p4 = tmp_19_fu_2696_p4;
    tmp_22_fu_2736_p4[zext_ln37_1_fu_2550_p1] = |(zext_ln821_2_fu_2732_p1);
end

always @ (*) begin
    tmp_23_fu_2750_p4 = tmp_20_fu_2710_p4;
    tmp_23_fu_2750_p4[zext_ln37_1_fu_2550_p1] = |(zext_ln821_3_fu_2746_p1);
end

assign tmp_24_fu_2764_p3 = ap_phi_mux_p_Val2_2_phi_fu_1221_p4[32'd1];

always @ (*) begin
    tmp_25_fu_2776_p4 = tmp_22_fu_2736_p4;
    tmp_25_fu_2776_p4[zext_ln37_2_fu_2559_p1] = |(zext_ln821_4_fu_2772_p1);
end

always @ (*) begin
    tmp_26_fu_2790_p4 = tmp_23_fu_2750_p4;
    tmp_26_fu_2790_p4[zext_ln37_2_fu_2559_p1] = |(zext_ln821_5_fu_2786_p1);
end

assign tmp_27_fu_2804_p3 = ap_phi_mux_p_Val2_3_phi_fu_1232_p4[32'd1];

always @ (*) begin
    tmp_28_fu_2816_p4 = tmp_25_fu_2776_p4;
    tmp_28_fu_2816_p4[zext_ln37_3_fu_2568_p1] = |(zext_ln821_6_fu_2812_p1);
end

always @ (*) begin
    tmp_29_fu_2830_p4 = tmp_26_fu_2790_p4;
    tmp_29_fu_2830_p4[zext_ln37_3_fu_2568_p1] = |(zext_ln821_7_fu_2826_p1);
end

assign tmp_30_fu_2844_p3 = ap_phi_mux_p_Val2_4_phi_fu_1243_p4[32'd1];

always @ (*) begin
    tmp_31_fu_2856_p4 = tmp_28_fu_2816_p4;
    tmp_31_fu_2856_p4[zext_ln37_4_fu_2577_p1] = |(zext_ln821_8_fu_2852_p1);
end

always @ (*) begin
    tmp_32_fu_2870_p4 = tmp_29_fu_2830_p4;
    tmp_32_fu_2870_p4[zext_ln37_4_fu_2577_p1] = |(zext_ln821_9_fu_2866_p1);
end

assign tmp_33_fu_2884_p3 = ap_phi_mux_p_Val2_58_phi_fu_1254_p4[32'd1];

always @ (*) begin
    tmp_34_fu_2896_p4 = tmp_31_fu_2856_p4;
    tmp_34_fu_2896_p4[zext_ln37_5_fu_2586_p1] = |(zext_ln821_10_fu_2892_p1);
end

always @ (*) begin
    tmp_35_fu_2910_p4 = tmp_32_fu_2870_p4;
    tmp_35_fu_2910_p4[zext_ln37_5_fu_2586_p1] = |(zext_ln821_11_fu_2906_p1);
end

assign tmp_36_fu_2924_p3 = ap_phi_mux_p_Val2_69_phi_fu_1265_p4[32'd1];

always @ (*) begin
    tmp_37_fu_2936_p4 = tmp_34_fu_2896_p4;
    tmp_37_fu_2936_p4[zext_ln37_6_fu_2595_p1] = |(zext_ln821_12_fu_2932_p1);
end

always @ (*) begin
    tmp_38_fu_2950_p4 = tmp_35_fu_2910_p4;
    tmp_38_fu_2950_p4[zext_ln37_6_fu_2595_p1] = |(zext_ln821_13_fu_2946_p1);
end

assign tmp_39_fu_2964_p3 = ap_phi_mux_p_Val2_7_phi_fu_1276_p4[32'd1];

always @ (*) begin
    tmp_40_fu_2976_p4 = tmp_37_fu_2936_p4;
    tmp_40_fu_2976_p4[zext_ln37_7_fu_2604_p1] = |(zext_ln821_14_fu_2972_p1);
end

always @ (*) begin
    tmp_41_fu_2990_p4 = tmp_38_fu_2950_p4;
    tmp_41_fu_2990_p4[zext_ln37_7_fu_2604_p1] = |(zext_ln821_15_fu_2986_p1);
end

assign tmp_42_fu_3004_p3 = ap_phi_mux_p_Val2_8_phi_fu_1287_p4[32'd1];

always @ (*) begin
    tmp_43_fu_3016_p4 = tmp_40_fu_2976_p4;
    tmp_43_fu_3016_p4[zext_ln37_8_fu_2613_p1] = |(zext_ln821_16_fu_3012_p1);
end

always @ (*) begin
    tmp_44_fu_3030_p4 = tmp_41_fu_2990_p4;
    tmp_44_fu_3030_p4[zext_ln37_8_fu_2613_p1] = |(zext_ln821_17_fu_3026_p1);
end

assign tmp_45_fu_3044_p3 = ap_phi_mux_p_Val2_9_phi_fu_1298_p4[32'd1];

always @ (*) begin
    tmp_46_fu_3056_p4 = tmp_43_fu_3016_p4;
    tmp_46_fu_3056_p4[zext_ln37_9_fu_2622_p1] = |(zext_ln821_18_fu_3052_p1);
end

always @ (*) begin
    tmp_47_fu_3070_p4 = tmp_44_fu_3030_p4;
    tmp_47_fu_3070_p4[zext_ln37_9_fu_2622_p1] = |(zext_ln821_19_fu_3066_p1);
end

assign tmp_48_fu_3084_p3 = ap_phi_mux_p_Val2_10_phi_fu_1309_p4[32'd1];

always @ (*) begin
    tmp_49_fu_3096_p4 = tmp_46_fu_3056_p4;
    tmp_49_fu_3096_p4[zext_ln37_10_fu_2631_p1] = |(zext_ln821_20_fu_3092_p1);
end

always @ (*) begin
    tmp_50_fu_3110_p4 = tmp_47_fu_3070_p4;
    tmp_50_fu_3110_p4[zext_ln37_10_fu_2631_p1] = |(zext_ln821_21_fu_3106_p1);
end

assign tmp_51_fu_3124_p3 = ap_phi_mux_p_Val2_11_phi_fu_1320_p4[32'd1];

always @ (*) begin
    tmp_52_fu_3136_p4 = tmp_49_fu_3096_p4;
    tmp_52_fu_3136_p4[zext_ln37_11_fu_2640_p1] = |(zext_ln821_22_fu_3132_p1);
end

always @ (*) begin
    tmp_53_fu_3150_p4 = tmp_50_fu_3110_p4;
    tmp_53_fu_3150_p4[zext_ln37_11_fu_2640_p1] = |(zext_ln821_23_fu_3146_p1);
end

assign tmp_54_fu_3164_p3 = ap_phi_mux_p_Val2_12_phi_fu_1331_p4[32'd1];

always @ (*) begin
    tmp_55_fu_3176_p4 = tmp_52_fu_3136_p4;
    tmp_55_fu_3176_p4[zext_ln37_12_fu_2649_p1] = |(zext_ln821_24_fu_3172_p1);
end

always @ (*) begin
    tmp_56_fu_3190_p4 = tmp_53_fu_3150_p4;
    tmp_56_fu_3190_p4[zext_ln37_12_fu_2649_p1] = |(zext_ln821_25_fu_3186_p1);
end

assign tmp_57_fu_3204_p3 = ap_phi_mux_p_Val2_13_phi_fu_1342_p4[32'd1];

always @ (*) begin
    tmp_58_fu_3216_p4 = tmp_55_fu_3176_p4;
    tmp_58_fu_3216_p4[zext_ln37_13_fu_2658_p1] = |(zext_ln821_26_fu_3212_p1);
end

always @ (*) begin
    tmp_59_fu_3230_p4 = tmp_56_fu_3190_p4;
    tmp_59_fu_3230_p4[zext_ln37_13_fu_2658_p1] = |(zext_ln821_27_fu_3226_p1);
end

assign tmp_60_fu_3244_p3 = ap_phi_mux_p_Val2_14_phi_fu_1353_p4[32'd1];

always @ (*) begin
    tmp_61_fu_3256_p4 = tmp_58_fu_3216_p4;
    tmp_61_fu_3256_p4[zext_ln37_14_fu_2667_p1] = |(zext_ln821_28_fu_3252_p1);
end

always @ (*) begin
    tmp_62_fu_3270_p4 = tmp_59_fu_3230_p4;
    tmp_62_fu_3270_p4[zext_ln37_14_fu_2667_p1] = |(zext_ln821_29_fu_3266_p1);
end

assign tmp_63_fu_3284_p3 = ap_phi_mux_p_Val2_15_phi_fu_1364_p4[32'd1];

assign trunc_ln37_fu_1799_p1 = select_ln37_1_fu_1791_p3[1:0];

assign trunc_ln41_1_fu_1775_p1 = ch_t_fu_1756_p2[1:0];

assign trunc_ln41_fu_1499_p1 = ap_phi_mux_ch_t_0_phi_fu_1155_p4[1:0];

assign trunc_ln821_10_fu_3080_p1 = ap_phi_mux_p_Val2_10_phi_fu_1309_p4[0:0];

assign trunc_ln821_11_fu_3120_p1 = ap_phi_mux_p_Val2_11_phi_fu_1320_p4[0:0];

assign trunc_ln821_12_fu_3160_p1 = ap_phi_mux_p_Val2_12_phi_fu_1331_p4[0:0];

assign trunc_ln821_13_fu_3200_p1 = ap_phi_mux_p_Val2_13_phi_fu_1342_p4[0:0];

assign trunc_ln821_14_fu_3240_p1 = ap_phi_mux_p_Val2_14_phi_fu_1353_p4[0:0];

assign trunc_ln821_15_fu_3280_p1 = ap_phi_mux_p_Val2_15_phi_fu_1364_p4[0:0];

assign trunc_ln821_1_fu_2720_p1 = ap_phi_mux_p_Val2_1_phi_fu_1210_p4[0:0];

assign trunc_ln821_2_fu_2760_p1 = ap_phi_mux_p_Val2_2_phi_fu_1221_p4[0:0];

assign trunc_ln821_3_fu_2800_p1 = ap_phi_mux_p_Val2_3_phi_fu_1232_p4[0:0];

assign trunc_ln821_4_fu_2840_p1 = ap_phi_mux_p_Val2_4_phi_fu_1243_p4[0:0];

assign trunc_ln821_5_fu_2880_p1 = ap_phi_mux_p_Val2_58_phi_fu_1254_p4[0:0];

assign trunc_ln821_6_fu_2920_p1 = ap_phi_mux_p_Val2_69_phi_fu_1265_p4[0:0];

assign trunc_ln821_7_fu_2960_p1 = ap_phi_mux_p_Val2_7_phi_fu_1276_p4[0:0];

assign trunc_ln821_8_fu_3000_p1 = ap_phi_mux_p_Val2_8_phi_fu_1287_p4[0:0];

assign trunc_ln821_9_fu_3040_p1 = ap_phi_mux_p_Val2_9_phi_fu_1298_p4[0:0];

assign trunc_ln821_fu_2680_p1 = ap_phi_mux_p_Val2_0_phi_fu_1199_p4[0:0];

assign xor_ln37_10_fu_2626_p2 = (select_ln37_3_reg_3416_pp0_iter3_reg ^ 6'd53);

assign xor_ln37_11_fu_2635_p2 = (select_ln37_3_reg_3416_pp0_iter3_reg ^ 6'd52);

assign xor_ln37_12_fu_2644_p2 = (select_ln37_3_reg_3416_pp0_iter3_reg ^ 6'd51);

assign xor_ln37_13_fu_2653_p2 = (select_ln37_3_reg_3416_pp0_iter3_reg ^ 6'd50);

assign xor_ln37_14_fu_2662_p2 = (select_ln37_3_reg_3416_pp0_iter3_reg ^ 6'd49);

assign xor_ln37_15_fu_2671_p2 = (select_ln37_3_reg_3416_pp0_iter3_reg ^ 6'd48);

assign xor_ln37_1_fu_2545_p2 = (select_ln37_3_reg_3416_pp0_iter3_reg ^ 6'd62);

assign xor_ln37_2_fu_2554_p2 = (select_ln37_3_reg_3416_pp0_iter3_reg ^ 6'd61);

assign xor_ln37_3_fu_2563_p2 = (select_ln37_3_reg_3416_pp0_iter3_reg ^ 6'd60);

assign xor_ln37_4_fu_2572_p2 = (select_ln37_3_reg_3416_pp0_iter3_reg ^ 6'd59);

assign xor_ln37_5_fu_2581_p2 = (select_ln37_3_reg_3416_pp0_iter3_reg ^ 6'd58);

assign xor_ln37_6_fu_2590_p2 = (select_ln37_3_reg_3416_pp0_iter3_reg ^ 6'd57);

assign xor_ln37_7_fu_2599_p2 = (select_ln37_3_reg_3416_pp0_iter3_reg ^ 6'd56);

assign xor_ln37_8_fu_2608_p2 = (select_ln37_3_reg_3416_pp0_iter3_reg ^ 6'd55);

assign xor_ln37_9_fu_2617_p2 = (select_ln37_3_reg_3416_pp0_iter3_reg ^ 6'd54);

assign xor_ln37_fu_2536_p2 = (select_ln37_3_reg_3416_pp0_iter3_reg ^ 6'd63);

assign zext_ln37_10_fu_2631_p1 = xor_ln37_10_fu_2626_p2;

assign zext_ln37_11_fu_2640_p1 = xor_ln37_11_fu_2635_p2;

assign zext_ln37_12_fu_2649_p1 = xor_ln37_12_fu_2644_p2;

assign zext_ln37_13_fu_2658_p1 = xor_ln37_13_fu_2653_p2;

assign zext_ln37_14_fu_2667_p1 = xor_ln37_14_fu_2662_p2;

assign zext_ln37_15_fu_2676_p1 = xor_ln37_15_fu_2671_p2;

assign zext_ln37_1_fu_2550_p1 = xor_ln37_1_fu_2545_p2;

assign zext_ln37_2_fu_2559_p1 = xor_ln37_2_fu_2554_p2;

assign zext_ln37_3_fu_2568_p1 = xor_ln37_3_fu_2563_p2;

assign zext_ln37_4_fu_2577_p1 = xor_ln37_4_fu_2572_p2;

assign zext_ln37_5_fu_2586_p1 = xor_ln37_5_fu_2581_p2;

assign zext_ln37_6_fu_2595_p1 = xor_ln37_6_fu_2590_p2;

assign zext_ln37_7_fu_2604_p1 = xor_ln37_7_fu_2599_p2;

assign zext_ln37_8_fu_2613_p1 = xor_ln37_8_fu_2608_p2;

assign zext_ln37_9_fu_2622_p1 = xor_ln37_9_fu_2617_p2;

assign zext_ln37_fu_2541_p1 = xor_ln37_fu_2536_p2;

assign zext_ln38_fu_2229_p1 = select_ln38_1_reg_3501;

assign zext_ln41_1_fu_1787_p1 = channel_start_mid1_fu_1779_p3;

assign zext_ln41_fu_1511_p1 = channel_start_fu_1503_p3;

assign zext_ln43_1_fu_2249_p1 = select_ln38_reg_3496;

assign zext_ln43_2_fu_2258_p1 = add_ln43_1_fu_2252_p2;

assign zext_ln43_fu_2239_p1 = tmp_17_fu_2232_p3;

assign zext_ln44_10_fu_1676_p1 = or_ln44_10_fu_1670_p2;

assign zext_ln44_11_fu_1691_p1 = or_ln44_11_fu_1685_p2;

assign zext_ln44_12_fu_1706_p1 = or_ln44_12_fu_1700_p2;

assign zext_ln44_13_fu_1721_p1 = or_ln44_13_fu_1715_p2;

assign zext_ln44_14_fu_1736_p1 = or_ln44_14_fu_1730_p2;

assign zext_ln44_15_fu_1830_p1 = or_ln44_15_fu_1824_p2;

assign zext_ln44_16_fu_1853_p1 = or_ln44_16_fu_1847_p2;

assign zext_ln44_17_fu_1876_p1 = or_ln44_17_fu_1870_p2;

assign zext_ln44_18_fu_1899_p1 = or_ln44_18_fu_1893_p2;

assign zext_ln44_19_fu_1922_p1 = or_ln44_19_fu_1916_p2;

assign zext_ln44_1_fu_1541_p1 = or_ln44_1_fu_1535_p2;

assign zext_ln44_20_fu_1945_p1 = or_ln44_20_fu_1939_p2;

assign zext_ln44_21_fu_1968_p1 = or_ln44_21_fu_1962_p2;

assign zext_ln44_22_fu_1991_p1 = or_ln44_22_fu_1985_p2;

assign zext_ln44_23_fu_2014_p1 = or_ln44_23_fu_2008_p2;

assign zext_ln44_24_fu_2037_p1 = or_ln44_24_fu_2031_p2;

assign zext_ln44_25_fu_2060_p1 = or_ln44_25_fu_2054_p2;

assign zext_ln44_26_fu_2083_p1 = or_ln44_26_fu_2077_p2;

assign zext_ln44_27_fu_2106_p1 = or_ln44_27_fu_2100_p2;

assign zext_ln44_28_fu_2129_p1 = or_ln44_28_fu_2123_p2;

assign zext_ln44_29_fu_2152_p1 = or_ln44_29_fu_2146_p2;

assign zext_ln44_2_fu_1556_p1 = or_ln44_2_fu_1550_p2;

assign zext_ln44_3_fu_1571_p1 = or_ln44_3_fu_1565_p2;

assign zext_ln44_4_fu_1586_p1 = or_ln44_4_fu_1580_p2;

assign zext_ln44_5_fu_1601_p1 = or_ln44_5_fu_1595_p2;

assign zext_ln44_6_fu_1616_p1 = or_ln44_6_fu_1610_p2;

assign zext_ln44_7_fu_1631_p1 = or_ln44_7_fu_1625_p2;

assign zext_ln44_8_fu_1646_p1 = or_ln44_8_fu_1640_p2;

assign zext_ln44_9_fu_1661_p1 = or_ln44_9_fu_1655_p2;

assign zext_ln44_fu_1526_p1 = or_ln44_fu_1520_p2;

assign zext_ln821_10_fu_2892_p1 = tmp_33_fu_2884_p3;

assign zext_ln821_11_fu_2906_p1 = trunc_ln821_5_fu_2880_p1;

assign zext_ln821_12_fu_2932_p1 = tmp_36_fu_2924_p3;

assign zext_ln821_13_fu_2946_p1 = trunc_ln821_6_fu_2920_p1;

assign zext_ln821_14_fu_2972_p1 = tmp_39_fu_2964_p3;

assign zext_ln821_15_fu_2986_p1 = trunc_ln821_7_fu_2960_p1;

assign zext_ln821_16_fu_3012_p1 = tmp_42_fu_3004_p3;

assign zext_ln821_17_fu_3026_p1 = trunc_ln821_8_fu_3000_p1;

assign zext_ln821_18_fu_3052_p1 = tmp_45_fu_3044_p3;

assign zext_ln821_19_fu_3066_p1 = trunc_ln821_9_fu_3040_p1;

assign zext_ln821_1_fu_2706_p1 = trunc_ln821_fu_2680_p1;

assign zext_ln821_20_fu_3092_p1 = tmp_48_fu_3084_p3;

assign zext_ln821_21_fu_3106_p1 = trunc_ln821_10_fu_3080_p1;

assign zext_ln821_22_fu_3132_p1 = tmp_51_fu_3124_p3;

assign zext_ln821_23_fu_3146_p1 = trunc_ln821_11_fu_3120_p1;

assign zext_ln821_24_fu_3172_p1 = tmp_54_fu_3164_p3;

assign zext_ln821_25_fu_3186_p1 = trunc_ln821_12_fu_3160_p1;

assign zext_ln821_26_fu_3212_p1 = tmp_57_fu_3204_p3;

assign zext_ln821_27_fu_3226_p1 = trunc_ln821_13_fu_3200_p1;

assign zext_ln821_28_fu_3252_p1 = tmp_60_fu_3244_p3;

assign zext_ln821_29_fu_3266_p1 = trunc_ln821_14_fu_3240_p1;

assign zext_ln821_2_fu_2732_p1 = tmp_21_fu_2724_p3;

assign zext_ln821_30_fu_3292_p1 = tmp_63_fu_3284_p3;

assign zext_ln821_31_fu_3307_p1 = trunc_ln821_15_fu_3280_p1;

assign zext_ln821_3_fu_2746_p1 = trunc_ln821_1_fu_2720_p1;

assign zext_ln821_4_fu_2772_p1 = tmp_24_fu_2764_p3;

assign zext_ln821_5_fu_2786_p1 = trunc_ln821_2_fu_2760_p1;

assign zext_ln821_6_fu_2812_p1 = tmp_27_fu_2804_p3;

assign zext_ln821_7_fu_2826_p1 = trunc_ln821_3_fu_2800_p1;

assign zext_ln821_8_fu_2852_p1 = tmp_30_fu_2844_p3;

assign zext_ln821_9_fu_2866_p1 = trunc_ln821_4_fu_2840_p1;

assign zext_ln821_fu_2692_p1 = tmp_18_fu_2684_p3;

always @ (posedge ap_clk) begin
    tmp_16_reg_3368[1:0] <= 2'b00;
    select_ln37_3_reg_3416[3:0] <= 4'b0000;
    select_ln37_3_reg_3416_pp0_iter1_reg[3:0] <= 4'b0000;
    select_ln37_3_reg_3416_pp0_iter2_reg[3:0] <= 4'b0000;
    select_ln37_3_reg_3416_pp0_iter3_reg[3:0] <= 4'b0000;
end

endmodule //quant_and_pack
