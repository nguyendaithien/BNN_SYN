// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_buf_0_0_V_address0,
        out_buf_0_0_V_ce0,
        out_buf_0_0_V_we0,
        out_buf_0_0_V_d0,
        out_buf_0_1_V_address0,
        out_buf_0_1_V_ce0,
        out_buf_0_1_V_we0,
        out_buf_0_1_V_d0,
        out_buf_0_2_V_address0,
        out_buf_0_2_V_ce0,
        out_buf_0_2_V_we0,
        out_buf_0_2_V_d0,
        out_buf_0_3_V_address0,
        out_buf_0_3_V_ce0,
        out_buf_0_3_V_we0,
        out_buf_0_3_V_d0,
        out_buf_0_4_V_address0,
        out_buf_0_4_V_ce0,
        out_buf_0_4_V_we0,
        out_buf_0_4_V_d0,
        out_buf_0_5_V_address0,
        out_buf_0_5_V_ce0,
        out_buf_0_5_V_we0,
        out_buf_0_5_V_d0,
        out_buf_0_6_V_address0,
        out_buf_0_6_V_ce0,
        out_buf_0_6_V_we0,
        out_buf_0_6_V_d0,
        out_buf_0_7_V_address0,
        out_buf_0_7_V_ce0,
        out_buf_0_7_V_we0,
        out_buf_0_7_V_d0,
        out_buf_0_8_V_address0,
        out_buf_0_8_V_ce0,
        out_buf_0_8_V_we0,
        out_buf_0_8_V_d0,
        out_buf_0_9_V_address0,
        out_buf_0_9_V_ce0,
        out_buf_0_9_V_we0,
        out_buf_0_9_V_d0,
        out_buf_0_10_V_address0,
        out_buf_0_10_V_ce0,
        out_buf_0_10_V_we0,
        out_buf_0_10_V_d0,
        out_buf_0_11_V_address0,
        out_buf_0_11_V_ce0,
        out_buf_0_11_V_we0,
        out_buf_0_11_V_d0,
        out_buf_0_12_V_address0,
        out_buf_0_12_V_ce0,
        out_buf_0_12_V_we0,
        out_buf_0_12_V_d0,
        out_buf_0_13_V_address0,
        out_buf_0_13_V_ce0,
        out_buf_0_13_V_we0,
        out_buf_0_13_V_d0,
        out_buf_0_14_V_address0,
        out_buf_0_14_V_ce0,
        out_buf_0_14_V_we0,
        out_buf_0_14_V_d0,
        out_buf_0_15_V_address0,
        out_buf_0_15_V_ce0,
        out_buf_0_15_V_we0,
        out_buf_0_15_V_d0,
        block_t0_0_V_address0,
        block_t0_0_V_ce0,
        block_t0_0_V_q0,
        block_t0_1_V_address0,
        block_t0_1_V_ce0,
        block_t0_1_V_q0,
        block_t0_2_V_address0,
        block_t0_2_V_ce0,
        block_t0_2_V_q0,
        block_t0_3_V_address0,
        block_t0_3_V_ce0,
        block_t0_3_V_q0,
        block_t0_4_V_address0,
        block_t0_4_V_ce0,
        block_t0_4_V_q0,
        block_t0_5_V_address0,
        block_t0_5_V_ce0,
        block_t0_5_V_q0,
        block_t0_6_V_address0,
        block_t0_6_V_ce0,
        block_t0_6_V_q0,
        block_t0_7_V_address0,
        block_t0_7_V_ce0,
        block_t0_7_V_q0,
        block_t0_8_V_address0,
        block_t0_8_V_ce0,
        block_t0_8_V_q0,
        block_t0_9_V_address0,
        block_t0_9_V_ce0,
        block_t0_9_V_q0,
        block_t0_10_V_address0,
        block_t0_10_V_ce0,
        block_t0_10_V_q0,
        block_t0_11_V_address0,
        block_t0_11_V_ce0,
        block_t0_11_V_q0,
        block_t0_12_V_address0,
        block_t0_12_V_ce0,
        block_t0_12_V_q0,
        block_t0_13_V_address0,
        block_t0_13_V_ce0,
        block_t0_13_V_q0,
        block_t0_14_V_address0,
        block_t0_14_V_ce0,
        block_t0_14_V_q0,
        block_t0_15_V_address0,
        block_t0_15_V_ce0,
        block_t0_15_V_q0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state8 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] out_buf_0_0_V_address0;
output   out_buf_0_0_V_ce0;
output   out_buf_0_0_V_we0;
output  [15:0] out_buf_0_0_V_d0;
output  [10:0] out_buf_0_1_V_address0;
output   out_buf_0_1_V_ce0;
output   out_buf_0_1_V_we0;
output  [15:0] out_buf_0_1_V_d0;
output  [10:0] out_buf_0_2_V_address0;
output   out_buf_0_2_V_ce0;
output   out_buf_0_2_V_we0;
output  [15:0] out_buf_0_2_V_d0;
output  [10:0] out_buf_0_3_V_address0;
output   out_buf_0_3_V_ce0;
output   out_buf_0_3_V_we0;
output  [15:0] out_buf_0_3_V_d0;
output  [10:0] out_buf_0_4_V_address0;
output   out_buf_0_4_V_ce0;
output   out_buf_0_4_V_we0;
output  [15:0] out_buf_0_4_V_d0;
output  [10:0] out_buf_0_5_V_address0;
output   out_buf_0_5_V_ce0;
output   out_buf_0_5_V_we0;
output  [15:0] out_buf_0_5_V_d0;
output  [10:0] out_buf_0_6_V_address0;
output   out_buf_0_6_V_ce0;
output   out_buf_0_6_V_we0;
output  [15:0] out_buf_0_6_V_d0;
output  [10:0] out_buf_0_7_V_address0;
output   out_buf_0_7_V_ce0;
output   out_buf_0_7_V_we0;
output  [15:0] out_buf_0_7_V_d0;
output  [10:0] out_buf_0_8_V_address0;
output   out_buf_0_8_V_ce0;
output   out_buf_0_8_V_we0;
output  [15:0] out_buf_0_8_V_d0;
output  [10:0] out_buf_0_9_V_address0;
output   out_buf_0_9_V_ce0;
output   out_buf_0_9_V_we0;
output  [15:0] out_buf_0_9_V_d0;
output  [10:0] out_buf_0_10_V_address0;
output   out_buf_0_10_V_ce0;
output   out_buf_0_10_V_we0;
output  [15:0] out_buf_0_10_V_d0;
output  [10:0] out_buf_0_11_V_address0;
output   out_buf_0_11_V_ce0;
output   out_buf_0_11_V_we0;
output  [15:0] out_buf_0_11_V_d0;
output  [10:0] out_buf_0_12_V_address0;
output   out_buf_0_12_V_ce0;
output   out_buf_0_12_V_we0;
output  [15:0] out_buf_0_12_V_d0;
output  [10:0] out_buf_0_13_V_address0;
output   out_buf_0_13_V_ce0;
output   out_buf_0_13_V_we0;
output  [15:0] out_buf_0_13_V_d0;
output  [10:0] out_buf_0_14_V_address0;
output   out_buf_0_14_V_ce0;
output   out_buf_0_14_V_we0;
output  [15:0] out_buf_0_14_V_d0;
output  [10:0] out_buf_0_15_V_address0;
output   out_buf_0_15_V_ce0;
output   out_buf_0_15_V_we0;
output  [15:0] out_buf_0_15_V_d0;
output  [10:0] block_t0_0_V_address0;
output   block_t0_0_V_ce0;
input  [15:0] block_t0_0_V_q0;
output  [10:0] block_t0_1_V_address0;
output   block_t0_1_V_ce0;
input  [15:0] block_t0_1_V_q0;
output  [10:0] block_t0_2_V_address0;
output   block_t0_2_V_ce0;
input  [15:0] block_t0_2_V_q0;
output  [10:0] block_t0_3_V_address0;
output   block_t0_3_V_ce0;
input  [15:0] block_t0_3_V_q0;
output  [10:0] block_t0_4_V_address0;
output   block_t0_4_V_ce0;
input  [15:0] block_t0_4_V_q0;
output  [10:0] block_t0_5_V_address0;
output   block_t0_5_V_ce0;
input  [15:0] block_t0_5_V_q0;
output  [10:0] block_t0_6_V_address0;
output   block_t0_6_V_ce0;
input  [15:0] block_t0_6_V_q0;
output  [10:0] block_t0_7_V_address0;
output   block_t0_7_V_ce0;
input  [15:0] block_t0_7_V_q0;
output  [10:0] block_t0_8_V_address0;
output   block_t0_8_V_ce0;
input  [15:0] block_t0_8_V_q0;
output  [10:0] block_t0_9_V_address0;
output   block_t0_9_V_ce0;
input  [15:0] block_t0_9_V_q0;
output  [10:0] block_t0_10_V_address0;
output   block_t0_10_V_ce0;
input  [15:0] block_t0_10_V_q0;
output  [10:0] block_t0_11_V_address0;
output   block_t0_11_V_ce0;
input  [15:0] block_t0_11_V_q0;
output  [10:0] block_t0_12_V_address0;
output   block_t0_12_V_ce0;
input  [15:0] block_t0_12_V_q0;
output  [10:0] block_t0_13_V_address0;
output   block_t0_13_V_ce0;
input  [15:0] block_t0_13_V_q0;
output  [10:0] block_t0_14_V_address0;
output   block_t0_14_V_ce0;
input  [15:0] block_t0_14_V_q0;
output  [10:0] block_t0_15_V_address0;
output   block_t0_15_V_ce0;
input  [15:0] block_t0_15_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_buf_0_0_V_ce0;
reg out_buf_0_0_V_we0;
reg out_buf_0_1_V_ce0;
reg out_buf_0_1_V_we0;
reg out_buf_0_2_V_ce0;
reg out_buf_0_2_V_we0;
reg out_buf_0_3_V_ce0;
reg out_buf_0_3_V_we0;
reg out_buf_0_4_V_ce0;
reg out_buf_0_4_V_we0;
reg out_buf_0_5_V_ce0;
reg out_buf_0_5_V_we0;
reg out_buf_0_6_V_ce0;
reg out_buf_0_6_V_we0;
reg out_buf_0_7_V_ce0;
reg out_buf_0_7_V_we0;
reg out_buf_0_8_V_ce0;
reg out_buf_0_8_V_we0;
reg out_buf_0_9_V_ce0;
reg out_buf_0_9_V_we0;
reg out_buf_0_10_V_ce0;
reg out_buf_0_10_V_we0;
reg out_buf_0_11_V_ce0;
reg out_buf_0_11_V_we0;
reg out_buf_0_12_V_ce0;
reg out_buf_0_12_V_we0;
reg out_buf_0_13_V_ce0;
reg out_buf_0_13_V_we0;
reg out_buf_0_14_V_ce0;
reg out_buf_0_14_V_we0;
reg out_buf_0_15_V_ce0;
reg out_buf_0_15_V_we0;
reg block_t0_0_V_ce0;
reg block_t0_1_V_ce0;
reg block_t0_2_V_ce0;
reg block_t0_3_V_ce0;
reg block_t0_4_V_ce0;
reg block_t0_5_V_ce0;
reg block_t0_6_V_ce0;
reg block_t0_7_V_ce0;
reg block_t0_8_V_ce0;
reg block_t0_9_V_ce0;
reg block_t0_10_V_ce0;
reg block_t0_11_V_ce0;
reg block_t0_12_V_ce0;
reg block_t0_13_V_ce0;
reg block_t0_14_V_ce0;
reg block_t0_15_V_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] indvar_flatten_reg_614;
reg   [5:0] row_0_reg_625;
reg   [5:0] col_0_reg_636;
wire   [5:0] row_fu_647_p2;
reg   [5:0] row_reg_4460;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln72_fu_653_p2;
reg   [0:0] icmp_ln72_reg_4465;
reg   [0:0] icmp_ln72_reg_4465_pp0_iter1_reg;
reg   [0:0] icmp_ln72_reg_4465_pp0_iter2_reg;
reg   [0:0] icmp_ln72_reg_4465_pp0_iter3_reg;
reg   [0:0] icmp_ln72_reg_4465_pp0_iter4_reg;
wire   [10:0] add_ln72_fu_659_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln73_fu_665_p2;
reg   [0:0] icmp_ln73_reg_4474;
wire   [5:0] select_ln76_fu_671_p3;
reg   [5:0] select_ln76_reg_4479;
reg   [5:0] select_ln76_reg_4479_pp0_iter1_reg;
reg   [5:0] select_ln76_reg_4479_pp0_iter2_reg;
wire   [5:0] select_ln76_1_fu_679_p3;
reg   [5:0] select_ln76_1_reg_4484;
reg   [5:0] select_ln76_1_reg_4484_pp0_iter1_reg;
reg   [5:0] select_ln76_1_reg_4484_pp0_iter2_reg;
wire   [5:0] add_ln76_fu_687_p2;
reg   [5:0] add_ln76_reg_4491;
wire   [5:0] col_fu_693_p2;
reg   [5:0] col_reg_4496;
reg  signed [15:0] block_t0_0_V_load_reg_4582;
wire   [0:0] trunc_ln1118_fu_755_p1;
reg   [0:0] trunc_ln1118_reg_4587;
wire  signed [16:0] add_ln1192_105_fu_763_p2;
reg  signed [16:0] add_ln1192_105_reg_4592;
wire   [14:0] trunc_ln1192_fu_769_p1;
reg   [14:0] trunc_ln1192_reg_4598;
reg   [0:0] tmp_1022_reg_4603;
reg   [15:0] trunc_ln708_s_reg_4609;
reg   [0:0] tmp_1023_reg_4615;
wire   [0:0] icmp_ln879_116_fu_827_p2;
reg   [0:0] icmp_ln879_116_reg_4621;
wire   [0:0] icmp_ln785_fu_833_p2;
reg   [0:0] icmp_ln785_reg_4626;
reg   [0:0] tmp_1024_reg_4631;
reg   [15:0] trunc_ln708_120_reg_4637;
reg   [0:0] tmp_1025_reg_4643;
reg   [1:0] tmp_246_reg_4649;
wire   [19:0] sub_ln1118_fu_909_p2;
reg   [19:0] sub_ln1118_reg_4655;
wire   [0:0] trunc_ln1192_41_fu_915_p1;
reg   [0:0] trunc_ln1192_41_reg_4660;
wire   [17:0] trunc_ln1192_42_fu_919_p1;
reg   [17:0] trunc_ln1192_42_reg_4665;
reg  signed [15:0] block_t0_4_V_load_reg_4670;
wire   [0:0] trunc_ln1118_1_fu_923_p1;
reg   [0:0] trunc_ln1118_1_reg_4675;
wire  signed [16:0] add_ln1192_111_fu_931_p2;
reg  signed [16:0] add_ln1192_111_reg_4680;
wire   [14:0] trunc_ln1192_43_fu_937_p1;
reg   [14:0] trunc_ln1192_43_reg_4686;
reg  signed [15:0] block_t0_5_V_load_reg_4691;
wire   [0:0] trunc_ln1118_2_fu_941_p1;
reg   [0:0] trunc_ln1118_2_reg_4696;
wire  signed [16:0] add_ln1192_115_fu_949_p2;
reg  signed [16:0] add_ln1192_115_reg_4701;
reg   [0:0] tmp_1042_reg_4707;
reg   [15:0] trunc_ln708_124_reg_4713;
reg   [0:0] tmp_1043_reg_4719;
wire   [0:0] icmp_ln879_123_fu_1009_p2;
reg   [0:0] icmp_ln879_123_reg_4725;
wire   [0:0] icmp_ln785_33_fu_1015_p2;
reg   [0:0] icmp_ln785_33_reg_4730;
reg  signed [15:0] block_t0_7_V_load_reg_4735;
wire   [0:0] trunc_ln1118_3_fu_1021_p1;
reg   [0:0] trunc_ln1118_3_reg_4740;
wire  signed [16:0] add_ln1192_119_fu_1029_p2;
reg  signed [16:0] add_ln1192_119_reg_4745;
wire   [14:0] trunc_ln1192_44_fu_1035_p1;
reg   [14:0] trunc_ln1192_44_reg_4751;
reg   [15:0] block_t0_8_V_load_reg_4756;
reg   [0:0] tmp_1054_reg_4761;
reg   [15:0] trunc_ln708_127_reg_4767;
reg   [0:0] tmp_1055_reg_4773;
wire   [0:0] icmp_ln879_128_fu_1093_p2;
reg   [0:0] icmp_ln879_128_reg_4779;
wire   [0:0] icmp_ln785_34_fu_1099_p2;
reg   [0:0] icmp_ln785_34_reg_4784;
reg  signed [15:0] block_t0_10_V_load_reg_4789;
wire  signed [16:0] add_ln1192_124_fu_1109_p2;
reg  signed [16:0] add_ln1192_124_reg_4795;
wire   [14:0] trunc_ln1192_48_fu_1115_p1;
reg   [14:0] trunc_ln1192_48_reg_4801;
reg   [15:0] block_t0_11_V_load_reg_4806;
wire  signed [17:0] add_ln1192_127_fu_1131_p2;
reg  signed [17:0] add_ln1192_127_reg_4811;
wire   [14:0] trunc_ln1192_49_fu_1137_p1;
reg   [14:0] trunc_ln1192_49_reg_4817;
reg   [0:0] tmp_1066_reg_4822;
reg   [15:0] trunc_ln708_130_reg_4828;
reg   [0:0] tmp_1067_reg_4834;
wire   [0:0] icmp_ln879_133_fu_1195_p2;
reg   [0:0] icmp_ln879_133_reg_4840;
wire   [0:0] icmp_ln785_35_fu_1201_p2;
reg   [0:0] icmp_ln785_35_reg_4845;
reg  signed [15:0] block_t0_13_V_load_reg_4850;
wire  signed [16:0] add_ln1192_134_fu_1211_p2;
reg  signed [16:0] add_ln1192_134_reg_4856;
reg  signed [15:0] block_t0_14_V_load_reg_4862;
wire   [0:0] trunc_ln1118_6_fu_1217_p1;
reg   [0:0] trunc_ln1118_6_reg_4867;
wire  signed [16:0] add_ln1192_136_fu_1225_p2;
reg  signed [16:0] add_ln1192_136_reg_4872;
wire   [14:0] trunc_ln1192_50_fu_1231_p1;
reg   [14:0] trunc_ln1192_50_reg_4878;
wire   [19:0] sub_ln1118_1_fu_1259_p2;
reg   [19:0] sub_ln1118_1_reg_4883;
wire   [17:0] trunc_ln1192_51_fu_1265_p1;
reg   [17:0] trunc_ln1192_51_reg_4888;
wire   [63:0] zext_ln203_5_fu_1298_p1;
reg   [63:0] zext_ln203_5_reg_4893;
reg   [63:0] zext_ln203_5_reg_4893_pp0_iter4_reg;
wire   [15:0] add_ln415_fu_1372_p2;
reg   [15:0] add_ln415_reg_4908;
wire   [0:0] and_ln781_fu_1480_p2;
reg   [0:0] and_ln781_reg_4914;
wire   [0:0] xor_ln785_241_fu_1498_p2;
reg   [0:0] xor_ln785_241_reg_4919;
wire   [0:0] and_ln786_fu_1510_p2;
reg   [0:0] and_ln786_reg_4924;
wire   [0:0] and_ln786_283_fu_1528_p2;
reg   [0:0] and_ln786_283_reg_4929;
wire   [0:0] or_ln340_fu_1534_p2;
reg   [0:0] or_ln340_reg_4934;
wire   [15:0] add_ln415_101_fu_1721_p2;
reg   [15:0] add_ln415_101_reg_4939;
wire   [0:0] and_ln781_3_fu_1829_p2;
reg   [0:0] and_ln781_3_reg_4945;
wire   [0:0] xor_ln785_244_fu_1847_p2;
reg   [0:0] xor_ln785_244_reg_4950;
wire   [0:0] and_ln786_3_fu_1859_p2;
reg   [0:0] and_ln786_3_reg_4955;
wire   [0:0] and_ln786_286_fu_1877_p2;
reg   [0:0] and_ln786_286_reg_4960;
wire   [0:0] or_ln340_3_fu_1883_p2;
reg   [0:0] or_ln340_3_reg_4965;
wire   [15:0] add_ln415_102_fu_1954_p2;
reg   [15:0] add_ln415_102_reg_4970;
wire   [0:0] and_ln781_4_fu_2062_p2;
reg   [0:0] and_ln781_4_reg_4976;
wire   [0:0] xor_ln785_245_fu_2080_p2;
reg   [0:0] xor_ln785_245_reg_4981;
wire   [0:0] and_ln786_4_fu_2092_p2;
reg   [0:0] and_ln786_4_reg_4986;
wire   [0:0] and_ln786_287_fu_2110_p2;
reg   [0:0] and_ln786_287_reg_4991;
wire   [0:0] or_ln340_4_fu_2116_p2;
reg   [0:0] or_ln340_4_reg_4996;
wire   [15:0] add_ln415_103_fu_2180_p2;
reg   [15:0] add_ln415_103_reg_5001;
wire   [0:0] and_ln781_5_fu_2280_p2;
reg   [0:0] and_ln781_5_reg_5007;
wire   [0:0] xor_ln785_246_fu_2298_p2;
reg   [0:0] xor_ln785_246_reg_5012;
wire   [0:0] and_ln786_5_fu_2310_p2;
reg   [0:0] and_ln786_5_reg_5017;
wire   [0:0] and_ln786_288_fu_2328_p2;
reg   [0:0] and_ln786_288_reg_5022;
wire   [0:0] or_ln340_5_fu_2334_p2;
reg   [0:0] or_ln340_5_reg_5027;
wire   [15:0] add_ln415_105_fu_2470_p2;
reg   [15:0] add_ln415_105_reg_5032;
wire   [0:0] and_ln781_7_fu_2578_p2;
reg   [0:0] and_ln781_7_reg_5038;
wire   [0:0] xor_ln785_248_fu_2596_p2;
reg   [0:0] xor_ln785_248_reg_5043;
wire   [0:0] and_ln786_7_fu_2608_p2;
reg   [0:0] and_ln786_7_reg_5048;
wire   [0:0] and_ln786_290_fu_2626_p2;
reg   [0:0] and_ln786_290_reg_5053;
wire   [0:0] or_ln340_7_fu_2632_p2;
reg   [0:0] or_ln340_7_reg_5058;
wire   [19:0] trunc_ln1192_45_fu_2647_p1;
reg   [19:0] trunc_ln1192_45_reg_5063;
wire   [0:0] trunc_ln1192_46_fu_2651_p1;
reg   [0:0] trunc_ln1192_46_reg_5068;
wire   [17:0] trunc_ln1192_47_fu_2655_p1;
reg   [17:0] trunc_ln1192_47_reg_5073;
wire   [15:0] add_ln415_108_fu_2799_p2;
reg   [15:0] add_ln415_108_reg_5078;
wire   [0:0] and_ln781_10_fu_2907_p2;
reg   [0:0] and_ln781_10_reg_5084;
wire   [0:0] xor_ln785_251_fu_2925_p2;
reg   [0:0] xor_ln785_251_reg_5089;
wire   [0:0] and_ln786_10_fu_2937_p2;
reg   [0:0] and_ln786_10_reg_5094;
wire   [0:0] and_ln786_293_fu_2955_p2;
reg   [0:0] and_ln786_293_reg_5099;
wire   [0:0] or_ln340_10_fu_2961_p2;
reg   [0:0] or_ln340_10_reg_5104;
wire   [15:0] add_ln415_109_fu_3025_p2;
reg   [15:0] add_ln415_109_reg_5109;
wire   [0:0] and_ln781_11_fu_3133_p2;
reg   [0:0] and_ln781_11_reg_5115;
wire   [0:0] xor_ln785_252_fu_3151_p2;
reg   [0:0] xor_ln785_252_reg_5120;
wire   [0:0] and_ln786_11_fu_3163_p2;
reg   [0:0] and_ln786_11_reg_5125;
wire   [0:0] and_ln786_294_fu_3181_p2;
reg   [0:0] and_ln786_294_reg_5130;
wire   [0:0] or_ln340_11_fu_3187_p2;
reg   [0:0] or_ln340_11_reg_5135;
wire   [15:0] add_ln415_111_fu_3326_p2;
reg   [15:0] add_ln415_111_reg_5140;
wire   [0:0] and_ln781_13_fu_3426_p2;
reg   [0:0] and_ln781_13_reg_5146;
wire   [0:0] xor_ln785_254_fu_3444_p2;
reg   [0:0] xor_ln785_254_reg_5151;
wire   [0:0] and_ln786_13_fu_3456_p2;
reg   [0:0] and_ln786_13_reg_5156;
wire   [0:0] and_ln786_296_fu_3474_p2;
reg   [0:0] and_ln786_296_reg_5161;
wire   [0:0] or_ln340_13_fu_3480_p2;
reg   [0:0] or_ln340_13_reg_5166;
wire   [15:0] add_ln415_112_fu_3551_p2;
reg   [15:0] add_ln415_112_reg_5171;
wire   [0:0] and_ln781_14_fu_3659_p2;
reg   [0:0] and_ln781_14_reg_5177;
wire   [0:0] xor_ln785_255_fu_3677_p2;
reg   [0:0] xor_ln785_255_reg_5182;
wire   [0:0] and_ln786_14_fu_3689_p2;
reg   [0:0] and_ln786_14_reg_5187;
wire   [0:0] and_ln786_297_fu_3707_p2;
reg   [0:0] and_ln786_297_reg_5192;
wire   [0:0] or_ln340_14_fu_3713_p2;
reg   [0:0] or_ln340_14_reg_5197;
wire   [15:0] add_ln415_113_fu_3755_p2;
reg   [15:0] add_ln415_113_reg_5202;
wire   [0:0] and_ln781_15_fu_3863_p2;
reg   [0:0] and_ln781_15_reg_5208;
wire   [0:0] xor_ln785_256_fu_3881_p2;
reg   [0:0] xor_ln785_256_reg_5213;
wire   [0:0] and_ln786_15_fu_3893_p2;
reg   [0:0] and_ln786_15_reg_5218;
wire   [0:0] and_ln786_298_fu_3911_p2;
reg   [0:0] and_ln786_298_reg_5223;
wire   [0:0] or_ln340_15_fu_3917_p2;
reg   [0:0] or_ln340_15_reg_5228;
wire   [15:0] add_ln415_106_fu_4112_p2;
reg   [15:0] add_ln415_106_reg_5233;
wire   [0:0] and_ln781_8_fu_4220_p2;
reg   [0:0] and_ln781_8_reg_5239;
wire   [0:0] xor_ln785_249_fu_4238_p2;
reg   [0:0] xor_ln785_249_reg_5244;
wire   [0:0] and_ln786_8_fu_4250_p2;
reg   [0:0] and_ln786_8_reg_5249;
wire   [0:0] and_ln786_291_fu_4268_p2;
reg   [0:0] and_ln786_291_reg_5254;
wire   [0:0] or_ln340_8_fu_4274_p2;
reg   [0:0] or_ln340_8_reg_5259;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg   [5:0] ap_phi_mux_row_0_phi_fu_629_p4;
wire    ap_block_pp0_stage0;
reg   [5:0] ap_phi_mux_col_0_phi_fu_640_p4;
wire   [63:0] zext_ln446_5_fu_735_p1;
wire   [5:0] select_ln76_2_fu_699_p3;
wire   [10:0] tmp_1016_fu_708_p3;
wire   [11:0] zext_ln446_fu_716_p1;
wire   [11:0] zext_ln76_1_fu_704_p1;
wire   [11:0] zext_ln446_4_fu_726_p1;
wire   [11:0] add_ln446_fu_720_p2;
wire   [11:0] add_ln446_2_fu_729_p2;
wire  signed [15:0] trunc_ln1118_fu_755_p0;
wire  signed [15:0] sext_ln1118_fu_759_p0;
wire  signed [16:0] sext_ln1118_fu_759_p1;
wire  signed [15:0] trunc_ln1192_fu_769_p0;
wire   [18:0] shl_ln1118_2_fu_773_p3;
wire  signed [19:0] sext_ln1118_90_fu_781_p1;
wire   [19:0] add_ln1192_fu_785_p2;
wire   [2:0] tmp_245_fu_817_p4;
wire   [17:0] shl_ln1118_3_fu_839_p3;
wire  signed [18:0] sext_ln1118_91_fu_847_p1;
wire   [18:0] add_ln1192_108_fu_851_p2;
wire  signed [15:0] sext_ln1118_92_fu_893_p0;
wire  signed [15:0] shl_ln1118_4_fu_897_p1;
wire   [18:0] shl_ln1118_4_fu_897_p3;
wire  signed [19:0] sext_ln1118_93_fu_905_p1;
wire  signed [19:0] sext_ln1118_92_fu_893_p1;
wire  signed [15:0] trunc_ln1118_1_fu_923_p0;
wire  signed [15:0] sext_ln1118_94_fu_927_p0;
wire  signed [16:0] sext_ln1118_94_fu_927_p1;
wire  signed [15:0] trunc_ln1192_43_fu_937_p0;
wire  signed [15:0] trunc_ln1118_2_fu_941_p0;
wire  signed [15:0] sext_ln1118_96_fu_945_p0;
wire  signed [16:0] sext_ln1118_96_fu_945_p1;
wire   [18:0] shl_ln1118_7_fu_955_p3;
wire  signed [19:0] sext_ln1118_98_fu_963_p1;
wire   [19:0] add_ln1192_118_fu_967_p2;
wire   [2:0] tmp_252_fu_999_p4;
wire  signed [15:0] trunc_ln1118_3_fu_1021_p0;
wire  signed [15:0] sext_ln1118_99_fu_1025_p0;
wire  signed [16:0] sext_ln1118_99_fu_1025_p1;
wire  signed [15:0] trunc_ln1192_44_fu_1035_p0;
wire   [18:0] shl_ln1118_9_fu_1039_p3;
wire  signed [19:0] sext_ln1118_102_fu_1047_p1;
wire   [19:0] add_ln1192_123_fu_1051_p2;
wire   [2:0] tmp_257_fu_1083_p4;
wire  signed [15:0] sext_ln1118_103_fu_1105_p0;
wire  signed [16:0] sext_ln1118_103_fu_1105_p1;
wire  signed [15:0] trunc_ln1192_48_fu_1115_p0;
wire   [16:0] shl_ln1118_10_fu_1119_p3;
wire  signed [17:0] sext_ln1118_106_fu_1127_p1;
wire   [18:0] shl_ln1118_11_fu_1141_p3;
wire  signed [19:0] sext_ln1118_107_fu_1149_p1;
wire   [19:0] add_ln1192_130_fu_1153_p2;
wire   [2:0] tmp_262_fu_1185_p4;
wire  signed [15:0] sext_ln1118_108_fu_1207_p0;
wire  signed [16:0] sext_ln1118_108_fu_1207_p1;
wire  signed [15:0] trunc_ln1118_6_fu_1217_p0;
wire  signed [15:0] sext_ln1118_110_fu_1221_p0;
wire  signed [16:0] sext_ln1118_110_fu_1221_p1;
wire  signed [15:0] trunc_ln1192_50_fu_1231_p0;
wire   [18:0] shl_ln1118_14_fu_1235_p3;
wire   [16:0] shl_ln1118_15_fu_1247_p3;
wire  signed [19:0] sext_ln1118_112_fu_1243_p1;
wire  signed [19:0] sext_ln1118_113_fu_1255_p1;
wire   [10:0] tmp_1015_fu_1272_p3;
wire   [11:0] zext_ln203_fu_1279_p1;
wire   [11:0] zext_ln76_fu_1269_p1;
wire   [11:0] zext_ln203_4_fu_1289_p1;
wire   [11:0] add_ln203_fu_1283_p2;
wire   [11:0] add_ln203_2_fu_1292_p2;
wire   [18:0] shl_ln_fu_1307_p3;
wire  signed [19:0] sext_ln1192_fu_1318_p1;
wire  signed [19:0] sext_ln1118_89_fu_1314_p1;
wire   [17:0] trunc_ln_fu_1321_p3;
wire  signed [17:0] sext_ln1192_25_fu_1328_p1;
wire   [19:0] add_ln1192_106_fu_1331_p2;
wire   [15:0] zext_ln415_fu_1369_p1;
wire   [15:0] trunc_ln1_fu_1351_p4;
wire   [0:0] tmp_1019_fu_1378_p3;
wire   [0:0] tmp_1018_fu_1361_p3;
wire   [0:0] xor_ln416_fu_1386_p2;
wire   [1:0] tmp_s_fu_1406_p4;
wire   [2:0] tmp_244_fu_1422_p4;
wire   [0:0] and_ln416_fu_1392_p2;
wire   [0:0] icmp_ln879_115_fu_1432_p2;
wire   [0:0] icmp_ln768_fu_1438_p2;
wire   [17:0] add_ln1192_107_fu_1337_p2;
wire   [0:0] tmp_1021_fu_1452_p3;
wire   [0:0] icmp_ln879_fu_1416_p2;
wire   [0:0] xor_ln779_fu_1460_p2;
wire   [0:0] and_ln779_fu_1466_p2;
wire   [0:0] select_ln777_fu_1444_p3;
wire   [0:0] tmp_1020_fu_1398_p3;
wire   [0:0] xor_ln785_fu_1486_p2;
wire   [0:0] tmp_1017_fu_1343_p3;
wire   [0:0] or_ln785_fu_1492_p2;
wire   [0:0] select_ln416_fu_1472_p3;
wire   [0:0] or_ln786_fu_1516_p2;
wire   [0:0] xor_ln786_fu_1522_p2;
wire   [0:0] and_ln785_fu_1504_p2;
wire   [0:0] or_ln785_1_fu_1540_p2;
wire   [0:0] xor_ln785_242_fu_1544_p2;
wire   [0:0] and_ln786_1_fu_1555_p2;
wire   [0:0] xor_ln786_1_fu_1559_p2;
wire   [0:0] and_ln786_284_fu_1565_p2;
wire   [0:0] and_ln785_121_fu_1549_p2;
wire   [0:0] or_ln340_1_fu_1570_p2;
wire   [0:0] or_ln340_363_fu_1576_p2;
wire   [15:0] select_ln340_1_fu_1582_p3;
wire   [15:0] select_ln388_1_fu_1589_p3;
wire   [0:0] icmp_ln785_32_fu_1610_p2;
wire   [0:0] or_ln785_2_fu_1615_p2;
wire   [0:0] xor_ln785_243_fu_1620_p2;
wire   [0:0] icmp_ln879_117_fu_1605_p2;
wire   [0:0] and_ln786_2_fu_1631_p2;
wire   [0:0] xor_ln786_2_fu_1636_p2;
wire   [0:0] and_ln786_285_fu_1642_p2;
wire   [0:0] and_ln785_122_fu_1625_p2;
wire   [0:0] or_ln340_2_fu_1647_p2;
wire   [0:0] or_ln340_365_fu_1653_p2;
wire   [15:0] select_ln340_2_fu_1659_p3;
wire   [15:0] select_ln388_2_fu_1666_p3;
wire   [19:0] add_ln1192_109_fu_1682_p2;
wire   [15:0] zext_ln415_122_fu_1718_p1;
wire   [15:0] trunc_ln708_121_fu_1700_p4;
wire   [0:0] tmp_1028_fu_1727_p3;
wire   [0:0] tmp_1027_fu_1710_p3;
wire   [0:0] xor_ln416_175_fu_1735_p2;
wire   [1:0] tmp_247_fu_1755_p4;
wire   [2:0] tmp_248_fu_1771_p4;
wire   [0:0] and_ln416_121_fu_1741_p2;
wire   [0:0] icmp_ln879_119_fu_1781_p2;
wire   [0:0] icmp_ln768_57_fu_1787_p2;
wire   [17:0] add_ln1192_110_fu_1687_p2;
wire   [0:0] tmp_1030_fu_1801_p3;
wire   [0:0] icmp_ln879_118_fu_1765_p2;
wire   [0:0] xor_ln779_112_fu_1809_p2;
wire   [0:0] and_ln779_3_fu_1815_p2;
wire   [0:0] select_ln777_57_fu_1793_p3;
wire   [0:0] tmp_1029_fu_1747_p3;
wire   [0:0] xor_ln785_3_fu_1835_p2;
wire   [0:0] tmp_1026_fu_1692_p3;
wire   [0:0] or_ln785_3_fu_1841_p2;
wire   [0:0] select_ln416_58_fu_1821_p3;
wire   [0:0] or_ln786_144_fu_1865_p2;
wire   [0:0] xor_ln786_169_fu_1871_p2;
wire   [0:0] and_ln785_123_fu_1853_p2;
wire   [18:0] shl_ln1118_5_fu_1889_p3;
wire  signed [19:0] sext_ln1192_26_fu_1900_p1;
wire  signed [19:0] sext_ln1118_95_fu_1896_p1;
wire   [17:0] trunc_ln1192_s_fu_1903_p3;
wire  signed [17:0] sext_ln1192_27_fu_1910_p1;
wire   [19:0] add_ln1192_113_fu_1913_p2;
wire   [15:0] zext_ln415_123_fu_1951_p1;
wire   [15:0] trunc_ln708_122_fu_1933_p4;
wire   [0:0] tmp_1033_fu_1960_p3;
wire   [0:0] tmp_1032_fu_1943_p3;
wire   [0:0] xor_ln416_176_fu_1968_p2;
wire   [1:0] tmp_249_fu_1988_p4;
wire   [2:0] tmp_250_fu_2004_p4;
wire   [0:0] and_ln416_122_fu_1974_p2;
wire   [0:0] icmp_ln879_121_fu_2014_p2;
wire   [0:0] icmp_ln768_58_fu_2020_p2;
wire   [17:0] add_ln1192_114_fu_1919_p2;
wire   [0:0] tmp_1035_fu_2034_p3;
wire   [0:0] icmp_ln879_120_fu_1998_p2;
wire   [0:0] xor_ln779_113_fu_2042_p2;
wire   [0:0] and_ln779_4_fu_2048_p2;
wire   [0:0] select_ln777_58_fu_2026_p3;
wire   [0:0] tmp_1034_fu_1980_p3;
wire   [0:0] xor_ln785_4_fu_2068_p2;
wire   [0:0] tmp_1031_fu_1925_p3;
wire   [0:0] or_ln785_4_fu_2074_p2;
wire   [0:0] select_ln416_59_fu_2054_p3;
wire   [0:0] or_ln786_145_fu_2098_p2;
wire   [0:0] xor_ln786_170_fu_2104_p2;
wire   [0:0] and_ln785_124_fu_2086_p2;
wire  signed [17:0] shl_ln1118_6_fu_2122_p3;
wire  signed [18:0] sext_ln1192_28_fu_2133_p1;
wire  signed [18:0] sext_ln1118_97_fu_2129_p1;
wire  signed [17:0] sext_ln1192_29_fu_2136_p1;
wire   [18:0] add_ln1192_116_fu_2139_p2;
wire   [15:0] zext_ln415_124_fu_2177_p1;
wire   [15:0] trunc_ln708_123_fu_2159_p4;
wire   [0:0] tmp_1038_fu_2186_p3;
wire   [0:0] tmp_1037_fu_2169_p3;
wire   [0:0] xor_ln416_177_fu_2194_p2;
wire   [1:0] tmp_251_fu_2222_p4;
wire   [0:0] and_ln416_123_fu_2200_p2;
wire   [0:0] icmp_ln879_122_fu_2232_p2;
wire   [0:0] icmp_ln768_59_fu_2238_p2;
wire   [17:0] add_ln1192_117_fu_2145_p2;
wire   [0:0] tmp_1041_fu_2252_p3;
wire   [0:0] tmp_1040_fu_2214_p3;
wire   [0:0] xor_ln779_114_fu_2260_p2;
wire   [0:0] and_ln779_5_fu_2266_p2;
wire   [0:0] select_ln777_59_fu_2244_p3;
wire   [0:0] tmp_1039_fu_2206_p3;
wire   [0:0] xor_ln785_5_fu_2286_p2;
wire   [0:0] tmp_1036_fu_2151_p3;
wire   [0:0] or_ln785_5_fu_2292_p2;
wire   [0:0] select_ln416_60_fu_2272_p3;
wire   [0:0] or_ln786_146_fu_2316_p2;
wire   [0:0] xor_ln786_171_fu_2322_p2;
wire   [0:0] and_ln785_125_fu_2304_p2;
wire   [0:0] or_ln785_6_fu_2340_p2;
wire   [0:0] xor_ln785_247_fu_2344_p2;
wire   [0:0] and_ln786_6_fu_2355_p2;
wire   [0:0] xor_ln786_6_fu_2359_p2;
wire   [0:0] and_ln786_289_fu_2365_p2;
wire   [0:0] and_ln785_126_fu_2349_p2;
wire   [0:0] or_ln340_6_fu_2370_p2;
wire   [0:0] or_ln340_373_fu_2376_p2;
wire   [15:0] select_ln340_6_fu_2382_p3;
wire   [15:0] select_ln388_6_fu_2389_p3;
wire   [18:0] shl_ln1118_8_fu_2405_p3;
wire  signed [19:0] sext_ln1192_30_fu_2416_p1;
wire  signed [19:0] sext_ln1118_100_fu_2412_p1;
wire   [17:0] trunc_ln1192_1_fu_2419_p3;
wire  signed [17:0] sext_ln1192_31_fu_2426_p1;
wire   [19:0] add_ln1192_120_fu_2429_p2;
wire   [15:0] zext_ln415_125_fu_2467_p1;
wire   [15:0] trunc_ln708_125_fu_2449_p4;
wire   [0:0] tmp_1046_fu_2476_p3;
wire   [0:0] tmp_1045_fu_2459_p3;
wire   [0:0] xor_ln416_178_fu_2484_p2;
wire   [1:0] tmp_253_fu_2504_p4;
wire   [2:0] tmp_254_fu_2520_p4;
wire   [0:0] and_ln416_124_fu_2490_p2;
wire   [0:0] icmp_ln879_125_fu_2530_p2;
wire   [0:0] icmp_ln768_60_fu_2536_p2;
wire   [17:0] add_ln1192_121_fu_2435_p2;
wire   [0:0] tmp_1048_fu_2550_p3;
wire   [0:0] icmp_ln879_124_fu_2514_p2;
wire   [0:0] xor_ln779_115_fu_2558_p2;
wire   [0:0] and_ln779_7_fu_2564_p2;
wire   [0:0] select_ln777_60_fu_2542_p3;
wire   [0:0] tmp_1047_fu_2496_p3;
wire   [0:0] xor_ln785_7_fu_2584_p2;
wire   [0:0] tmp_1044_fu_2441_p3;
wire   [0:0] or_ln785_7_fu_2590_p2;
wire   [0:0] select_ln416_61_fu_2570_p3;
wire   [0:0] or_ln786_147_fu_2614_p2;
wire   [0:0] xor_ln786_172_fu_2620_p2;
wire   [0:0] and_ln785_127_fu_2602_p2;
wire  signed [15:0] mul_ln1118_fu_2641_p1;
wire   [20:0] mul_ln1118_fu_2641_p2;
wire   [0:0] or_ln785_9_fu_2659_p2;
wire   [0:0] xor_ln785_250_fu_2663_p2;
wire   [0:0] and_ln786_9_fu_2674_p2;
wire   [0:0] xor_ln786_9_fu_2678_p2;
wire   [0:0] and_ln786_292_fu_2684_p2;
wire   [0:0] and_ln785_129_fu_2668_p2;
wire   [0:0] or_ln340_9_fu_2689_p2;
wire   [0:0] or_ln340_379_fu_2695_p2;
wire   [15:0] select_ln340_9_fu_2701_p3;
wire   [15:0] select_ln388_9_fu_2708_p3;
wire   [18:0] shl_ln1118_s_fu_2727_p3;
wire  signed [19:0] sext_ln1192_32_fu_2738_p1;
wire  signed [19:0] sext_ln1118_104_fu_2734_p1;
wire   [17:0] trunc_ln1192_2_fu_2741_p3;
wire  signed [17:0] sext_ln1192_33_fu_2748_p1;
wire   [19:0] add_ln1192_125_fu_2751_p2;
wire   [0:0] trunc_ln1118_4_fu_2724_p1;
wire   [0:0] xor_ln415_fu_2789_p2;
wire   [15:0] zext_ln415_127_fu_2795_p1;
wire   [15:0] trunc_ln708_128_fu_2771_p4;
wire   [0:0] tmp_1058_fu_2805_p3;
wire   [0:0] tmp_1057_fu_2781_p3;
wire   [0:0] xor_ln416_180_fu_2813_p2;
wire   [1:0] tmp_258_fu_2833_p4;
wire   [2:0] tmp_259_fu_2849_p4;
wire   [0:0] and_ln416_126_fu_2819_p2;
wire   [0:0] icmp_ln879_130_fu_2859_p2;
wire   [0:0] icmp_ln768_62_fu_2865_p2;
wire   [17:0] add_ln1192_126_fu_2757_p2;
wire   [0:0] tmp_1060_fu_2879_p3;
wire   [0:0] icmp_ln879_129_fu_2843_p2;
wire   [0:0] xor_ln779_117_fu_2887_p2;
wire   [0:0] and_ln779_10_fu_2893_p2;
wire   [0:0] select_ln777_62_fu_2871_p3;
wire   [0:0] tmp_1059_fu_2825_p3;
wire   [0:0] xor_ln785_10_fu_2913_p2;
wire   [0:0] tmp_1056_fu_2763_p3;
wire   [0:0] or_ln785_10_fu_2919_p2;
wire   [0:0] select_ln416_63_fu_2899_p3;
wire   [0:0] or_ln786_149_fu_2943_p2;
wire   [0:0] xor_ln786_174_fu_2949_p2;
wire   [0:0] and_ln785_130_fu_2931_p2;
wire   [18:0] shl_ln1118_1_fu_2967_p3;
wire  signed [19:0] sext_ln1192_34_fu_2978_p1;
wire  signed [19:0] sext_ln1118_105_fu_2974_p1;
wire   [17:0] trunc_ln1192_3_fu_2981_p3;
wire   [19:0] add_ln1192_128_fu_2988_p2;
wire   [15:0] trunc_ln708_129_fu_3007_p4;
wire   [0:0] tmp_1063_fu_3031_p3;
wire   [0:0] tmp_1062_fu_3017_p3;
wire   [0:0] xor_ln416_181_fu_3039_p2;
wire   [1:0] tmp_260_fu_3059_p4;
wire   [2:0] tmp_261_fu_3075_p4;
wire   [0:0] and_ln416_127_fu_3045_p2;
wire   [0:0] icmp_ln879_132_fu_3085_p2;
wire   [0:0] icmp_ln768_63_fu_3091_p2;
wire   [17:0] add_ln1192_129_fu_2994_p2;
wire   [0:0] tmp_1065_fu_3105_p3;
wire   [0:0] icmp_ln879_131_fu_3069_p2;
wire   [0:0] xor_ln779_118_fu_3113_p2;
wire   [0:0] and_ln779_11_fu_3119_p2;
wire   [0:0] select_ln777_63_fu_3097_p3;
wire   [0:0] tmp_1064_fu_3051_p3;
wire   [0:0] xor_ln785_11_fu_3139_p2;
wire   [0:0] tmp_1061_fu_2999_p3;
wire   [0:0] or_ln785_11_fu_3145_p2;
wire   [0:0] select_ln416_64_fu_3125_p3;
wire   [0:0] or_ln786_150_fu_3169_p2;
wire   [0:0] xor_ln786_175_fu_3175_p2;
wire   [0:0] and_ln785_131_fu_3157_p2;
wire   [0:0] or_ln785_12_fu_3193_p2;
wire   [0:0] xor_ln785_253_fu_3197_p2;
wire   [0:0] and_ln786_12_fu_3208_p2;
wire   [0:0] xor_ln786_12_fu_3212_p2;
wire   [0:0] and_ln786_295_fu_3218_p2;
wire   [0:0] and_ln785_132_fu_3202_p2;
wire   [0:0] or_ln340_12_fu_3223_p2;
wire   [0:0] or_ln340_385_fu_3229_p2;
wire   [15:0] select_ln340_12_fu_3235_p3;
wire   [15:0] select_ln388_12_fu_3242_p3;
wire  signed [17:0] shl_ln1118_12_fu_3261_p3;
wire  signed [18:0] sext_ln1192_35_fu_3272_p1;
wire  signed [18:0] sext_ln1118_109_fu_3268_p1;
wire  signed [17:0] sext_ln1192_36_fu_3275_p1;
wire   [18:0] add_ln1192_131_fu_3278_p2;
wire   [0:0] trunc_ln1118_5_fu_3258_p1;
wire   [0:0] xor_ln415_1_fu_3316_p2;
wire   [15:0] zext_ln415_128_fu_3322_p1;
wire   [15:0] trunc_ln708_131_fu_3298_p4;
wire   [0:0] tmp_1070_fu_3332_p3;
wire   [0:0] tmp_1069_fu_3308_p3;
wire   [0:0] xor_ln416_182_fu_3340_p2;
wire   [1:0] tmp_263_fu_3368_p4;
wire   [0:0] and_ln416_128_fu_3346_p2;
wire   [0:0] icmp_ln879_134_fu_3378_p2;
wire   [0:0] icmp_ln768_64_fu_3384_p2;
wire   [17:0] add_ln1192_135_fu_3284_p2;
wire   [0:0] tmp_1073_fu_3398_p3;
wire   [0:0] tmp_1072_fu_3360_p3;
wire   [0:0] xor_ln779_119_fu_3406_p2;
wire   [0:0] and_ln779_13_fu_3412_p2;
wire   [0:0] select_ln777_64_fu_3390_p3;
wire   [0:0] tmp_1071_fu_3352_p3;
wire   [0:0] xor_ln785_13_fu_3432_p2;
wire   [0:0] tmp_1068_fu_3290_p3;
wire   [0:0] or_ln785_13_fu_3438_p2;
wire   [0:0] select_ln416_65_fu_3418_p3;
wire   [0:0] or_ln786_151_fu_3462_p2;
wire   [0:0] xor_ln786_176_fu_3468_p2;
wire   [0:0] and_ln785_133_fu_3450_p2;
wire   [18:0] shl_ln1118_13_fu_3486_p3;
wire  signed [19:0] sext_ln1192_37_fu_3497_p1;
wire  signed [19:0] sext_ln1118_111_fu_3493_p1;
wire   [17:0] trunc_ln1192_4_fu_3500_p3;
wire  signed [17:0] sext_ln1192_38_fu_3507_p1;
wire   [19:0] add_ln1192_132_fu_3510_p2;
wire   [15:0] zext_ln415_129_fu_3548_p1;
wire   [15:0] trunc_ln708_132_fu_3530_p4;
wire   [0:0] tmp_1076_fu_3557_p3;
wire   [0:0] tmp_1075_fu_3540_p3;
wire   [0:0] xor_ln416_183_fu_3565_p2;
wire   [1:0] tmp_264_fu_3585_p4;
wire   [2:0] tmp_265_fu_3601_p4;
wire   [0:0] and_ln416_129_fu_3571_p2;
wire   [0:0] icmp_ln879_136_fu_3611_p2;
wire   [0:0] icmp_ln768_65_fu_3617_p2;
wire   [17:0] add_ln1192_137_fu_3516_p2;
wire   [0:0] tmp_1078_fu_3631_p3;
wire   [0:0] icmp_ln879_135_fu_3595_p2;
wire   [0:0] xor_ln779_120_fu_3639_p2;
wire   [0:0] and_ln779_14_fu_3645_p2;
wire   [0:0] select_ln777_65_fu_3623_p3;
wire   [0:0] tmp_1077_fu_3577_p3;
wire   [0:0] xor_ln785_14_fu_3665_p2;
wire   [0:0] tmp_1074_fu_3522_p3;
wire   [0:0] or_ln785_14_fu_3671_p2;
wire   [0:0] select_ln416_66_fu_3651_p3;
wire   [0:0] or_ln786_152_fu_3695_p2;
wire   [0:0] xor_ln786_177_fu_3701_p2;
wire   [0:0] and_ln785_134_fu_3683_p2;
wire   [19:0] add_ln1192_133_fu_3719_p2;
wire   [15:0] trunc_ln708_133_fu_3737_p4;
wire   [0:0] tmp_1081_fu_3761_p3;
wire   [0:0] tmp_1080_fu_3747_p3;
wire   [0:0] xor_ln416_184_fu_3769_p2;
wire   [1:0] tmp_266_fu_3789_p4;
wire   [2:0] tmp_267_fu_3805_p4;
wire   [0:0] and_ln416_130_fu_3775_p2;
wire   [0:0] icmp_ln879_138_fu_3815_p2;
wire   [0:0] icmp_ln768_66_fu_3821_p2;
wire   [17:0] add_ln1192_138_fu_3724_p2;
wire   [0:0] tmp_1083_fu_3835_p3;
wire   [0:0] icmp_ln879_137_fu_3799_p2;
wire   [0:0] xor_ln779_121_fu_3843_p2;
wire   [0:0] and_ln779_15_fu_3849_p2;
wire   [0:0] select_ln777_66_fu_3827_p3;
wire   [0:0] tmp_1082_fu_3781_p3;
wire   [0:0] xor_ln785_15_fu_3869_p2;
wire   [0:0] tmp_1079_fu_3729_p3;
wire   [0:0] or_ln785_15_fu_3875_p2;
wire   [0:0] select_ln416_67_fu_3855_p3;
wire   [0:0] or_ln786_153_fu_3899_p2;
wire   [0:0] xor_ln786_178_fu_3905_p2;
wire   [0:0] and_ln785_135_fu_3887_p2;
wire   [0:0] or_ln340_416_fu_3923_p2;
wire   [0:0] or_ln340_361_fu_3927_p2;
wire   [15:0] select_ln340_fu_3932_p3;
wire   [15:0] select_ln388_fu_3938_p3;
wire   [0:0] or_ln340_417_fu_3953_p2;
wire   [0:0] or_ln340_367_fu_3957_p2;
wire   [15:0] select_ln340_3_fu_3962_p3;
wire   [15:0] select_ln388_3_fu_3968_p3;
wire   [0:0] or_ln340_418_fu_3983_p2;
wire   [0:0] or_ln340_369_fu_3987_p2;
wire   [15:0] select_ln340_4_fu_3992_p3;
wire   [15:0] select_ln388_4_fu_3998_p3;
wire   [0:0] or_ln340_419_fu_4013_p2;
wire   [0:0] or_ln340_371_fu_4017_p2;
wire   [15:0] select_ln340_5_fu_4022_p3;
wire   [15:0] select_ln388_5_fu_4028_p3;
wire   [0:0] or_ln340_420_fu_4043_p2;
wire   [0:0] or_ln340_375_fu_4047_p2;
wire   [15:0] select_ln340_7_fu_4052_p3;
wire   [15:0] select_ln388_7_fu_4058_p3;
wire   [19:0] add_ln1192_112_fu_4073_p2;
wire   [15:0] zext_ln415_126_fu_4109_p1;
wire   [15:0] trunc_ln708_126_fu_4091_p4;
wire   [0:0] tmp_1051_fu_4118_p3;
wire   [0:0] tmp_1050_fu_4101_p3;
wire   [0:0] xor_ln416_179_fu_4126_p2;
wire   [1:0] tmp_255_fu_4146_p4;
wire   [2:0] tmp_256_fu_4162_p4;
wire   [0:0] and_ln416_125_fu_4132_p2;
wire   [0:0] icmp_ln879_127_fu_4172_p2;
wire   [0:0] icmp_ln768_61_fu_4178_p2;
wire   [17:0] add_ln1192_122_fu_4078_p2;
wire   [0:0] tmp_1053_fu_4192_p3;
wire   [0:0] icmp_ln879_126_fu_4156_p2;
wire   [0:0] xor_ln779_116_fu_4200_p2;
wire   [0:0] and_ln779_8_fu_4206_p2;
wire   [0:0] select_ln777_61_fu_4184_p3;
wire   [0:0] tmp_1052_fu_4138_p3;
wire   [0:0] xor_ln785_8_fu_4226_p2;
wire   [0:0] tmp_1049_fu_4083_p3;
wire   [0:0] or_ln785_8_fu_4232_p2;
wire   [0:0] select_ln416_62_fu_4212_p3;
wire   [0:0] or_ln786_148_fu_4256_p2;
wire   [0:0] xor_ln786_173_fu_4262_p2;
wire   [0:0] and_ln785_128_fu_4244_p2;
wire   [0:0] or_ln340_422_fu_4280_p2;
wire   [0:0] or_ln340_381_fu_4284_p2;
wire   [15:0] select_ln340_10_fu_4289_p3;
wire   [15:0] select_ln388_10_fu_4295_p3;
wire   [0:0] or_ln340_423_fu_4310_p2;
wire   [0:0] or_ln340_383_fu_4314_p2;
wire   [15:0] select_ln340_11_fu_4319_p3;
wire   [15:0] select_ln388_11_fu_4325_p3;
wire   [0:0] or_ln340_424_fu_4340_p2;
wire   [0:0] or_ln340_387_fu_4344_p2;
wire   [15:0] select_ln340_13_fu_4349_p3;
wire   [15:0] select_ln388_13_fu_4355_p3;
wire   [0:0] or_ln340_425_fu_4370_p2;
wire   [0:0] or_ln340_389_fu_4374_p2;
wire   [15:0] select_ln340_14_fu_4379_p3;
wire   [15:0] select_ln388_14_fu_4385_p3;
wire   [0:0] or_ln340_426_fu_4400_p2;
wire   [0:0] or_ln340_391_fu_4404_p2;
wire   [15:0] select_ln340_15_fu_4409_p3;
wire   [15:0] select_ln388_15_fu_4415_p3;
wire   [0:0] or_ln340_421_fu_4430_p2;
wire   [0:0] or_ln340_377_fu_4434_p2;
wire   [15:0] select_ln340_8_fu_4439_p3;
wire   [15:0] select_ln388_8_fu_4445_p3;
wire    ap_CS_fsm_state8;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_reg_4465 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_0_reg_636 <= col_reg_4496;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        col_0_reg_636 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_fu_653_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_614 <= add_ln72_fu_659_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_614 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_reg_4465 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        row_0_reg_625 <= select_ln76_1_reg_4484;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        row_0_reg_625 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_reg_4465_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln1192_105_reg_4592 <= add_ln1192_105_fu_763_p2;
        add_ln1192_111_reg_4680 <= add_ln1192_111_fu_931_p2;
        add_ln1192_115_reg_4701 <= add_ln1192_115_fu_949_p2;
        add_ln1192_119_reg_4745 <= add_ln1192_119_fu_1029_p2;
        add_ln1192_124_reg_4795 <= add_ln1192_124_fu_1109_p2;
        add_ln1192_127_reg_4811[17 : 1] <= add_ln1192_127_fu_1131_p2[17 : 1];
        add_ln1192_134_reg_4856 <= add_ln1192_134_fu_1211_p2;
        add_ln1192_136_reg_4872 <= add_ln1192_136_fu_1225_p2;
        block_t0_0_V_load_reg_4582 <= block_t0_0_V_q0;
        block_t0_10_V_load_reg_4789 <= block_t0_10_V_q0;
        block_t0_11_V_load_reg_4806 <= block_t0_11_V_q0;
        block_t0_13_V_load_reg_4850 <= block_t0_13_V_q0;
        block_t0_14_V_load_reg_4862 <= block_t0_14_V_q0;
        block_t0_4_V_load_reg_4670 <= block_t0_4_V_q0;
        block_t0_5_V_load_reg_4691 <= block_t0_5_V_q0;
        block_t0_7_V_load_reg_4735 <= block_t0_7_V_q0;
        block_t0_8_V_load_reg_4756 <= block_t0_8_V_q0;
        icmp_ln785_33_reg_4730 <= icmp_ln785_33_fu_1015_p2;
        icmp_ln785_34_reg_4784 <= icmp_ln785_34_fu_1099_p2;
        icmp_ln785_35_reg_4845 <= icmp_ln785_35_fu_1201_p2;
        icmp_ln785_reg_4626 <= icmp_ln785_fu_833_p2;
        icmp_ln879_116_reg_4621 <= icmp_ln879_116_fu_827_p2;
        icmp_ln879_123_reg_4725 <= icmp_ln879_123_fu_1009_p2;
        icmp_ln879_128_reg_4779 <= icmp_ln879_128_fu_1093_p2;
        icmp_ln879_133_reg_4840 <= icmp_ln879_133_fu_1195_p2;
        sub_ln1118_1_reg_4883[19 : 1] <= sub_ln1118_1_fu_1259_p2[19 : 1];
        sub_ln1118_reg_4655 <= sub_ln1118_fu_909_p2;
        tmp_1022_reg_4603 <= add_ln1192_fu_785_p2[32'd19];
        tmp_1023_reg_4615 <= add_ln1192_fu_785_p2[32'd16];
        tmp_1024_reg_4631 <= add_ln1192_108_fu_851_p2[32'd18];
        tmp_1025_reg_4643 <= add_ln1192_108_fu_851_p2[32'd16];
        tmp_1042_reg_4707 <= add_ln1192_118_fu_967_p2[32'd19];
        tmp_1043_reg_4719 <= add_ln1192_118_fu_967_p2[32'd16];
        tmp_1054_reg_4761 <= add_ln1192_123_fu_1051_p2[32'd19];
        tmp_1055_reg_4773 <= add_ln1192_123_fu_1051_p2[32'd16];
        tmp_1066_reg_4822 <= add_ln1192_130_fu_1153_p2[32'd19];
        tmp_1067_reg_4834 <= add_ln1192_130_fu_1153_p2[32'd16];
        tmp_246_reg_4649 <= {{add_ln1192_108_fu_851_p2[18:17]}};
        trunc_ln1118_1_reg_4675 <= trunc_ln1118_1_fu_923_p1;
        trunc_ln1118_2_reg_4696 <= trunc_ln1118_2_fu_941_p1;
        trunc_ln1118_3_reg_4740 <= trunc_ln1118_3_fu_1021_p1;
        trunc_ln1118_6_reg_4867 <= trunc_ln1118_6_fu_1217_p1;
        trunc_ln1118_reg_4587 <= trunc_ln1118_fu_755_p1;
        trunc_ln1192_41_reg_4660 <= trunc_ln1192_41_fu_915_p1;
        trunc_ln1192_42_reg_4665 <= trunc_ln1192_42_fu_919_p1;
        trunc_ln1192_43_reg_4686 <= trunc_ln1192_43_fu_937_p1;
        trunc_ln1192_44_reg_4751 <= trunc_ln1192_44_fu_1035_p1;
        trunc_ln1192_48_reg_4801 <= trunc_ln1192_48_fu_1115_p1;
        trunc_ln1192_49_reg_4817 <= trunc_ln1192_49_fu_1137_p1;
        trunc_ln1192_50_reg_4878 <= trunc_ln1192_50_fu_1231_p1;
        trunc_ln1192_51_reg_4888[17 : 1] <= trunc_ln1192_51_fu_1265_p1[17 : 1];
        trunc_ln1192_reg_4598 <= trunc_ln1192_fu_769_p1;
        trunc_ln708_120_reg_4637 <= {{add_ln1192_108_fu_851_p2[16:1]}};
        trunc_ln708_124_reg_4713 <= {{add_ln1192_118_fu_967_p2[16:1]}};
        trunc_ln708_127_reg_4767 <= {{add_ln1192_123_fu_1051_p2[16:1]}};
        trunc_ln708_130_reg_4828 <= {{add_ln1192_130_fu_1153_p2[16:1]}};
        trunc_ln708_s_reg_4609 <= {{add_ln1192_fu_785_p2[16:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_reg_4465_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln415_101_reg_4939 <= add_ln415_101_fu_1721_p2;
        add_ln415_102_reg_4970 <= add_ln415_102_fu_1954_p2;
        add_ln415_103_reg_5001 <= add_ln415_103_fu_2180_p2;
        add_ln415_105_reg_5032 <= add_ln415_105_fu_2470_p2;
        add_ln415_108_reg_5078 <= add_ln415_108_fu_2799_p2;
        add_ln415_109_reg_5109 <= add_ln415_109_fu_3025_p2;
        add_ln415_111_reg_5140 <= add_ln415_111_fu_3326_p2;
        add_ln415_112_reg_5171 <= add_ln415_112_fu_3551_p2;
        add_ln415_113_reg_5202 <= add_ln415_113_fu_3755_p2;
        add_ln415_reg_4908 <= add_ln415_fu_1372_p2;
        and_ln781_10_reg_5084 <= and_ln781_10_fu_2907_p2;
        and_ln781_11_reg_5115 <= and_ln781_11_fu_3133_p2;
        and_ln781_13_reg_5146 <= and_ln781_13_fu_3426_p2;
        and_ln781_14_reg_5177 <= and_ln781_14_fu_3659_p2;
        and_ln781_15_reg_5208 <= and_ln781_15_fu_3863_p2;
        and_ln781_3_reg_4945 <= and_ln781_3_fu_1829_p2;
        and_ln781_4_reg_4976 <= and_ln781_4_fu_2062_p2;
        and_ln781_5_reg_5007 <= and_ln781_5_fu_2280_p2;
        and_ln781_7_reg_5038 <= and_ln781_7_fu_2578_p2;
        and_ln781_reg_4914 <= and_ln781_fu_1480_p2;
        and_ln786_10_reg_5094 <= and_ln786_10_fu_2937_p2;
        and_ln786_11_reg_5125 <= and_ln786_11_fu_3163_p2;
        and_ln786_13_reg_5156 <= and_ln786_13_fu_3456_p2;
        and_ln786_14_reg_5187 <= and_ln786_14_fu_3689_p2;
        and_ln786_15_reg_5218 <= and_ln786_15_fu_3893_p2;
        and_ln786_283_reg_4929 <= and_ln786_283_fu_1528_p2;
        and_ln786_286_reg_4960 <= and_ln786_286_fu_1877_p2;
        and_ln786_287_reg_4991 <= and_ln786_287_fu_2110_p2;
        and_ln786_288_reg_5022 <= and_ln786_288_fu_2328_p2;
        and_ln786_290_reg_5053 <= and_ln786_290_fu_2626_p2;
        and_ln786_293_reg_5099 <= and_ln786_293_fu_2955_p2;
        and_ln786_294_reg_5130 <= and_ln786_294_fu_3181_p2;
        and_ln786_296_reg_5161 <= and_ln786_296_fu_3474_p2;
        and_ln786_297_reg_5192 <= and_ln786_297_fu_3707_p2;
        and_ln786_298_reg_5223 <= and_ln786_298_fu_3911_p2;
        and_ln786_3_reg_4955 <= and_ln786_3_fu_1859_p2;
        and_ln786_4_reg_4986 <= and_ln786_4_fu_2092_p2;
        and_ln786_5_reg_5017 <= and_ln786_5_fu_2310_p2;
        and_ln786_7_reg_5048 <= and_ln786_7_fu_2608_p2;
        and_ln786_reg_4924 <= and_ln786_fu_1510_p2;
        or_ln340_10_reg_5104 <= or_ln340_10_fu_2961_p2;
        or_ln340_11_reg_5135 <= or_ln340_11_fu_3187_p2;
        or_ln340_13_reg_5166 <= or_ln340_13_fu_3480_p2;
        or_ln340_14_reg_5197 <= or_ln340_14_fu_3713_p2;
        or_ln340_15_reg_5228 <= or_ln340_15_fu_3917_p2;
        or_ln340_3_reg_4965 <= or_ln340_3_fu_1883_p2;
        or_ln340_4_reg_4996 <= or_ln340_4_fu_2116_p2;
        or_ln340_5_reg_5027 <= or_ln340_5_fu_2334_p2;
        or_ln340_7_reg_5058 <= or_ln340_7_fu_2632_p2;
        or_ln340_reg_4934 <= or_ln340_fu_1534_p2;
        trunc_ln1192_45_reg_5063 <= trunc_ln1192_45_fu_2647_p1;
        trunc_ln1192_46_reg_5068 <= trunc_ln1192_46_fu_2651_p1;
        trunc_ln1192_47_reg_5073 <= trunc_ln1192_47_fu_2655_p1;
        xor_ln785_241_reg_4919 <= xor_ln785_241_fu_1498_p2;
        xor_ln785_244_reg_4950 <= xor_ln785_244_fu_1847_p2;
        xor_ln785_245_reg_4981 <= xor_ln785_245_fu_2080_p2;
        xor_ln785_246_reg_5012 <= xor_ln785_246_fu_2298_p2;
        xor_ln785_248_reg_5043 <= xor_ln785_248_fu_2596_p2;
        xor_ln785_251_reg_5089 <= xor_ln785_251_fu_2925_p2;
        xor_ln785_252_reg_5120 <= xor_ln785_252_fu_3151_p2;
        xor_ln785_254_reg_5151 <= xor_ln785_254_fu_3444_p2;
        xor_ln785_255_reg_5182 <= xor_ln785_255_fu_3677_p2;
        xor_ln785_256_reg_5213 <= xor_ln785_256_fu_3881_p2;
        zext_ln203_5_reg_4893[11 : 0] <= zext_ln203_5_fu_1298_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_reg_4465_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln415_106_reg_5233 <= add_ln415_106_fu_4112_p2;
        and_ln781_8_reg_5239 <= and_ln781_8_fu_4220_p2;
        and_ln786_291_reg_5254 <= and_ln786_291_fu_4268_p2;
        and_ln786_8_reg_5249 <= and_ln786_8_fu_4250_p2;
        or_ln340_8_reg_5259 <= or_ln340_8_fu_4274_p2;
        xor_ln785_249_reg_5244 <= xor_ln785_249_fu_4238_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_fu_653_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln76_reg_4491 <= add_ln76_fu_687_p2;
        icmp_ln73_reg_4474 <= icmp_ln73_fu_665_p2;
        select_ln76_reg_4479 <= select_ln76_fu_671_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_fu_653_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_reg_4496 <= col_fu_693_p2;
        select_ln76_1_reg_4484 <= select_ln76_1_fu_679_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln72_reg_4465 <= icmp_ln72_fu_653_p2;
        icmp_ln72_reg_4465_pp0_iter1_reg <= icmp_ln72_reg_4465;
        row_reg_4460 <= row_fu_647_p2;
        select_ln76_1_reg_4484_pp0_iter1_reg <= select_ln76_1_reg_4484;
        select_ln76_reg_4479_pp0_iter1_reg <= select_ln76_reg_4479;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln72_reg_4465_pp0_iter2_reg <= icmp_ln72_reg_4465_pp0_iter1_reg;
        icmp_ln72_reg_4465_pp0_iter3_reg <= icmp_ln72_reg_4465_pp0_iter2_reg;
        icmp_ln72_reg_4465_pp0_iter4_reg <= icmp_ln72_reg_4465_pp0_iter3_reg;
        select_ln76_1_reg_4484_pp0_iter2_reg <= select_ln76_1_reg_4484_pp0_iter1_reg;
        select_ln76_reg_4479_pp0_iter2_reg <= select_ln76_reg_4479_pp0_iter1_reg;
        zext_ln203_5_reg_4893_pp0_iter4_reg[11 : 0] <= zext_ln203_5_reg_4893[11 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln72_fu_653_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln72_reg_4465 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_col_0_phi_fu_640_p4 = col_reg_4496;
    end else begin
        ap_phi_mux_col_0_phi_fu_640_p4 = col_0_reg_636;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln72_reg_4465 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_row_0_phi_fu_629_p4 = select_ln76_1_reg_4484;
    end else begin
        ap_phi_mux_row_0_phi_fu_629_p4 = row_0_reg_625;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_t0_0_V_ce0 = 1'b1;
    end else begin
        block_t0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_t0_10_V_ce0 = 1'b1;
    end else begin
        block_t0_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_t0_11_V_ce0 = 1'b1;
    end else begin
        block_t0_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_t0_12_V_ce0 = 1'b1;
    end else begin
        block_t0_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_t0_13_V_ce0 = 1'b1;
    end else begin
        block_t0_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_t0_14_V_ce0 = 1'b1;
    end else begin
        block_t0_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_t0_15_V_ce0 = 1'b1;
    end else begin
        block_t0_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_t0_1_V_ce0 = 1'b1;
    end else begin
        block_t0_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_t0_2_V_ce0 = 1'b1;
    end else begin
        block_t0_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_t0_3_V_ce0 = 1'b1;
    end else begin
        block_t0_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_t0_4_V_ce0 = 1'b1;
    end else begin
        block_t0_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_t0_5_V_ce0 = 1'b1;
    end else begin
        block_t0_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_t0_6_V_ce0 = 1'b1;
    end else begin
        block_t0_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_t0_7_V_ce0 = 1'b1;
    end else begin
        block_t0_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_t0_8_V_ce0 = 1'b1;
    end else begin
        block_t0_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_t0_9_V_ce0 = 1'b1;
    end else begin
        block_t0_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_0_V_ce0 = 1'b1;
    end else begin
        out_buf_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_reg_4465_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_0_V_we0 = 1'b1;
    end else begin
        out_buf_0_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_10_V_ce0 = 1'b1;
    end else begin
        out_buf_0_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_reg_4465_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_10_V_we0 = 1'b1;
    end else begin
        out_buf_0_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_11_V_ce0 = 1'b1;
    end else begin
        out_buf_0_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_reg_4465_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_11_V_we0 = 1'b1;
    end else begin
        out_buf_0_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_0_12_V_ce0 = 1'b1;
    end else begin
        out_buf_0_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_reg_4465_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_0_12_V_we0 = 1'b1;
    end else begin
        out_buf_0_12_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_13_V_ce0 = 1'b1;
    end else begin
        out_buf_0_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_reg_4465_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_13_V_we0 = 1'b1;
    end else begin
        out_buf_0_13_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_14_V_ce0 = 1'b1;
    end else begin
        out_buf_0_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_reg_4465_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_14_V_we0 = 1'b1;
    end else begin
        out_buf_0_14_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_15_V_ce0 = 1'b1;
    end else begin
        out_buf_0_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_reg_4465_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_15_V_we0 = 1'b1;
    end else begin
        out_buf_0_15_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_0_1_V_ce0 = 1'b1;
    end else begin
        out_buf_0_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_reg_4465_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_0_1_V_we0 = 1'b1;
    end else begin
        out_buf_0_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_0_2_V_ce0 = 1'b1;
    end else begin
        out_buf_0_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_reg_4465_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_0_2_V_we0 = 1'b1;
    end else begin
        out_buf_0_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_3_V_ce0 = 1'b1;
    end else begin
        out_buf_0_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_reg_4465_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_3_V_we0 = 1'b1;
    end else begin
        out_buf_0_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_4_V_ce0 = 1'b1;
    end else begin
        out_buf_0_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_reg_4465_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_4_V_we0 = 1'b1;
    end else begin
        out_buf_0_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_5_V_ce0 = 1'b1;
    end else begin
        out_buf_0_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_reg_4465_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_5_V_we0 = 1'b1;
    end else begin
        out_buf_0_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_0_6_V_ce0 = 1'b1;
    end else begin
        out_buf_0_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_reg_4465_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_0_6_V_we0 = 1'b1;
    end else begin
        out_buf_0_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_7_V_ce0 = 1'b1;
    end else begin
        out_buf_0_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_reg_4465_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_buf_0_7_V_we0 = 1'b1;
    end else begin
        out_buf_0_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        out_buf_0_8_V_ce0 = 1'b1;
    end else begin
        out_buf_0_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_reg_4465_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        out_buf_0_8_V_we0 = 1'b1;
    end else begin
        out_buf_0_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_0_9_V_ce0 = 1'b1;
    end else begin
        out_buf_0_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_reg_4465_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_0_9_V_we0 = 1'b1;
    end else begin
        out_buf_0_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln72_fu_653_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln72_fu_653_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_105_fu_763_p2 = ($signed(17'd131016) + $signed(sext_ln1118_fu_759_p1));

assign add_ln1192_106_fu_1331_p2 = ($signed(sext_ln1192_fu_1318_p1) + $signed(sext_ln1118_89_fu_1314_p1));

assign add_ln1192_107_fu_1337_p2 = ($signed(trunc_ln_fu_1321_p3) + $signed(sext_ln1192_25_fu_1328_p1));

assign add_ln1192_108_fu_851_p2 = ($signed(19'd198) + $signed(sext_ln1118_91_fu_847_p1));

assign add_ln1192_109_fu_1682_p2 = ($signed(20'd1048160) + $signed(sub_ln1118_reg_4655));

assign add_ln1192_110_fu_1687_p2 = ($signed(18'd261728) + $signed(trunc_ln1192_42_reg_4665));

assign add_ln1192_111_fu_931_p2 = ($signed(17'd130744) + $signed(sext_ln1118_94_fu_927_p1));

assign add_ln1192_112_fu_4073_p2 = (20'd300 + trunc_ln1192_45_reg_5063);

assign add_ln1192_113_fu_1913_p2 = ($signed(sext_ln1192_26_fu_1900_p1) + $signed(sext_ln1118_95_fu_1896_p1));

assign add_ln1192_114_fu_1919_p2 = ($signed(trunc_ln1192_s_fu_1903_p3) + $signed(sext_ln1192_27_fu_1910_p1));

assign add_ln1192_115_fu_949_p2 = ($signed(17'd44) + $signed(sext_ln1118_96_fu_945_p1));

assign add_ln1192_116_fu_2139_p2 = ($signed(sext_ln1192_28_fu_2133_p1) + $signed(sext_ln1118_97_fu_2129_p1));

assign add_ln1192_117_fu_2145_p2 = ($signed(shl_ln1118_6_fu_2122_p3) + $signed(sext_ln1192_29_fu_2136_p1));

assign add_ln1192_118_fu_967_p2 = ($signed(20'd200) + $signed(sext_ln1118_98_fu_963_p1));

assign add_ln1192_119_fu_1029_p2 = ($signed(17'd46) + $signed(sext_ln1118_99_fu_1025_p1));

assign add_ln1192_120_fu_2429_p2 = ($signed(sext_ln1192_30_fu_2416_p1) + $signed(sext_ln1118_100_fu_2412_p1));

assign add_ln1192_121_fu_2435_p2 = ($signed(trunc_ln1192_1_fu_2419_p3) + $signed(sext_ln1192_31_fu_2426_p1));

assign add_ln1192_122_fu_4078_p2 = (18'd300 + trunc_ln1192_47_reg_5073);

assign add_ln1192_123_fu_1051_p2 = ($signed(20'd1048494) + $signed(sext_ln1118_102_fu_1047_p1));

assign add_ln1192_124_fu_1109_p2 = ($signed(17'd71) + $signed(sext_ln1118_103_fu_1105_p1));

assign add_ln1192_125_fu_2751_p2 = ($signed(sext_ln1192_32_fu_2738_p1) + $signed(sext_ln1118_104_fu_2734_p1));

assign add_ln1192_126_fu_2757_p2 = ($signed(trunc_ln1192_2_fu_2741_p3) + $signed(sext_ln1192_33_fu_2748_p1));

assign add_ln1192_127_fu_1131_p2 = ($signed(18'd27) + $signed(sext_ln1118_106_fu_1127_p1));

assign add_ln1192_128_fu_2988_p2 = ($signed(sext_ln1192_34_fu_2978_p1) + $signed(sext_ln1118_105_fu_2974_p1));

assign add_ln1192_129_fu_2994_p2 = ($signed(trunc_ln1192_3_fu_2981_p3) + $signed(add_ln1192_127_reg_4811));

assign add_ln1192_130_fu_1153_p2 = ($signed(20'd92) + $signed(sext_ln1118_107_fu_1149_p1));

assign add_ln1192_131_fu_3278_p2 = ($signed(sext_ln1192_35_fu_3272_p1) + $signed(sext_ln1118_109_fu_3268_p1));

assign add_ln1192_132_fu_3510_p2 = ($signed(sext_ln1192_37_fu_3497_p1) + $signed(sext_ln1118_111_fu_3493_p1));

assign add_ln1192_133_fu_3719_p2 = (20'd65 + sub_ln1118_1_reg_4883);

assign add_ln1192_134_fu_1211_p2 = ($signed(17'd131057) + $signed(sext_ln1118_108_fu_1207_p1));

assign add_ln1192_135_fu_3284_p2 = ($signed(shl_ln1118_12_fu_3261_p3) + $signed(sext_ln1192_36_fu_3275_p1));

assign add_ln1192_136_fu_1225_p2 = ($signed(17'd130944) + $signed(sext_ln1118_110_fu_1221_p1));

assign add_ln1192_137_fu_3516_p2 = ($signed(trunc_ln1192_4_fu_3500_p3) + $signed(sext_ln1192_38_fu_3507_p1));

assign add_ln1192_138_fu_3724_p2 = (18'd65 + trunc_ln1192_51_reg_4888);

assign add_ln1192_fu_785_p2 = ($signed(20'd1048442) + $signed(sext_ln1118_90_fu_781_p1));

assign add_ln203_2_fu_1292_p2 = (zext_ln203_4_fu_1289_p1 + add_ln203_fu_1283_p2);

assign add_ln203_fu_1283_p2 = (zext_ln203_fu_1279_p1 + zext_ln76_fu_1269_p1);

assign add_ln415_101_fu_1721_p2 = (zext_ln415_122_fu_1718_p1 + trunc_ln708_121_fu_1700_p4);

assign add_ln415_102_fu_1954_p2 = (zext_ln415_123_fu_1951_p1 + trunc_ln708_122_fu_1933_p4);

assign add_ln415_103_fu_2180_p2 = (zext_ln415_124_fu_2177_p1 + trunc_ln708_123_fu_2159_p4);

assign add_ln415_105_fu_2470_p2 = (zext_ln415_125_fu_2467_p1 + trunc_ln708_125_fu_2449_p4);

assign add_ln415_106_fu_4112_p2 = (zext_ln415_126_fu_4109_p1 + trunc_ln708_126_fu_4091_p4);

assign add_ln415_108_fu_2799_p2 = (zext_ln415_127_fu_2795_p1 + trunc_ln708_128_fu_2771_p4);

assign add_ln415_109_fu_3025_p2 = (16'd1 + trunc_ln708_129_fu_3007_p4);

assign add_ln415_111_fu_3326_p2 = (zext_ln415_128_fu_3322_p1 + trunc_ln708_131_fu_3298_p4);

assign add_ln415_112_fu_3551_p2 = (zext_ln415_129_fu_3548_p1 + trunc_ln708_132_fu_3530_p4);

assign add_ln415_113_fu_3755_p2 = (16'd1 + trunc_ln708_133_fu_3737_p4);

assign add_ln415_fu_1372_p2 = (zext_ln415_fu_1369_p1 + trunc_ln1_fu_1351_p4);

assign add_ln446_2_fu_729_p2 = (zext_ln446_4_fu_726_p1 + add_ln446_fu_720_p2);

assign add_ln446_fu_720_p2 = (zext_ln446_fu_716_p1 + zext_ln76_1_fu_704_p1);

assign add_ln72_fu_659_p2 = (indvar_flatten_reg_614 + 11'd1);

assign add_ln76_fu_687_p2 = (6'd2 + ap_phi_mux_row_0_phi_fu_629_p4);

assign and_ln416_121_fu_1741_p2 = (xor_ln416_175_fu_1735_p2 & tmp_1027_fu_1710_p3);

assign and_ln416_122_fu_1974_p2 = (xor_ln416_176_fu_1968_p2 & tmp_1032_fu_1943_p3);

assign and_ln416_123_fu_2200_p2 = (xor_ln416_177_fu_2194_p2 & tmp_1037_fu_2169_p3);

assign and_ln416_124_fu_2490_p2 = (xor_ln416_178_fu_2484_p2 & tmp_1045_fu_2459_p3);

assign and_ln416_125_fu_4132_p2 = (xor_ln416_179_fu_4126_p2 & tmp_1050_fu_4101_p3);

assign and_ln416_126_fu_2819_p2 = (xor_ln416_180_fu_2813_p2 & tmp_1057_fu_2781_p3);

assign and_ln416_127_fu_3045_p2 = (xor_ln416_181_fu_3039_p2 & tmp_1062_fu_3017_p3);

assign and_ln416_128_fu_3346_p2 = (xor_ln416_182_fu_3340_p2 & tmp_1069_fu_3308_p3);

assign and_ln416_129_fu_3571_p2 = (xor_ln416_183_fu_3565_p2 & tmp_1075_fu_3540_p3);

assign and_ln416_130_fu_3775_p2 = (xor_ln416_184_fu_3769_p2 & tmp_1080_fu_3747_p3);

assign and_ln416_fu_1392_p2 = (xor_ln416_fu_1386_p2 & tmp_1018_fu_1361_p3);

assign and_ln779_10_fu_2893_p2 = (xor_ln779_117_fu_2887_p2 & icmp_ln879_129_fu_2843_p2);

assign and_ln779_11_fu_3119_p2 = (xor_ln779_118_fu_3113_p2 & icmp_ln879_131_fu_3069_p2);

assign and_ln779_13_fu_3412_p2 = (xor_ln779_119_fu_3406_p2 & tmp_1072_fu_3360_p3);

assign and_ln779_14_fu_3645_p2 = (xor_ln779_120_fu_3639_p2 & icmp_ln879_135_fu_3595_p2);

assign and_ln779_15_fu_3849_p2 = (xor_ln779_121_fu_3843_p2 & icmp_ln879_137_fu_3799_p2);

assign and_ln779_3_fu_1815_p2 = (xor_ln779_112_fu_1809_p2 & icmp_ln879_118_fu_1765_p2);

assign and_ln779_4_fu_2048_p2 = (xor_ln779_113_fu_2042_p2 & icmp_ln879_120_fu_1998_p2);

assign and_ln779_5_fu_2266_p2 = (xor_ln779_114_fu_2260_p2 & tmp_1040_fu_2214_p3);

assign and_ln779_7_fu_2564_p2 = (xor_ln779_115_fu_2558_p2 & icmp_ln879_124_fu_2514_p2);

assign and_ln779_8_fu_4206_p2 = (xor_ln779_116_fu_4200_p2 & icmp_ln879_126_fu_4156_p2);

assign and_ln779_fu_1466_p2 = (xor_ln779_fu_1460_p2 & icmp_ln879_fu_1416_p2);

assign and_ln781_10_fu_2907_p2 = (icmp_ln879_130_fu_2859_p2 & and_ln416_126_fu_2819_p2);

assign and_ln781_11_fu_3133_p2 = (icmp_ln879_132_fu_3085_p2 & and_ln416_127_fu_3045_p2);

assign and_ln781_13_fu_3426_p2 = (icmp_ln879_134_fu_3378_p2 & and_ln416_128_fu_3346_p2);

assign and_ln781_14_fu_3659_p2 = (icmp_ln879_136_fu_3611_p2 & and_ln416_129_fu_3571_p2);

assign and_ln781_15_fu_3863_p2 = (icmp_ln879_138_fu_3815_p2 & and_ln416_130_fu_3775_p2);

assign and_ln781_3_fu_1829_p2 = (icmp_ln879_119_fu_1781_p2 & and_ln416_121_fu_1741_p2);

assign and_ln781_4_fu_2062_p2 = (icmp_ln879_121_fu_2014_p2 & and_ln416_122_fu_1974_p2);

assign and_ln781_5_fu_2280_p2 = (icmp_ln879_122_fu_2232_p2 & and_ln416_123_fu_2200_p2);

assign and_ln781_7_fu_2578_p2 = (icmp_ln879_125_fu_2530_p2 & and_ln416_124_fu_2490_p2);

assign and_ln781_8_fu_4220_p2 = (icmp_ln879_127_fu_4172_p2 & and_ln416_125_fu_4132_p2);

assign and_ln781_fu_1480_p2 = (icmp_ln879_115_fu_1432_p2 & and_ln416_fu_1392_p2);

assign and_ln785_121_fu_1549_p2 = (xor_ln785_242_fu_1544_p2 & or_ln785_1_fu_1540_p2);

assign and_ln785_122_fu_1625_p2 = (xor_ln785_243_fu_1620_p2 & or_ln785_2_fu_1615_p2);

assign and_ln785_123_fu_1853_p2 = (xor_ln785_244_fu_1847_p2 & or_ln785_3_fu_1841_p2);

assign and_ln785_124_fu_2086_p2 = (xor_ln785_245_fu_2080_p2 & or_ln785_4_fu_2074_p2);

assign and_ln785_125_fu_2304_p2 = (xor_ln785_246_fu_2298_p2 & or_ln785_5_fu_2292_p2);

assign and_ln785_126_fu_2349_p2 = (xor_ln785_247_fu_2344_p2 & or_ln785_6_fu_2340_p2);

assign and_ln785_127_fu_2602_p2 = (xor_ln785_248_fu_2596_p2 & or_ln785_7_fu_2590_p2);

assign and_ln785_128_fu_4244_p2 = (xor_ln785_249_fu_4238_p2 & or_ln785_8_fu_4232_p2);

assign and_ln785_129_fu_2668_p2 = (xor_ln785_250_fu_2663_p2 & or_ln785_9_fu_2659_p2);

assign and_ln785_130_fu_2931_p2 = (xor_ln785_251_fu_2925_p2 & or_ln785_10_fu_2919_p2);

assign and_ln785_131_fu_3157_p2 = (xor_ln785_252_fu_3151_p2 & or_ln785_11_fu_3145_p2);

assign and_ln785_132_fu_3202_p2 = (xor_ln785_253_fu_3197_p2 & or_ln785_12_fu_3193_p2);

assign and_ln785_133_fu_3450_p2 = (xor_ln785_254_fu_3444_p2 & or_ln785_13_fu_3438_p2);

assign and_ln785_134_fu_3683_p2 = (xor_ln785_255_fu_3677_p2 & or_ln785_14_fu_3671_p2);

assign and_ln785_135_fu_3887_p2 = (xor_ln785_256_fu_3881_p2 & or_ln785_15_fu_3875_p2);

assign and_ln785_fu_1504_p2 = (xor_ln785_241_fu_1498_p2 & or_ln785_fu_1492_p2);

assign and_ln786_10_fu_2937_p2 = (tmp_1059_fu_2825_p3 & select_ln416_63_fu_2899_p3);

assign and_ln786_11_fu_3163_p2 = (tmp_1064_fu_3051_p3 & select_ln416_64_fu_3125_p3);

assign and_ln786_12_fu_3208_p2 = (tmp_1067_reg_4834 & icmp_ln879_133_reg_4840);

assign and_ln786_13_fu_3456_p2 = (tmp_1071_fu_3352_p3 & select_ln416_65_fu_3418_p3);

assign and_ln786_14_fu_3689_p2 = (tmp_1077_fu_3577_p3 & select_ln416_66_fu_3651_p3);

assign and_ln786_15_fu_3893_p2 = (tmp_1082_fu_3781_p3 & select_ln416_67_fu_3855_p3);

assign and_ln786_1_fu_1555_p2 = (tmp_1023_reg_4615 & icmp_ln879_116_reg_4621);

assign and_ln786_283_fu_1528_p2 = (xor_ln786_fu_1522_p2 & tmp_1017_fu_1343_p3);

assign and_ln786_284_fu_1565_p2 = (xor_ln786_1_fu_1559_p2 & tmp_1022_reg_4603);

assign and_ln786_285_fu_1642_p2 = (xor_ln786_2_fu_1636_p2 & tmp_1024_reg_4631);

assign and_ln786_286_fu_1877_p2 = (xor_ln786_169_fu_1871_p2 & tmp_1026_fu_1692_p3);

assign and_ln786_287_fu_2110_p2 = (xor_ln786_170_fu_2104_p2 & tmp_1031_fu_1925_p3);

assign and_ln786_288_fu_2328_p2 = (xor_ln786_171_fu_2322_p2 & tmp_1036_fu_2151_p3);

assign and_ln786_289_fu_2365_p2 = (xor_ln786_6_fu_2359_p2 & tmp_1042_reg_4707);

assign and_ln786_290_fu_2626_p2 = (xor_ln786_172_fu_2620_p2 & tmp_1044_fu_2441_p3);

assign and_ln786_291_fu_4268_p2 = (xor_ln786_173_fu_4262_p2 & tmp_1049_fu_4083_p3);

assign and_ln786_292_fu_2684_p2 = (xor_ln786_9_fu_2678_p2 & tmp_1054_reg_4761);

assign and_ln786_293_fu_2955_p2 = (xor_ln786_174_fu_2949_p2 & tmp_1056_fu_2763_p3);

assign and_ln786_294_fu_3181_p2 = (xor_ln786_175_fu_3175_p2 & tmp_1061_fu_2999_p3);

assign and_ln786_295_fu_3218_p2 = (xor_ln786_12_fu_3212_p2 & tmp_1066_reg_4822);

assign and_ln786_296_fu_3474_p2 = (xor_ln786_176_fu_3468_p2 & tmp_1068_fu_3290_p3);

assign and_ln786_297_fu_3707_p2 = (xor_ln786_177_fu_3701_p2 & tmp_1074_fu_3522_p3);

assign and_ln786_298_fu_3911_p2 = (xor_ln786_178_fu_3905_p2 & tmp_1079_fu_3729_p3);

assign and_ln786_2_fu_1631_p2 = (tmp_1025_reg_4643 & icmp_ln879_117_fu_1605_p2);

assign and_ln786_3_fu_1859_p2 = (tmp_1029_fu_1747_p3 & select_ln416_58_fu_1821_p3);

assign and_ln786_4_fu_2092_p2 = (tmp_1034_fu_1980_p3 & select_ln416_59_fu_2054_p3);

assign and_ln786_5_fu_2310_p2 = (tmp_1039_fu_2206_p3 & select_ln416_60_fu_2272_p3);

assign and_ln786_6_fu_2355_p2 = (tmp_1043_reg_4719 & icmp_ln879_123_reg_4725);

assign and_ln786_7_fu_2608_p2 = (tmp_1047_fu_2496_p3 & select_ln416_61_fu_2570_p3);

assign and_ln786_8_fu_4250_p2 = (tmp_1052_fu_4138_p3 & select_ln416_62_fu_4212_p3);

assign and_ln786_9_fu_2674_p2 = (tmp_1055_reg_4773 & icmp_ln879_128_reg_4779);

assign and_ln786_fu_1510_p2 = (tmp_1020_fu_1398_p3 & select_ln416_fu_1472_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign block_t0_0_V_address0 = zext_ln446_5_fu_735_p1;

assign block_t0_10_V_address0 = zext_ln446_5_fu_735_p1;

assign block_t0_11_V_address0 = zext_ln446_5_fu_735_p1;

assign block_t0_12_V_address0 = zext_ln446_5_fu_735_p1;

assign block_t0_13_V_address0 = zext_ln446_5_fu_735_p1;

assign block_t0_14_V_address0 = zext_ln446_5_fu_735_p1;

assign block_t0_15_V_address0 = zext_ln446_5_fu_735_p1;

assign block_t0_1_V_address0 = zext_ln446_5_fu_735_p1;

assign block_t0_2_V_address0 = zext_ln446_5_fu_735_p1;

assign block_t0_3_V_address0 = zext_ln446_5_fu_735_p1;

assign block_t0_4_V_address0 = zext_ln446_5_fu_735_p1;

assign block_t0_5_V_address0 = zext_ln446_5_fu_735_p1;

assign block_t0_6_V_address0 = zext_ln446_5_fu_735_p1;

assign block_t0_7_V_address0 = zext_ln446_5_fu_735_p1;

assign block_t0_8_V_address0 = zext_ln446_5_fu_735_p1;

assign block_t0_9_V_address0 = zext_ln446_5_fu_735_p1;

assign col_fu_693_p2 = (6'd1 + select_ln76_fu_671_p3);

assign icmp_ln72_fu_653_p2 = ((indvar_flatten_reg_614 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_665_p2 = ((ap_phi_mux_col_0_phi_fu_640_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln768_57_fu_1787_p2 = ((tmp_248_fu_1771_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_58_fu_2020_p2 = ((tmp_250_fu_2004_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_59_fu_2238_p2 = ((tmp_251_fu_2222_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_60_fu_2536_p2 = ((tmp_254_fu_2520_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_61_fu_4178_p2 = ((tmp_256_fu_4162_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_62_fu_2865_p2 = ((tmp_259_fu_2849_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_63_fu_3091_p2 = ((tmp_261_fu_3075_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_64_fu_3384_p2 = ((tmp_263_fu_3368_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_65_fu_3617_p2 = ((tmp_265_fu_3601_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_66_fu_3821_p2 = ((tmp_267_fu_3805_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_fu_1438_p2 = ((tmp_244_fu_1422_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_32_fu_1610_p2 = ((tmp_246_reg_4649 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_33_fu_1015_p2 = ((tmp_252_fu_999_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_34_fu_1099_p2 = ((tmp_257_fu_1083_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_35_fu_1201_p2 = ((tmp_262_fu_1185_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_fu_833_p2 = ((tmp_245_fu_817_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_115_fu_1432_p2 = ((tmp_244_fu_1422_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_116_fu_827_p2 = ((tmp_245_fu_817_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_117_fu_1605_p2 = ((tmp_246_reg_4649 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_118_fu_1765_p2 = ((tmp_247_fu_1755_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_119_fu_1781_p2 = ((tmp_248_fu_1771_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_120_fu_1998_p2 = ((tmp_249_fu_1988_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_121_fu_2014_p2 = ((tmp_250_fu_2004_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_122_fu_2232_p2 = ((tmp_251_fu_2222_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_123_fu_1009_p2 = ((tmp_252_fu_999_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_124_fu_2514_p2 = ((tmp_253_fu_2504_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_125_fu_2530_p2 = ((tmp_254_fu_2520_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_126_fu_4156_p2 = ((tmp_255_fu_4146_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_127_fu_4172_p2 = ((tmp_256_fu_4162_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_128_fu_1093_p2 = ((tmp_257_fu_1083_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_129_fu_2843_p2 = ((tmp_258_fu_2833_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_130_fu_2859_p2 = ((tmp_259_fu_2849_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_131_fu_3069_p2 = ((tmp_260_fu_3059_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_132_fu_3085_p2 = ((tmp_261_fu_3075_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_133_fu_1195_p2 = ((tmp_262_fu_1185_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_134_fu_3378_p2 = ((tmp_263_fu_3368_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_135_fu_3595_p2 = ((tmp_264_fu_3585_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_136_fu_3611_p2 = ((tmp_265_fu_3601_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_137_fu_3799_p2 = ((tmp_266_fu_3789_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_138_fu_3815_p2 = ((tmp_267_fu_3805_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_1416_p2 = ((tmp_s_fu_1406_p4 == 2'd3) ? 1'b1 : 1'b0);

assign mul_ln1118_fu_2641_p1 = block_t0_8_V_load_reg_4756;

assign mul_ln1118_fu_2641_p2 = ($signed({{1'b0}, {21'd11}}) * $signed(mul_ln1118_fu_2641_p1));

assign or_ln340_10_fu_2961_p2 = (and_ln786_293_fu_2955_p2 | and_ln785_130_fu_2931_p2);

assign or_ln340_11_fu_3187_p2 = (and_ln786_294_fu_3181_p2 | and_ln785_131_fu_3157_p2);

assign or_ln340_12_fu_3223_p2 = (and_ln786_295_fu_3218_p2 | and_ln785_132_fu_3202_p2);

assign or_ln340_13_fu_3480_p2 = (and_ln786_296_fu_3474_p2 | and_ln785_133_fu_3450_p2);

assign or_ln340_14_fu_3713_p2 = (and_ln786_297_fu_3707_p2 | and_ln785_134_fu_3683_p2);

assign or_ln340_15_fu_3917_p2 = (and_ln786_298_fu_3911_p2 | and_ln785_135_fu_3887_p2);

assign or_ln340_1_fu_1570_p2 = (and_ln786_284_fu_1565_p2 | and_ln785_121_fu_1549_p2);

assign or_ln340_2_fu_1647_p2 = (and_ln786_285_fu_1642_p2 | and_ln785_122_fu_1625_p2);

assign or_ln340_361_fu_3927_p2 = (or_ln340_416_fu_3923_p2 | and_ln781_reg_4914);

assign or_ln340_363_fu_1576_p2 = (xor_ln785_242_fu_1544_p2 | and_ln786_1_fu_1555_p2);

assign or_ln340_365_fu_1653_p2 = (xor_ln785_243_fu_1620_p2 | and_ln786_2_fu_1631_p2);

assign or_ln340_367_fu_3957_p2 = (or_ln340_417_fu_3953_p2 | and_ln781_3_reg_4945);

assign or_ln340_369_fu_3987_p2 = (or_ln340_418_fu_3983_p2 | and_ln781_4_reg_4976);

assign or_ln340_371_fu_4017_p2 = (or_ln340_419_fu_4013_p2 | and_ln781_5_reg_5007);

assign or_ln340_373_fu_2376_p2 = (xor_ln785_247_fu_2344_p2 | and_ln786_6_fu_2355_p2);

assign or_ln340_375_fu_4047_p2 = (or_ln340_420_fu_4043_p2 | and_ln781_7_reg_5038);

assign or_ln340_377_fu_4434_p2 = (or_ln340_421_fu_4430_p2 | and_ln781_8_reg_5239);

assign or_ln340_379_fu_2695_p2 = (xor_ln785_250_fu_2663_p2 | and_ln786_9_fu_2674_p2);

assign or_ln340_381_fu_4284_p2 = (or_ln340_422_fu_4280_p2 | and_ln781_10_reg_5084);

assign or_ln340_383_fu_4314_p2 = (or_ln340_423_fu_4310_p2 | and_ln781_11_reg_5115);

assign or_ln340_385_fu_3229_p2 = (xor_ln785_253_fu_3197_p2 | and_ln786_12_fu_3208_p2);

assign or_ln340_387_fu_4344_p2 = (or_ln340_424_fu_4340_p2 | and_ln781_13_reg_5146);

assign or_ln340_389_fu_4374_p2 = (or_ln340_425_fu_4370_p2 | and_ln781_14_reg_5177);

assign or_ln340_391_fu_4404_p2 = (or_ln340_426_fu_4400_p2 | and_ln781_15_reg_5208);

assign or_ln340_3_fu_1883_p2 = (and_ln786_286_fu_1877_p2 | and_ln785_123_fu_1853_p2);

assign or_ln340_416_fu_3923_p2 = (xor_ln785_241_reg_4919 | and_ln786_reg_4924);

assign or_ln340_417_fu_3953_p2 = (xor_ln785_244_reg_4950 | and_ln786_3_reg_4955);

assign or_ln340_418_fu_3983_p2 = (xor_ln785_245_reg_4981 | and_ln786_4_reg_4986);

assign or_ln340_419_fu_4013_p2 = (xor_ln785_246_reg_5012 | and_ln786_5_reg_5017);

assign or_ln340_420_fu_4043_p2 = (xor_ln785_248_reg_5043 | and_ln786_7_reg_5048);

assign or_ln340_421_fu_4430_p2 = (xor_ln785_249_reg_5244 | and_ln786_8_reg_5249);

assign or_ln340_422_fu_4280_p2 = (xor_ln785_251_reg_5089 | and_ln786_10_reg_5094);

assign or_ln340_423_fu_4310_p2 = (xor_ln785_252_reg_5120 | and_ln786_11_reg_5125);

assign or_ln340_424_fu_4340_p2 = (xor_ln785_254_reg_5151 | and_ln786_13_reg_5156);

assign or_ln340_425_fu_4370_p2 = (xor_ln785_255_reg_5182 | and_ln786_14_reg_5187);

assign or_ln340_426_fu_4400_p2 = (xor_ln785_256_reg_5213 | and_ln786_15_reg_5218);

assign or_ln340_4_fu_2116_p2 = (and_ln786_287_fu_2110_p2 | and_ln785_124_fu_2086_p2);

assign or_ln340_5_fu_2334_p2 = (and_ln786_288_fu_2328_p2 | and_ln785_125_fu_2304_p2);

assign or_ln340_6_fu_2370_p2 = (and_ln786_289_fu_2365_p2 | and_ln785_126_fu_2349_p2);

assign or_ln340_7_fu_2632_p2 = (and_ln786_290_fu_2626_p2 | and_ln785_127_fu_2602_p2);

assign or_ln340_8_fu_4274_p2 = (and_ln786_291_fu_4268_p2 | and_ln785_128_fu_4244_p2);

assign or_ln340_9_fu_2689_p2 = (and_ln786_292_fu_2684_p2 | and_ln785_129_fu_2668_p2);

assign or_ln340_fu_1534_p2 = (and_ln786_283_fu_1528_p2 | and_ln785_fu_1504_p2);

assign or_ln785_10_fu_2919_p2 = (xor_ln785_10_fu_2913_p2 | tmp_1059_fu_2825_p3);

assign or_ln785_11_fu_3145_p2 = (xor_ln785_11_fu_3139_p2 | tmp_1064_fu_3051_p3);

assign or_ln785_12_fu_3193_p2 = (tmp_1067_reg_4834 | icmp_ln785_35_reg_4845);

assign or_ln785_13_fu_3438_p2 = (xor_ln785_13_fu_3432_p2 | tmp_1071_fu_3352_p3);

assign or_ln785_14_fu_3671_p2 = (xor_ln785_14_fu_3665_p2 | tmp_1077_fu_3577_p3);

assign or_ln785_15_fu_3875_p2 = (xor_ln785_15_fu_3869_p2 | tmp_1082_fu_3781_p3);

assign or_ln785_1_fu_1540_p2 = (tmp_1023_reg_4615 | icmp_ln785_reg_4626);

assign or_ln785_2_fu_1615_p2 = (tmp_1025_reg_4643 | icmp_ln785_32_fu_1610_p2);

assign or_ln785_3_fu_1841_p2 = (xor_ln785_3_fu_1835_p2 | tmp_1029_fu_1747_p3);

assign or_ln785_4_fu_2074_p2 = (xor_ln785_4_fu_2068_p2 | tmp_1034_fu_1980_p3);

assign or_ln785_5_fu_2292_p2 = (xor_ln785_5_fu_2286_p2 | tmp_1039_fu_2206_p3);

assign or_ln785_6_fu_2340_p2 = (tmp_1043_reg_4719 | icmp_ln785_33_reg_4730);

assign or_ln785_7_fu_2590_p2 = (xor_ln785_7_fu_2584_p2 | tmp_1047_fu_2496_p3);

assign or_ln785_8_fu_4232_p2 = (xor_ln785_8_fu_4226_p2 | tmp_1052_fu_4138_p3);

assign or_ln785_9_fu_2659_p2 = (tmp_1055_reg_4773 | icmp_ln785_34_reg_4784);

assign or_ln785_fu_1492_p2 = (xor_ln785_fu_1486_p2 | tmp_1020_fu_1398_p3);

assign or_ln786_144_fu_1865_p2 = (and_ln786_3_fu_1859_p2 | and_ln781_3_fu_1829_p2);

assign or_ln786_145_fu_2098_p2 = (and_ln786_4_fu_2092_p2 | and_ln781_4_fu_2062_p2);

assign or_ln786_146_fu_2316_p2 = (and_ln786_5_fu_2310_p2 | and_ln781_5_fu_2280_p2);

assign or_ln786_147_fu_2614_p2 = (and_ln786_7_fu_2608_p2 | and_ln781_7_fu_2578_p2);

assign or_ln786_148_fu_4256_p2 = (and_ln786_8_fu_4250_p2 | and_ln781_8_fu_4220_p2);

assign or_ln786_149_fu_2943_p2 = (and_ln786_10_fu_2937_p2 | and_ln781_10_fu_2907_p2);

assign or_ln786_150_fu_3169_p2 = (and_ln786_11_fu_3163_p2 | and_ln781_11_fu_3133_p2);

assign or_ln786_151_fu_3462_p2 = (and_ln786_13_fu_3456_p2 | and_ln781_13_fu_3426_p2);

assign or_ln786_152_fu_3695_p2 = (and_ln786_14_fu_3689_p2 | and_ln781_14_fu_3659_p2);

assign or_ln786_153_fu_3899_p2 = (and_ln786_15_fu_3893_p2 | and_ln781_15_fu_3863_p2);

assign or_ln786_fu_1516_p2 = (and_ln786_fu_1510_p2 | and_ln781_fu_1480_p2);

assign out_buf_0_0_V_address0 = zext_ln203_5_reg_4893;

assign out_buf_0_0_V_d0 = ((or_ln340_361_fu_3927_p2[0:0] === 1'b1) ? select_ln340_fu_3932_p3 : select_ln388_fu_3938_p3);

assign out_buf_0_10_V_address0 = zext_ln203_5_reg_4893;

assign out_buf_0_10_V_d0 = ((or_ln340_381_fu_4284_p2[0:0] === 1'b1) ? select_ln340_10_fu_4289_p3 : select_ln388_10_fu_4295_p3);

assign out_buf_0_11_V_address0 = zext_ln203_5_reg_4893;

assign out_buf_0_11_V_d0 = ((or_ln340_383_fu_4314_p2[0:0] === 1'b1) ? select_ln340_11_fu_4319_p3 : select_ln388_11_fu_4325_p3);

assign out_buf_0_12_V_address0 = zext_ln203_5_fu_1298_p1;

assign out_buf_0_12_V_d0 = ((or_ln340_385_fu_3229_p2[0:0] === 1'b1) ? select_ln340_12_fu_3235_p3 : select_ln388_12_fu_3242_p3);

assign out_buf_0_13_V_address0 = zext_ln203_5_reg_4893;

assign out_buf_0_13_V_d0 = ((or_ln340_387_fu_4344_p2[0:0] === 1'b1) ? select_ln340_13_fu_4349_p3 : select_ln388_13_fu_4355_p3);

assign out_buf_0_14_V_address0 = zext_ln203_5_reg_4893;

assign out_buf_0_14_V_d0 = ((or_ln340_389_fu_4374_p2[0:0] === 1'b1) ? select_ln340_14_fu_4379_p3 : select_ln388_14_fu_4385_p3);

assign out_buf_0_15_V_address0 = zext_ln203_5_reg_4893;

assign out_buf_0_15_V_d0 = ((or_ln340_391_fu_4404_p2[0:0] === 1'b1) ? select_ln340_15_fu_4409_p3 : select_ln388_15_fu_4415_p3);

assign out_buf_0_1_V_address0 = zext_ln203_5_fu_1298_p1;

assign out_buf_0_1_V_d0 = ((or_ln340_363_fu_1576_p2[0:0] === 1'b1) ? select_ln340_1_fu_1582_p3 : select_ln388_1_fu_1589_p3);

assign out_buf_0_2_V_address0 = zext_ln203_5_fu_1298_p1;

assign out_buf_0_2_V_d0 = ((or_ln340_365_fu_1653_p2[0:0] === 1'b1) ? select_ln340_2_fu_1659_p3 : select_ln388_2_fu_1666_p3);

assign out_buf_0_3_V_address0 = zext_ln203_5_reg_4893;

assign out_buf_0_3_V_d0 = ((or_ln340_367_fu_3957_p2[0:0] === 1'b1) ? select_ln340_3_fu_3962_p3 : select_ln388_3_fu_3968_p3);

assign out_buf_0_4_V_address0 = zext_ln203_5_reg_4893;

assign out_buf_0_4_V_d0 = ((or_ln340_369_fu_3987_p2[0:0] === 1'b1) ? select_ln340_4_fu_3992_p3 : select_ln388_4_fu_3998_p3);

assign out_buf_0_5_V_address0 = zext_ln203_5_reg_4893;

assign out_buf_0_5_V_d0 = ((or_ln340_371_fu_4017_p2[0:0] === 1'b1) ? select_ln340_5_fu_4022_p3 : select_ln388_5_fu_4028_p3);

assign out_buf_0_6_V_address0 = zext_ln203_5_fu_1298_p1;

assign out_buf_0_6_V_d0 = ((or_ln340_373_fu_2376_p2[0:0] === 1'b1) ? select_ln340_6_fu_2382_p3 : select_ln388_6_fu_2389_p3);

assign out_buf_0_7_V_address0 = zext_ln203_5_reg_4893;

assign out_buf_0_7_V_d0 = ((or_ln340_375_fu_4047_p2[0:0] === 1'b1) ? select_ln340_7_fu_4052_p3 : select_ln388_7_fu_4058_p3);

assign out_buf_0_8_V_address0 = zext_ln203_5_reg_4893_pp0_iter4_reg;

assign out_buf_0_8_V_d0 = ((or_ln340_377_fu_4434_p2[0:0] === 1'b1) ? select_ln340_8_fu_4439_p3 : select_ln388_8_fu_4445_p3);

assign out_buf_0_9_V_address0 = zext_ln203_5_fu_1298_p1;

assign out_buf_0_9_V_d0 = ((or_ln340_379_fu_2695_p2[0:0] === 1'b1) ? select_ln340_9_fu_2701_p3 : select_ln388_9_fu_2708_p3);

assign row_fu_647_p2 = (ap_phi_mux_row_0_phi_fu_629_p4 + 6'd1);

assign select_ln340_10_fu_4289_p3 = ((or_ln340_10_reg_5104[0:0] === 1'b1) ? 16'd32767 : add_ln415_108_reg_5078);

assign select_ln340_11_fu_4319_p3 = ((or_ln340_11_reg_5135[0:0] === 1'b1) ? 16'd32767 : add_ln415_109_reg_5109);

assign select_ln340_12_fu_3235_p3 = ((or_ln340_12_fu_3223_p2[0:0] === 1'b1) ? 16'd32767 : trunc_ln708_130_reg_4828);

assign select_ln340_13_fu_4349_p3 = ((or_ln340_13_reg_5166[0:0] === 1'b1) ? 16'd32767 : add_ln415_111_reg_5140);

assign select_ln340_14_fu_4379_p3 = ((or_ln340_14_reg_5197[0:0] === 1'b1) ? 16'd32767 : add_ln415_112_reg_5171);

assign select_ln340_15_fu_4409_p3 = ((or_ln340_15_reg_5228[0:0] === 1'b1) ? 16'd32767 : add_ln415_113_reg_5202);

assign select_ln340_1_fu_1582_p3 = ((or_ln340_1_fu_1570_p2[0:0] === 1'b1) ? 16'd32767 : trunc_ln708_s_reg_4609);

assign select_ln340_2_fu_1659_p3 = ((or_ln340_2_fu_1647_p2[0:0] === 1'b1) ? 16'd32767 : trunc_ln708_120_reg_4637);

assign select_ln340_3_fu_3962_p3 = ((or_ln340_3_reg_4965[0:0] === 1'b1) ? 16'd32767 : add_ln415_101_reg_4939);

assign select_ln340_4_fu_3992_p3 = ((or_ln340_4_reg_4996[0:0] === 1'b1) ? 16'd32767 : add_ln415_102_reg_4970);

assign select_ln340_5_fu_4022_p3 = ((or_ln340_5_reg_5027[0:0] === 1'b1) ? 16'd32767 : add_ln415_103_reg_5001);

assign select_ln340_6_fu_2382_p3 = ((or_ln340_6_fu_2370_p2[0:0] === 1'b1) ? 16'd32767 : trunc_ln708_124_reg_4713);

assign select_ln340_7_fu_4052_p3 = ((or_ln340_7_reg_5058[0:0] === 1'b1) ? 16'd32767 : add_ln415_105_reg_5032);

assign select_ln340_8_fu_4439_p3 = ((or_ln340_8_reg_5259[0:0] === 1'b1) ? 16'd32767 : add_ln415_106_reg_5233);

assign select_ln340_9_fu_2701_p3 = ((or_ln340_9_fu_2689_p2[0:0] === 1'b1) ? 16'd32767 : trunc_ln708_127_reg_4767);

assign select_ln340_fu_3932_p3 = ((or_ln340_reg_4934[0:0] === 1'b1) ? 16'd32767 : add_ln415_reg_4908);

assign select_ln388_10_fu_4295_p3 = ((and_ln786_293_reg_5099[0:0] === 1'b1) ? 16'd32768 : add_ln415_108_reg_5078);

assign select_ln388_11_fu_4325_p3 = ((and_ln786_294_reg_5130[0:0] === 1'b1) ? 16'd32768 : add_ln415_109_reg_5109);

assign select_ln388_12_fu_3242_p3 = ((and_ln786_295_fu_3218_p2[0:0] === 1'b1) ? 16'd32768 : trunc_ln708_130_reg_4828);

assign select_ln388_13_fu_4355_p3 = ((and_ln786_296_reg_5161[0:0] === 1'b1) ? 16'd32768 : add_ln415_111_reg_5140);

assign select_ln388_14_fu_4385_p3 = ((and_ln786_297_reg_5192[0:0] === 1'b1) ? 16'd32768 : add_ln415_112_reg_5171);

assign select_ln388_15_fu_4415_p3 = ((and_ln786_298_reg_5223[0:0] === 1'b1) ? 16'd32768 : add_ln415_113_reg_5202);

assign select_ln388_1_fu_1589_p3 = ((and_ln786_284_fu_1565_p2[0:0] === 1'b1) ? 16'd32768 : trunc_ln708_s_reg_4609);

assign select_ln388_2_fu_1666_p3 = ((and_ln786_285_fu_1642_p2[0:0] === 1'b1) ? 16'd32768 : trunc_ln708_120_reg_4637);

assign select_ln388_3_fu_3968_p3 = ((and_ln786_286_reg_4960[0:0] === 1'b1) ? 16'd32768 : add_ln415_101_reg_4939);

assign select_ln388_4_fu_3998_p3 = ((and_ln786_287_reg_4991[0:0] === 1'b1) ? 16'd32768 : add_ln415_102_reg_4970);

assign select_ln388_5_fu_4028_p3 = ((and_ln786_288_reg_5022[0:0] === 1'b1) ? 16'd32768 : add_ln415_103_reg_5001);

assign select_ln388_6_fu_2389_p3 = ((and_ln786_289_fu_2365_p2[0:0] === 1'b1) ? 16'd32768 : trunc_ln708_124_reg_4713);

assign select_ln388_7_fu_4058_p3 = ((and_ln786_290_reg_5053[0:0] === 1'b1) ? 16'd32768 : add_ln415_105_reg_5032);

assign select_ln388_8_fu_4445_p3 = ((and_ln786_291_reg_5254[0:0] === 1'b1) ? 16'd32768 : add_ln415_106_reg_5233);

assign select_ln388_9_fu_2708_p3 = ((and_ln786_292_fu_2684_p2[0:0] === 1'b1) ? 16'd32768 : trunc_ln708_127_reg_4767);

assign select_ln388_fu_3938_p3 = ((and_ln786_283_reg_4929[0:0] === 1'b1) ? 16'd32768 : add_ln415_reg_4908);

assign select_ln416_58_fu_1821_p3 = ((and_ln416_121_fu_1741_p2[0:0] === 1'b1) ? and_ln779_3_fu_1815_p2 : icmp_ln879_119_fu_1781_p2);

assign select_ln416_59_fu_2054_p3 = ((and_ln416_122_fu_1974_p2[0:0] === 1'b1) ? and_ln779_4_fu_2048_p2 : icmp_ln879_121_fu_2014_p2);

assign select_ln416_60_fu_2272_p3 = ((and_ln416_123_fu_2200_p2[0:0] === 1'b1) ? and_ln779_5_fu_2266_p2 : icmp_ln879_122_fu_2232_p2);

assign select_ln416_61_fu_2570_p3 = ((and_ln416_124_fu_2490_p2[0:0] === 1'b1) ? and_ln779_7_fu_2564_p2 : icmp_ln879_125_fu_2530_p2);

assign select_ln416_62_fu_4212_p3 = ((and_ln416_125_fu_4132_p2[0:0] === 1'b1) ? and_ln779_8_fu_4206_p2 : icmp_ln879_127_fu_4172_p2);

assign select_ln416_63_fu_2899_p3 = ((and_ln416_126_fu_2819_p2[0:0] === 1'b1) ? and_ln779_10_fu_2893_p2 : icmp_ln879_130_fu_2859_p2);

assign select_ln416_64_fu_3125_p3 = ((and_ln416_127_fu_3045_p2[0:0] === 1'b1) ? and_ln779_11_fu_3119_p2 : icmp_ln879_132_fu_3085_p2);

assign select_ln416_65_fu_3418_p3 = ((and_ln416_128_fu_3346_p2[0:0] === 1'b1) ? and_ln779_13_fu_3412_p2 : icmp_ln879_134_fu_3378_p2);

assign select_ln416_66_fu_3651_p3 = ((and_ln416_129_fu_3571_p2[0:0] === 1'b1) ? and_ln779_14_fu_3645_p2 : icmp_ln879_136_fu_3611_p2);

assign select_ln416_67_fu_3855_p3 = ((and_ln416_130_fu_3775_p2[0:0] === 1'b1) ? and_ln779_15_fu_3849_p2 : icmp_ln879_138_fu_3815_p2);

assign select_ln416_fu_1472_p3 = ((and_ln416_fu_1392_p2[0:0] === 1'b1) ? and_ln779_fu_1466_p2 : icmp_ln879_115_fu_1432_p2);

assign select_ln76_1_fu_679_p3 = ((icmp_ln73_fu_665_p2[0:0] === 1'b1) ? row_fu_647_p2 : ap_phi_mux_row_0_phi_fu_629_p4);

assign select_ln76_2_fu_699_p3 = ((icmp_ln73_reg_4474[0:0] === 1'b1) ? add_ln76_reg_4491 : row_reg_4460);

assign select_ln76_fu_671_p3 = ((icmp_ln73_fu_665_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_col_0_phi_fu_640_p4);

assign select_ln777_57_fu_1793_p3 = ((and_ln416_121_fu_1741_p2[0:0] === 1'b1) ? icmp_ln879_119_fu_1781_p2 : icmp_ln768_57_fu_1787_p2);

assign select_ln777_58_fu_2026_p3 = ((and_ln416_122_fu_1974_p2[0:0] === 1'b1) ? icmp_ln879_121_fu_2014_p2 : icmp_ln768_58_fu_2020_p2);

assign select_ln777_59_fu_2244_p3 = ((and_ln416_123_fu_2200_p2[0:0] === 1'b1) ? icmp_ln879_122_fu_2232_p2 : icmp_ln768_59_fu_2238_p2);

assign select_ln777_60_fu_2542_p3 = ((and_ln416_124_fu_2490_p2[0:0] === 1'b1) ? icmp_ln879_125_fu_2530_p2 : icmp_ln768_60_fu_2536_p2);

assign select_ln777_61_fu_4184_p3 = ((and_ln416_125_fu_4132_p2[0:0] === 1'b1) ? icmp_ln879_127_fu_4172_p2 : icmp_ln768_61_fu_4178_p2);

assign select_ln777_62_fu_2871_p3 = ((and_ln416_126_fu_2819_p2[0:0] === 1'b1) ? icmp_ln879_130_fu_2859_p2 : icmp_ln768_62_fu_2865_p2);

assign select_ln777_63_fu_3097_p3 = ((and_ln416_127_fu_3045_p2[0:0] === 1'b1) ? icmp_ln879_132_fu_3085_p2 : icmp_ln768_63_fu_3091_p2);

assign select_ln777_64_fu_3390_p3 = ((and_ln416_128_fu_3346_p2[0:0] === 1'b1) ? icmp_ln879_134_fu_3378_p2 : icmp_ln768_64_fu_3384_p2);

assign select_ln777_65_fu_3623_p3 = ((and_ln416_129_fu_3571_p2[0:0] === 1'b1) ? icmp_ln879_136_fu_3611_p2 : icmp_ln768_65_fu_3617_p2);

assign select_ln777_66_fu_3827_p3 = ((and_ln416_130_fu_3775_p2[0:0] === 1'b1) ? icmp_ln879_138_fu_3815_p2 : icmp_ln768_66_fu_3821_p2);

assign select_ln777_fu_1444_p3 = ((and_ln416_fu_1392_p2[0:0] === 1'b1) ? icmp_ln879_115_fu_1432_p2 : icmp_ln768_fu_1438_p2);

assign sext_ln1118_100_fu_2412_p1 = $signed(shl_ln1118_8_fu_2405_p3);

assign sext_ln1118_102_fu_1047_p1 = $signed(shl_ln1118_9_fu_1039_p3);

assign sext_ln1118_103_fu_1105_p0 = block_t0_10_V_q0;

assign sext_ln1118_103_fu_1105_p1 = sext_ln1118_103_fu_1105_p0;

assign sext_ln1118_104_fu_2734_p1 = $signed(shl_ln1118_s_fu_2727_p3);

assign sext_ln1118_105_fu_2974_p1 = $signed(shl_ln1118_1_fu_2967_p3);

assign sext_ln1118_106_fu_1127_p1 = $signed(shl_ln1118_10_fu_1119_p3);

assign sext_ln1118_107_fu_1149_p1 = $signed(shl_ln1118_11_fu_1141_p3);

assign sext_ln1118_108_fu_1207_p0 = block_t0_13_V_q0;

assign sext_ln1118_108_fu_1207_p1 = sext_ln1118_108_fu_1207_p0;

assign sext_ln1118_109_fu_3268_p1 = shl_ln1118_12_fu_3261_p3;

assign sext_ln1118_110_fu_1221_p0 = block_t0_14_V_q0;

assign sext_ln1118_110_fu_1221_p1 = sext_ln1118_110_fu_1221_p0;

assign sext_ln1118_111_fu_3493_p1 = $signed(shl_ln1118_13_fu_3486_p3);

assign sext_ln1118_112_fu_1243_p1 = $signed(shl_ln1118_14_fu_1235_p3);

assign sext_ln1118_113_fu_1255_p1 = $signed(shl_ln1118_15_fu_1247_p3);

assign sext_ln1118_89_fu_1314_p1 = $signed(shl_ln_fu_1307_p3);

assign sext_ln1118_90_fu_781_p1 = $signed(shl_ln1118_2_fu_773_p3);

assign sext_ln1118_91_fu_847_p1 = $signed(shl_ln1118_3_fu_839_p3);

assign sext_ln1118_92_fu_893_p0 = block_t0_3_V_q0;

assign sext_ln1118_92_fu_893_p1 = sext_ln1118_92_fu_893_p0;

assign sext_ln1118_93_fu_905_p1 = $signed(shl_ln1118_4_fu_897_p3);

assign sext_ln1118_94_fu_927_p0 = block_t0_4_V_q0;

assign sext_ln1118_94_fu_927_p1 = sext_ln1118_94_fu_927_p0;

assign sext_ln1118_95_fu_1896_p1 = $signed(shl_ln1118_5_fu_1889_p3);

assign sext_ln1118_96_fu_945_p0 = block_t0_5_V_q0;

assign sext_ln1118_96_fu_945_p1 = sext_ln1118_96_fu_945_p0;

assign sext_ln1118_97_fu_2129_p1 = shl_ln1118_6_fu_2122_p3;

assign sext_ln1118_98_fu_963_p1 = $signed(shl_ln1118_7_fu_955_p3);

assign sext_ln1118_99_fu_1025_p0 = block_t0_7_V_q0;

assign sext_ln1118_99_fu_1025_p1 = sext_ln1118_99_fu_1025_p0;

assign sext_ln1118_fu_759_p0 = block_t0_0_V_q0;

assign sext_ln1118_fu_759_p1 = sext_ln1118_fu_759_p0;

assign sext_ln1192_25_fu_1328_p1 = add_ln1192_105_reg_4592;

assign sext_ln1192_26_fu_1900_p1 = add_ln1192_111_reg_4680;

assign sext_ln1192_27_fu_1910_p1 = add_ln1192_111_reg_4680;

assign sext_ln1192_28_fu_2133_p1 = add_ln1192_115_reg_4701;

assign sext_ln1192_29_fu_2136_p1 = add_ln1192_115_reg_4701;

assign sext_ln1192_30_fu_2416_p1 = add_ln1192_119_reg_4745;

assign sext_ln1192_31_fu_2426_p1 = add_ln1192_119_reg_4745;

assign sext_ln1192_32_fu_2738_p1 = add_ln1192_124_reg_4795;

assign sext_ln1192_33_fu_2748_p1 = add_ln1192_124_reg_4795;

assign sext_ln1192_34_fu_2978_p1 = add_ln1192_127_reg_4811;

assign sext_ln1192_35_fu_3272_p1 = add_ln1192_134_reg_4856;

assign sext_ln1192_36_fu_3275_p1 = add_ln1192_134_reg_4856;

assign sext_ln1192_37_fu_3497_p1 = add_ln1192_136_reg_4872;

assign sext_ln1192_38_fu_3507_p1 = add_ln1192_136_reg_4872;

assign sext_ln1192_fu_1318_p1 = add_ln1192_105_reg_4592;

assign shl_ln1118_10_fu_1119_p3 = {{block_t0_11_V_q0}, {1'd0}};

assign shl_ln1118_11_fu_1141_p3 = {{block_t0_12_V_q0}, {3'd0}};

assign shl_ln1118_12_fu_3261_p3 = {{block_t0_13_V_load_reg_4850}, {2'd0}};

assign shl_ln1118_13_fu_3486_p3 = {{block_t0_14_V_load_reg_4862}, {3'd0}};

assign shl_ln1118_14_fu_1235_p3 = {{block_t0_15_V_q0}, {3'd0}};

assign shl_ln1118_15_fu_1247_p3 = {{block_t0_15_V_q0}, {1'd0}};

assign shl_ln1118_1_fu_2967_p3 = {{block_t0_11_V_load_reg_4806}, {3'd0}};

assign shl_ln1118_2_fu_773_p3 = {{block_t0_1_V_q0}, {3'd0}};

assign shl_ln1118_3_fu_839_p3 = {{block_t0_2_V_q0}, {2'd0}};

assign shl_ln1118_4_fu_897_p1 = block_t0_3_V_q0;

assign shl_ln1118_4_fu_897_p3 = {{shl_ln1118_4_fu_897_p1}, {3'd0}};

assign shl_ln1118_5_fu_1889_p3 = {{block_t0_4_V_load_reg_4670}, {3'd0}};

assign shl_ln1118_6_fu_2122_p3 = {{block_t0_5_V_load_reg_4691}, {2'd0}};

assign shl_ln1118_7_fu_955_p3 = {{block_t0_6_V_q0}, {3'd0}};

assign shl_ln1118_8_fu_2405_p3 = {{block_t0_7_V_load_reg_4735}, {3'd0}};

assign shl_ln1118_9_fu_1039_p3 = {{block_t0_9_V_q0}, {3'd0}};

assign shl_ln1118_s_fu_2727_p3 = {{block_t0_10_V_load_reg_4789}, {3'd0}};

assign shl_ln_fu_1307_p3 = {{block_t0_0_V_load_reg_4582}, {3'd0}};

assign sub_ln1118_1_fu_1259_p2 = ($signed(sext_ln1118_112_fu_1243_p1) - $signed(sext_ln1118_113_fu_1255_p1));

assign sub_ln1118_fu_909_p2 = ($signed(sext_ln1118_93_fu_905_p1) - $signed(sext_ln1118_92_fu_893_p1));

assign tmp_1015_fu_1272_p3 = {{select_ln76_1_reg_4484_pp0_iter2_reg}, {5'd0}};

assign tmp_1016_fu_708_p3 = {{select_ln76_2_fu_699_p3}, {5'd0}};

assign tmp_1017_fu_1343_p3 = add_ln1192_106_fu_1331_p2[32'd19];

assign tmp_1018_fu_1361_p3 = add_ln1192_106_fu_1331_p2[32'd16];

assign tmp_1019_fu_1378_p3 = add_ln415_fu_1372_p2[32'd15];

assign tmp_1020_fu_1398_p3 = add_ln415_fu_1372_p2[32'd15];

assign tmp_1021_fu_1452_p3 = add_ln1192_107_fu_1337_p2[32'd17];

assign tmp_1026_fu_1692_p3 = add_ln1192_109_fu_1682_p2[32'd19];

assign tmp_1027_fu_1710_p3 = add_ln1192_109_fu_1682_p2[32'd16];

assign tmp_1028_fu_1727_p3 = add_ln415_101_fu_1721_p2[32'd15];

assign tmp_1029_fu_1747_p3 = add_ln415_101_fu_1721_p2[32'd15];

assign tmp_1030_fu_1801_p3 = add_ln1192_110_fu_1687_p2[32'd17];

assign tmp_1031_fu_1925_p3 = add_ln1192_113_fu_1913_p2[32'd19];

assign tmp_1032_fu_1943_p3 = add_ln1192_113_fu_1913_p2[32'd16];

assign tmp_1033_fu_1960_p3 = add_ln415_102_fu_1954_p2[32'd15];

assign tmp_1034_fu_1980_p3 = add_ln415_102_fu_1954_p2[32'd15];

assign tmp_1035_fu_2034_p3 = add_ln1192_114_fu_1919_p2[32'd17];

assign tmp_1036_fu_2151_p3 = add_ln1192_116_fu_2139_p2[32'd18];

assign tmp_1037_fu_2169_p3 = add_ln1192_116_fu_2139_p2[32'd16];

assign tmp_1038_fu_2186_p3 = add_ln415_103_fu_2180_p2[32'd15];

assign tmp_1039_fu_2206_p3 = add_ln415_103_fu_2180_p2[32'd15];

assign tmp_1040_fu_2214_p3 = add_ln1192_116_fu_2139_p2[32'd18];

assign tmp_1041_fu_2252_p3 = add_ln1192_117_fu_2145_p2[32'd17];

assign tmp_1044_fu_2441_p3 = add_ln1192_120_fu_2429_p2[32'd19];

assign tmp_1045_fu_2459_p3 = add_ln1192_120_fu_2429_p2[32'd16];

assign tmp_1046_fu_2476_p3 = add_ln415_105_fu_2470_p2[32'd15];

assign tmp_1047_fu_2496_p3 = add_ln415_105_fu_2470_p2[32'd15];

assign tmp_1048_fu_2550_p3 = add_ln1192_121_fu_2435_p2[32'd17];

assign tmp_1049_fu_4083_p3 = add_ln1192_112_fu_4073_p2[32'd19];

assign tmp_1050_fu_4101_p3 = add_ln1192_112_fu_4073_p2[32'd16];

assign tmp_1051_fu_4118_p3 = add_ln415_106_fu_4112_p2[32'd15];

assign tmp_1052_fu_4138_p3 = add_ln415_106_fu_4112_p2[32'd15];

assign tmp_1053_fu_4192_p3 = add_ln1192_122_fu_4078_p2[32'd17];

assign tmp_1056_fu_2763_p3 = add_ln1192_125_fu_2751_p2[32'd19];

assign tmp_1057_fu_2781_p3 = add_ln1192_125_fu_2751_p2[32'd16];

assign tmp_1058_fu_2805_p3 = add_ln415_108_fu_2799_p2[32'd15];

assign tmp_1059_fu_2825_p3 = add_ln415_108_fu_2799_p2[32'd15];

assign tmp_1060_fu_2879_p3 = add_ln1192_126_fu_2757_p2[32'd17];

assign tmp_1061_fu_2999_p3 = add_ln1192_128_fu_2988_p2[32'd19];

assign tmp_1062_fu_3017_p3 = add_ln1192_128_fu_2988_p2[32'd16];

assign tmp_1063_fu_3031_p3 = add_ln415_109_fu_3025_p2[32'd15];

assign tmp_1064_fu_3051_p3 = add_ln415_109_fu_3025_p2[32'd15];

assign tmp_1065_fu_3105_p3 = add_ln1192_129_fu_2994_p2[32'd17];

assign tmp_1068_fu_3290_p3 = add_ln1192_131_fu_3278_p2[32'd18];

assign tmp_1069_fu_3308_p3 = add_ln1192_131_fu_3278_p2[32'd16];

assign tmp_1070_fu_3332_p3 = add_ln415_111_fu_3326_p2[32'd15];

assign tmp_1071_fu_3352_p3 = add_ln415_111_fu_3326_p2[32'd15];

assign tmp_1072_fu_3360_p3 = add_ln1192_131_fu_3278_p2[32'd18];

assign tmp_1073_fu_3398_p3 = add_ln1192_135_fu_3284_p2[32'd17];

assign tmp_1074_fu_3522_p3 = add_ln1192_132_fu_3510_p2[32'd19];

assign tmp_1075_fu_3540_p3 = add_ln1192_132_fu_3510_p2[32'd16];

assign tmp_1076_fu_3557_p3 = add_ln415_112_fu_3551_p2[32'd15];

assign tmp_1077_fu_3577_p3 = add_ln415_112_fu_3551_p2[32'd15];

assign tmp_1078_fu_3631_p3 = add_ln1192_137_fu_3516_p2[32'd17];

assign tmp_1079_fu_3729_p3 = add_ln1192_133_fu_3719_p2[32'd19];

assign tmp_1080_fu_3747_p3 = add_ln1192_133_fu_3719_p2[32'd16];

assign tmp_1081_fu_3761_p3 = add_ln415_113_fu_3755_p2[32'd15];

assign tmp_1082_fu_3781_p3 = add_ln415_113_fu_3755_p2[32'd15];

assign tmp_1083_fu_3835_p3 = add_ln1192_138_fu_3724_p2[32'd17];

assign tmp_244_fu_1422_p4 = {{add_ln1192_106_fu_1331_p2[19:17]}};

assign tmp_245_fu_817_p4 = {{add_ln1192_fu_785_p2[19:17]}};

assign tmp_247_fu_1755_p4 = {{add_ln1192_109_fu_1682_p2[19:18]}};

assign tmp_248_fu_1771_p4 = {{add_ln1192_109_fu_1682_p2[19:17]}};

assign tmp_249_fu_1988_p4 = {{add_ln1192_113_fu_1913_p2[19:18]}};

assign tmp_250_fu_2004_p4 = {{add_ln1192_113_fu_1913_p2[19:17]}};

assign tmp_251_fu_2222_p4 = {{add_ln1192_116_fu_2139_p2[18:17]}};

assign tmp_252_fu_999_p4 = {{add_ln1192_118_fu_967_p2[19:17]}};

assign tmp_253_fu_2504_p4 = {{add_ln1192_120_fu_2429_p2[19:18]}};

assign tmp_254_fu_2520_p4 = {{add_ln1192_120_fu_2429_p2[19:17]}};

assign tmp_255_fu_4146_p4 = {{add_ln1192_112_fu_4073_p2[19:18]}};

assign tmp_256_fu_4162_p4 = {{add_ln1192_112_fu_4073_p2[19:17]}};

assign tmp_257_fu_1083_p4 = {{add_ln1192_123_fu_1051_p2[19:17]}};

assign tmp_258_fu_2833_p4 = {{add_ln1192_125_fu_2751_p2[19:18]}};

assign tmp_259_fu_2849_p4 = {{add_ln1192_125_fu_2751_p2[19:17]}};

assign tmp_260_fu_3059_p4 = {{add_ln1192_128_fu_2988_p2[19:18]}};

assign tmp_261_fu_3075_p4 = {{add_ln1192_128_fu_2988_p2[19:17]}};

assign tmp_262_fu_1185_p4 = {{add_ln1192_130_fu_1153_p2[19:17]}};

assign tmp_263_fu_3368_p4 = {{add_ln1192_131_fu_3278_p2[18:17]}};

assign tmp_264_fu_3585_p4 = {{add_ln1192_132_fu_3510_p2[19:18]}};

assign tmp_265_fu_3601_p4 = {{add_ln1192_132_fu_3510_p2[19:17]}};

assign tmp_266_fu_3789_p4 = {{add_ln1192_133_fu_3719_p2[19:18]}};

assign tmp_267_fu_3805_p4 = {{add_ln1192_133_fu_3719_p2[19:17]}};

assign tmp_s_fu_1406_p4 = {{add_ln1192_106_fu_1331_p2[19:18]}};

assign trunc_ln1118_1_fu_923_p0 = block_t0_4_V_q0;

assign trunc_ln1118_1_fu_923_p1 = trunc_ln1118_1_fu_923_p0[0:0];

assign trunc_ln1118_2_fu_941_p0 = block_t0_5_V_q0;

assign trunc_ln1118_2_fu_941_p1 = trunc_ln1118_2_fu_941_p0[0:0];

assign trunc_ln1118_3_fu_1021_p0 = block_t0_7_V_q0;

assign trunc_ln1118_3_fu_1021_p1 = trunc_ln1118_3_fu_1021_p0[0:0];

assign trunc_ln1118_4_fu_2724_p1 = block_t0_10_V_load_reg_4789[0:0];

assign trunc_ln1118_5_fu_3258_p1 = block_t0_13_V_load_reg_4850[0:0];

assign trunc_ln1118_6_fu_1217_p0 = block_t0_14_V_q0;

assign trunc_ln1118_6_fu_1217_p1 = trunc_ln1118_6_fu_1217_p0[0:0];

assign trunc_ln1118_fu_755_p0 = block_t0_0_V_q0;

assign trunc_ln1118_fu_755_p1 = trunc_ln1118_fu_755_p0[0:0];

assign trunc_ln1192_1_fu_2419_p3 = {{trunc_ln1192_44_reg_4751}, {3'd0}};

assign trunc_ln1192_2_fu_2741_p3 = {{trunc_ln1192_48_reg_4801}, {3'd0}};

assign trunc_ln1192_3_fu_2981_p3 = {{trunc_ln1192_49_reg_4817}, {3'd0}};

assign trunc_ln1192_41_fu_915_p1 = sub_ln1118_fu_909_p2[0:0];

assign trunc_ln1192_42_fu_919_p1 = sub_ln1118_fu_909_p2[17:0];

assign trunc_ln1192_43_fu_937_p0 = block_t0_4_V_q0;

assign trunc_ln1192_43_fu_937_p1 = trunc_ln1192_43_fu_937_p0[14:0];

assign trunc_ln1192_44_fu_1035_p0 = block_t0_7_V_q0;

assign trunc_ln1192_44_fu_1035_p1 = trunc_ln1192_44_fu_1035_p0[14:0];

assign trunc_ln1192_45_fu_2647_p1 = mul_ln1118_fu_2641_p2[19:0];

assign trunc_ln1192_46_fu_2651_p1 = mul_ln1118_fu_2641_p2[0:0];

assign trunc_ln1192_47_fu_2655_p1 = mul_ln1118_fu_2641_p2[17:0];

assign trunc_ln1192_48_fu_1115_p0 = block_t0_10_V_q0;

assign trunc_ln1192_48_fu_1115_p1 = trunc_ln1192_48_fu_1115_p0[14:0];

assign trunc_ln1192_49_fu_1137_p1 = block_t0_11_V_q0[14:0];

assign trunc_ln1192_4_fu_3500_p3 = {{trunc_ln1192_50_reg_4878}, {3'd0}};

assign trunc_ln1192_50_fu_1231_p0 = block_t0_14_V_q0;

assign trunc_ln1192_50_fu_1231_p1 = trunc_ln1192_50_fu_1231_p0[14:0];

assign trunc_ln1192_51_fu_1265_p1 = sub_ln1118_1_fu_1259_p2[17:0];

assign trunc_ln1192_fu_769_p0 = block_t0_0_V_q0;

assign trunc_ln1192_fu_769_p1 = trunc_ln1192_fu_769_p0[14:0];

assign trunc_ln1192_s_fu_1903_p3 = {{trunc_ln1192_43_reg_4686}, {3'd0}};

assign trunc_ln1_fu_1351_p4 = {{add_ln1192_106_fu_1331_p2[16:1]}};

assign trunc_ln708_121_fu_1700_p4 = {{add_ln1192_109_fu_1682_p2[16:1]}};

assign trunc_ln708_122_fu_1933_p4 = {{add_ln1192_113_fu_1913_p2[16:1]}};

assign trunc_ln708_123_fu_2159_p4 = {{add_ln1192_116_fu_2139_p2[16:1]}};

assign trunc_ln708_125_fu_2449_p4 = {{add_ln1192_120_fu_2429_p2[16:1]}};

assign trunc_ln708_126_fu_4091_p4 = {{add_ln1192_112_fu_4073_p2[16:1]}};

assign trunc_ln708_128_fu_2771_p4 = {{add_ln1192_125_fu_2751_p2[16:1]}};

assign trunc_ln708_129_fu_3007_p4 = {{add_ln1192_128_fu_2988_p2[16:1]}};

assign trunc_ln708_131_fu_3298_p4 = {{add_ln1192_131_fu_3278_p2[16:1]}};

assign trunc_ln708_132_fu_3530_p4 = {{add_ln1192_132_fu_3510_p2[16:1]}};

assign trunc_ln708_133_fu_3737_p4 = {{add_ln1192_133_fu_3719_p2[16:1]}};

assign trunc_ln_fu_1321_p3 = {{trunc_ln1192_reg_4598}, {3'd0}};

assign xor_ln415_1_fu_3316_p2 = (trunc_ln1118_5_fu_3258_p1 ^ 1'd1);

assign xor_ln415_fu_2789_p2 = (trunc_ln1118_4_fu_2724_p1 ^ 1'd1);

assign xor_ln416_175_fu_1735_p2 = (tmp_1028_fu_1727_p3 ^ 1'd1);

assign xor_ln416_176_fu_1968_p2 = (tmp_1033_fu_1960_p3 ^ 1'd1);

assign xor_ln416_177_fu_2194_p2 = (tmp_1038_fu_2186_p3 ^ 1'd1);

assign xor_ln416_178_fu_2484_p2 = (tmp_1046_fu_2476_p3 ^ 1'd1);

assign xor_ln416_179_fu_4126_p2 = (tmp_1051_fu_4118_p3 ^ 1'd1);

assign xor_ln416_180_fu_2813_p2 = (tmp_1058_fu_2805_p3 ^ 1'd1);

assign xor_ln416_181_fu_3039_p2 = (tmp_1063_fu_3031_p3 ^ 1'd1);

assign xor_ln416_182_fu_3340_p2 = (tmp_1070_fu_3332_p3 ^ 1'd1);

assign xor_ln416_183_fu_3565_p2 = (tmp_1076_fu_3557_p3 ^ 1'd1);

assign xor_ln416_184_fu_3769_p2 = (tmp_1081_fu_3761_p3 ^ 1'd1);

assign xor_ln416_fu_1386_p2 = (tmp_1019_fu_1378_p3 ^ 1'd1);

assign xor_ln779_112_fu_1809_p2 = (tmp_1030_fu_1801_p3 ^ 1'd1);

assign xor_ln779_113_fu_2042_p2 = (tmp_1035_fu_2034_p3 ^ 1'd1);

assign xor_ln779_114_fu_2260_p2 = (tmp_1041_fu_2252_p3 ^ 1'd1);

assign xor_ln779_115_fu_2558_p2 = (tmp_1048_fu_2550_p3 ^ 1'd1);

assign xor_ln779_116_fu_4200_p2 = (tmp_1053_fu_4192_p3 ^ 1'd1);

assign xor_ln779_117_fu_2887_p2 = (tmp_1060_fu_2879_p3 ^ 1'd1);

assign xor_ln779_118_fu_3113_p2 = (tmp_1065_fu_3105_p3 ^ 1'd1);

assign xor_ln779_119_fu_3406_p2 = (tmp_1073_fu_3398_p3 ^ 1'd1);

assign xor_ln779_120_fu_3639_p2 = (tmp_1078_fu_3631_p3 ^ 1'd1);

assign xor_ln779_121_fu_3843_p2 = (tmp_1083_fu_3835_p3 ^ 1'd1);

assign xor_ln779_fu_1460_p2 = (tmp_1021_fu_1452_p3 ^ 1'd1);

assign xor_ln785_10_fu_2913_p2 = (select_ln777_62_fu_2871_p3 ^ 1'd1);

assign xor_ln785_11_fu_3139_p2 = (select_ln777_63_fu_3097_p3 ^ 1'd1);

assign xor_ln785_13_fu_3432_p2 = (select_ln777_64_fu_3390_p3 ^ 1'd1);

assign xor_ln785_14_fu_3665_p2 = (select_ln777_65_fu_3623_p3 ^ 1'd1);

assign xor_ln785_15_fu_3869_p2 = (select_ln777_66_fu_3827_p3 ^ 1'd1);

assign xor_ln785_241_fu_1498_p2 = (tmp_1017_fu_1343_p3 ^ 1'd1);

assign xor_ln785_242_fu_1544_p2 = (tmp_1022_reg_4603 ^ 1'd1);

assign xor_ln785_243_fu_1620_p2 = (tmp_1024_reg_4631 ^ 1'd1);

assign xor_ln785_244_fu_1847_p2 = (tmp_1026_fu_1692_p3 ^ 1'd1);

assign xor_ln785_245_fu_2080_p2 = (tmp_1031_fu_1925_p3 ^ 1'd1);

assign xor_ln785_246_fu_2298_p2 = (tmp_1036_fu_2151_p3 ^ 1'd1);

assign xor_ln785_247_fu_2344_p2 = (tmp_1042_reg_4707 ^ 1'd1);

assign xor_ln785_248_fu_2596_p2 = (tmp_1044_fu_2441_p3 ^ 1'd1);

assign xor_ln785_249_fu_4238_p2 = (tmp_1049_fu_4083_p3 ^ 1'd1);

assign xor_ln785_250_fu_2663_p2 = (tmp_1054_reg_4761 ^ 1'd1);

assign xor_ln785_251_fu_2925_p2 = (tmp_1056_fu_2763_p3 ^ 1'd1);

assign xor_ln785_252_fu_3151_p2 = (tmp_1061_fu_2999_p3 ^ 1'd1);

assign xor_ln785_253_fu_3197_p2 = (tmp_1066_reg_4822 ^ 1'd1);

assign xor_ln785_254_fu_3444_p2 = (tmp_1068_fu_3290_p3 ^ 1'd1);

assign xor_ln785_255_fu_3677_p2 = (tmp_1074_fu_3522_p3 ^ 1'd1);

assign xor_ln785_256_fu_3881_p2 = (tmp_1079_fu_3729_p3 ^ 1'd1);

assign xor_ln785_3_fu_1835_p2 = (select_ln777_57_fu_1793_p3 ^ 1'd1);

assign xor_ln785_4_fu_2068_p2 = (select_ln777_58_fu_2026_p3 ^ 1'd1);

assign xor_ln785_5_fu_2286_p2 = (select_ln777_59_fu_2244_p3 ^ 1'd1);

assign xor_ln785_7_fu_2584_p2 = (select_ln777_60_fu_2542_p3 ^ 1'd1);

assign xor_ln785_8_fu_4226_p2 = (select_ln777_61_fu_4184_p3 ^ 1'd1);

assign xor_ln785_fu_1486_p2 = (select_ln777_fu_1444_p3 ^ 1'd1);

assign xor_ln786_12_fu_3212_p2 = (1'd1 ^ and_ln786_12_fu_3208_p2);

assign xor_ln786_169_fu_1871_p2 = (or_ln786_144_fu_1865_p2 ^ 1'd1);

assign xor_ln786_170_fu_2104_p2 = (or_ln786_145_fu_2098_p2 ^ 1'd1);

assign xor_ln786_171_fu_2322_p2 = (or_ln786_146_fu_2316_p2 ^ 1'd1);

assign xor_ln786_172_fu_2620_p2 = (or_ln786_147_fu_2614_p2 ^ 1'd1);

assign xor_ln786_173_fu_4262_p2 = (or_ln786_148_fu_4256_p2 ^ 1'd1);

assign xor_ln786_174_fu_2949_p2 = (or_ln786_149_fu_2943_p2 ^ 1'd1);

assign xor_ln786_175_fu_3175_p2 = (or_ln786_150_fu_3169_p2 ^ 1'd1);

assign xor_ln786_176_fu_3468_p2 = (or_ln786_151_fu_3462_p2 ^ 1'd1);

assign xor_ln786_177_fu_3701_p2 = (or_ln786_152_fu_3695_p2 ^ 1'd1);

assign xor_ln786_178_fu_3905_p2 = (or_ln786_153_fu_3899_p2 ^ 1'd1);

assign xor_ln786_1_fu_1559_p2 = (1'd1 ^ and_ln786_1_fu_1555_p2);

assign xor_ln786_2_fu_1636_p2 = (1'd1 ^ and_ln786_2_fu_1631_p2);

assign xor_ln786_6_fu_2359_p2 = (1'd1 ^ and_ln786_6_fu_2355_p2);

assign xor_ln786_9_fu_2678_p2 = (1'd1 ^ and_ln786_9_fu_2674_p2);

assign xor_ln786_fu_1522_p2 = (or_ln786_fu_1516_p2 ^ 1'd1);

assign zext_ln203_4_fu_1289_p1 = select_ln76_reg_4479_pp0_iter2_reg;

assign zext_ln203_5_fu_1298_p1 = add_ln203_2_fu_1292_p2;

assign zext_ln203_fu_1279_p1 = tmp_1015_fu_1272_p3;

assign zext_ln415_122_fu_1718_p1 = trunc_ln1192_41_reg_4660;

assign zext_ln415_123_fu_1951_p1 = trunc_ln1118_1_reg_4675;

assign zext_ln415_124_fu_2177_p1 = trunc_ln1118_2_reg_4696;

assign zext_ln415_125_fu_2467_p1 = trunc_ln1118_3_reg_4740;

assign zext_ln415_126_fu_4109_p1 = trunc_ln1192_46_reg_5068;

assign zext_ln415_127_fu_2795_p1 = xor_ln415_fu_2789_p2;

assign zext_ln415_128_fu_3322_p1 = xor_ln415_1_fu_3316_p2;

assign zext_ln415_129_fu_3548_p1 = trunc_ln1118_6_reg_4867;

assign zext_ln415_fu_1369_p1 = trunc_ln1118_reg_4587;

assign zext_ln446_4_fu_726_p1 = col_reg_4496;

assign zext_ln446_5_fu_735_p1 = add_ln446_2_fu_729_p2;

assign zext_ln446_fu_716_p1 = tmp_1016_fu_708_p3;

assign zext_ln76_1_fu_704_p1 = select_ln76_2_fu_699_p3;

assign zext_ln76_fu_1269_p1 = select_ln76_1_reg_4484_pp0_iter2_reg;

always @ (posedge ap_clk) begin
    add_ln1192_127_reg_4811[0] <= 1'b1;
    sub_ln1118_1_reg_4883[0] <= 1'b0;
    trunc_ln1192_51_reg_4888[0] <= 1'b0;
    zext_ln203_5_reg_4893[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln203_5_reg_4893_pp0_iter4_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
end

endmodule //bn1
