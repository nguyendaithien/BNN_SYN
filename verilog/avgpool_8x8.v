// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module avgpool_8x8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inputs_0_0_V_address0,
        inputs_0_0_V_ce0,
        inputs_0_0_V_q0,
        inputs_0_1_V_address0,
        inputs_0_1_V_ce0,
        inputs_0_1_V_q0,
        inputs_0_2_V_address0,
        inputs_0_2_V_ce0,
        inputs_0_2_V_q0,
        inputs_0_3_V_address0,
        inputs_0_3_V_ce0,
        inputs_0_3_V_q0,
        inputs_0_4_V_address0,
        inputs_0_4_V_ce0,
        inputs_0_4_V_q0,
        inputs_0_5_V_address0,
        inputs_0_5_V_ce0,
        inputs_0_5_V_q0,
        inputs_0_6_V_address0,
        inputs_0_6_V_ce0,
        inputs_0_6_V_q0,
        inputs_0_7_V_address0,
        inputs_0_7_V_ce0,
        inputs_0_7_V_q0,
        inputs_0_8_V_address0,
        inputs_0_8_V_ce0,
        inputs_0_8_V_q0,
        inputs_0_9_V_address0,
        inputs_0_9_V_ce0,
        inputs_0_9_V_q0,
        inputs_0_10_V_address0,
        inputs_0_10_V_ce0,
        inputs_0_10_V_q0,
        inputs_0_11_V_address0,
        inputs_0_11_V_ce0,
        inputs_0_11_V_q0,
        inputs_0_12_V_address0,
        inputs_0_12_V_ce0,
        inputs_0_12_V_q0,
        inputs_0_13_V_address0,
        inputs_0_13_V_ce0,
        inputs_0_13_V_q0,
        inputs_0_14_V_address0,
        inputs_0_14_V_ce0,
        inputs_0_14_V_q0,
        inputs_0_15_V_address0,
        inputs_0_15_V_ce0,
        inputs_0_15_V_q0,
        inputs_1_0_V_address0,
        inputs_1_0_V_ce0,
        inputs_1_0_V_q0,
        inputs_1_1_V_address0,
        inputs_1_1_V_ce0,
        inputs_1_1_V_q0,
        inputs_1_2_V_address0,
        inputs_1_2_V_ce0,
        inputs_1_2_V_q0,
        inputs_1_3_V_address0,
        inputs_1_3_V_ce0,
        inputs_1_3_V_q0,
        inputs_1_4_V_address0,
        inputs_1_4_V_ce0,
        inputs_1_4_V_q0,
        inputs_1_5_V_address0,
        inputs_1_5_V_ce0,
        inputs_1_5_V_q0,
        inputs_1_6_V_address0,
        inputs_1_6_V_ce0,
        inputs_1_6_V_q0,
        inputs_1_7_V_address0,
        inputs_1_7_V_ce0,
        inputs_1_7_V_q0,
        inputs_1_8_V_address0,
        inputs_1_8_V_ce0,
        inputs_1_8_V_q0,
        inputs_1_9_V_address0,
        inputs_1_9_V_ce0,
        inputs_1_9_V_q0,
        inputs_1_10_V_address0,
        inputs_1_10_V_ce0,
        inputs_1_10_V_q0,
        inputs_1_11_V_address0,
        inputs_1_11_V_ce0,
        inputs_1_11_V_q0,
        inputs_1_12_V_address0,
        inputs_1_12_V_ce0,
        inputs_1_12_V_q0,
        inputs_1_13_V_address0,
        inputs_1_13_V_ce0,
        inputs_1_13_V_q0,
        inputs_1_14_V_address0,
        inputs_1_14_V_ce0,
        inputs_1_14_V_q0,
        inputs_1_15_V_address0,
        inputs_1_15_V_ce0,
        inputs_1_15_V_q0,
        inputs_2_0_V_address0,
        inputs_2_0_V_ce0,
        inputs_2_0_V_q0,
        inputs_2_1_V_address0,
        inputs_2_1_V_ce0,
        inputs_2_1_V_q0,
        inputs_2_2_V_address0,
        inputs_2_2_V_ce0,
        inputs_2_2_V_q0,
        inputs_2_3_V_address0,
        inputs_2_3_V_ce0,
        inputs_2_3_V_q0,
        inputs_2_4_V_address0,
        inputs_2_4_V_ce0,
        inputs_2_4_V_q0,
        inputs_2_5_V_address0,
        inputs_2_5_V_ce0,
        inputs_2_5_V_q0,
        inputs_2_6_V_address0,
        inputs_2_6_V_ce0,
        inputs_2_6_V_q0,
        inputs_2_7_V_address0,
        inputs_2_7_V_ce0,
        inputs_2_7_V_q0,
        inputs_2_8_V_address0,
        inputs_2_8_V_ce0,
        inputs_2_8_V_q0,
        inputs_2_9_V_address0,
        inputs_2_9_V_ce0,
        inputs_2_9_V_q0,
        inputs_2_10_V_address0,
        inputs_2_10_V_ce0,
        inputs_2_10_V_q0,
        inputs_2_11_V_address0,
        inputs_2_11_V_ce0,
        inputs_2_11_V_q0,
        inputs_2_12_V_address0,
        inputs_2_12_V_ce0,
        inputs_2_12_V_q0,
        inputs_2_13_V_address0,
        inputs_2_13_V_ce0,
        inputs_2_13_V_q0,
        inputs_2_14_V_address0,
        inputs_2_14_V_ce0,
        inputs_2_14_V_q0,
        inputs_2_15_V_address0,
        inputs_2_15_V_ce0,
        inputs_2_15_V_q0,
        inputs_3_0_V_address0,
        inputs_3_0_V_ce0,
        inputs_3_0_V_q0,
        inputs_3_1_V_address0,
        inputs_3_1_V_ce0,
        inputs_3_1_V_q0,
        inputs_3_2_V_address0,
        inputs_3_2_V_ce0,
        inputs_3_2_V_q0,
        inputs_3_3_V_address0,
        inputs_3_3_V_ce0,
        inputs_3_3_V_q0,
        inputs_3_4_V_address0,
        inputs_3_4_V_ce0,
        inputs_3_4_V_q0,
        inputs_3_5_V_address0,
        inputs_3_5_V_ce0,
        inputs_3_5_V_q0,
        inputs_3_6_V_address0,
        inputs_3_6_V_ce0,
        inputs_3_6_V_q0,
        inputs_3_7_V_address0,
        inputs_3_7_V_ce0,
        inputs_3_7_V_q0,
        inputs_3_8_V_address0,
        inputs_3_8_V_ce0,
        inputs_3_8_V_q0,
        inputs_3_9_V_address0,
        inputs_3_9_V_ce0,
        inputs_3_9_V_q0,
        inputs_3_10_V_address0,
        inputs_3_10_V_ce0,
        inputs_3_10_V_q0,
        inputs_3_11_V_address0,
        inputs_3_11_V_ce0,
        inputs_3_11_V_q0,
        inputs_3_12_V_address0,
        inputs_3_12_V_ce0,
        inputs_3_12_V_q0,
        inputs_3_13_V_address0,
        inputs_3_13_V_ce0,
        inputs_3_13_V_q0,
        inputs_3_14_V_address0,
        inputs_3_14_V_ce0,
        inputs_3_14_V_q0,
        inputs_3_15_V_address0,
        inputs_3_15_V_ce0,
        inputs_3_15_V_q0,
        outputs_V_address0,
        outputs_V_ce0,
        outputs_V_we0,
        outputs_V_d0
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_pp1_stage0 = 8'd16;
parameter    ap_ST_fsm_state9 = 8'd32;
parameter    ap_ST_fsm_pp2_stage0 = 8'd64;
parameter    ap_ST_fsm_state12 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] inputs_0_0_V_address0;
output   inputs_0_0_V_ce0;
input  [15:0] inputs_0_0_V_q0;
output  [10:0] inputs_0_1_V_address0;
output   inputs_0_1_V_ce0;
input  [15:0] inputs_0_1_V_q0;
output  [10:0] inputs_0_2_V_address0;
output   inputs_0_2_V_ce0;
input  [15:0] inputs_0_2_V_q0;
output  [10:0] inputs_0_3_V_address0;
output   inputs_0_3_V_ce0;
input  [15:0] inputs_0_3_V_q0;
output  [10:0] inputs_0_4_V_address0;
output   inputs_0_4_V_ce0;
input  [15:0] inputs_0_4_V_q0;
output  [10:0] inputs_0_5_V_address0;
output   inputs_0_5_V_ce0;
input  [15:0] inputs_0_5_V_q0;
output  [10:0] inputs_0_6_V_address0;
output   inputs_0_6_V_ce0;
input  [15:0] inputs_0_6_V_q0;
output  [10:0] inputs_0_7_V_address0;
output   inputs_0_7_V_ce0;
input  [15:0] inputs_0_7_V_q0;
output  [10:0] inputs_0_8_V_address0;
output   inputs_0_8_V_ce0;
input  [15:0] inputs_0_8_V_q0;
output  [10:0] inputs_0_9_V_address0;
output   inputs_0_9_V_ce0;
input  [15:0] inputs_0_9_V_q0;
output  [10:0] inputs_0_10_V_address0;
output   inputs_0_10_V_ce0;
input  [15:0] inputs_0_10_V_q0;
output  [10:0] inputs_0_11_V_address0;
output   inputs_0_11_V_ce0;
input  [15:0] inputs_0_11_V_q0;
output  [10:0] inputs_0_12_V_address0;
output   inputs_0_12_V_ce0;
input  [15:0] inputs_0_12_V_q0;
output  [10:0] inputs_0_13_V_address0;
output   inputs_0_13_V_ce0;
input  [15:0] inputs_0_13_V_q0;
output  [10:0] inputs_0_14_V_address0;
output   inputs_0_14_V_ce0;
input  [15:0] inputs_0_14_V_q0;
output  [10:0] inputs_0_15_V_address0;
output   inputs_0_15_V_ce0;
input  [15:0] inputs_0_15_V_q0;
output  [10:0] inputs_1_0_V_address0;
output   inputs_1_0_V_ce0;
input  [15:0] inputs_1_0_V_q0;
output  [10:0] inputs_1_1_V_address0;
output   inputs_1_1_V_ce0;
input  [15:0] inputs_1_1_V_q0;
output  [10:0] inputs_1_2_V_address0;
output   inputs_1_2_V_ce0;
input  [15:0] inputs_1_2_V_q0;
output  [10:0] inputs_1_3_V_address0;
output   inputs_1_3_V_ce0;
input  [15:0] inputs_1_3_V_q0;
output  [10:0] inputs_1_4_V_address0;
output   inputs_1_4_V_ce0;
input  [15:0] inputs_1_4_V_q0;
output  [10:0] inputs_1_5_V_address0;
output   inputs_1_5_V_ce0;
input  [15:0] inputs_1_5_V_q0;
output  [10:0] inputs_1_6_V_address0;
output   inputs_1_6_V_ce0;
input  [15:0] inputs_1_6_V_q0;
output  [10:0] inputs_1_7_V_address0;
output   inputs_1_7_V_ce0;
input  [15:0] inputs_1_7_V_q0;
output  [10:0] inputs_1_8_V_address0;
output   inputs_1_8_V_ce0;
input  [15:0] inputs_1_8_V_q0;
output  [10:0] inputs_1_9_V_address0;
output   inputs_1_9_V_ce0;
input  [15:0] inputs_1_9_V_q0;
output  [10:0] inputs_1_10_V_address0;
output   inputs_1_10_V_ce0;
input  [15:0] inputs_1_10_V_q0;
output  [10:0] inputs_1_11_V_address0;
output   inputs_1_11_V_ce0;
input  [15:0] inputs_1_11_V_q0;
output  [10:0] inputs_1_12_V_address0;
output   inputs_1_12_V_ce0;
input  [15:0] inputs_1_12_V_q0;
output  [10:0] inputs_1_13_V_address0;
output   inputs_1_13_V_ce0;
input  [15:0] inputs_1_13_V_q0;
output  [10:0] inputs_1_14_V_address0;
output   inputs_1_14_V_ce0;
input  [15:0] inputs_1_14_V_q0;
output  [10:0] inputs_1_15_V_address0;
output   inputs_1_15_V_ce0;
input  [15:0] inputs_1_15_V_q0;
output  [10:0] inputs_2_0_V_address0;
output   inputs_2_0_V_ce0;
input  [15:0] inputs_2_0_V_q0;
output  [10:0] inputs_2_1_V_address0;
output   inputs_2_1_V_ce0;
input  [15:0] inputs_2_1_V_q0;
output  [10:0] inputs_2_2_V_address0;
output   inputs_2_2_V_ce0;
input  [15:0] inputs_2_2_V_q0;
output  [10:0] inputs_2_3_V_address0;
output   inputs_2_3_V_ce0;
input  [15:0] inputs_2_3_V_q0;
output  [10:0] inputs_2_4_V_address0;
output   inputs_2_4_V_ce0;
input  [15:0] inputs_2_4_V_q0;
output  [10:0] inputs_2_5_V_address0;
output   inputs_2_5_V_ce0;
input  [15:0] inputs_2_5_V_q0;
output  [10:0] inputs_2_6_V_address0;
output   inputs_2_6_V_ce0;
input  [15:0] inputs_2_6_V_q0;
output  [10:0] inputs_2_7_V_address0;
output   inputs_2_7_V_ce0;
input  [15:0] inputs_2_7_V_q0;
output  [10:0] inputs_2_8_V_address0;
output   inputs_2_8_V_ce0;
input  [15:0] inputs_2_8_V_q0;
output  [10:0] inputs_2_9_V_address0;
output   inputs_2_9_V_ce0;
input  [15:0] inputs_2_9_V_q0;
output  [10:0] inputs_2_10_V_address0;
output   inputs_2_10_V_ce0;
input  [15:0] inputs_2_10_V_q0;
output  [10:0] inputs_2_11_V_address0;
output   inputs_2_11_V_ce0;
input  [15:0] inputs_2_11_V_q0;
output  [10:0] inputs_2_12_V_address0;
output   inputs_2_12_V_ce0;
input  [15:0] inputs_2_12_V_q0;
output  [10:0] inputs_2_13_V_address0;
output   inputs_2_13_V_ce0;
input  [15:0] inputs_2_13_V_q0;
output  [10:0] inputs_2_14_V_address0;
output   inputs_2_14_V_ce0;
input  [15:0] inputs_2_14_V_q0;
output  [10:0] inputs_2_15_V_address0;
output   inputs_2_15_V_ce0;
input  [15:0] inputs_2_15_V_q0;
output  [10:0] inputs_3_0_V_address0;
output   inputs_3_0_V_ce0;
input  [15:0] inputs_3_0_V_q0;
output  [10:0] inputs_3_1_V_address0;
output   inputs_3_1_V_ce0;
input  [15:0] inputs_3_1_V_q0;
output  [10:0] inputs_3_2_V_address0;
output   inputs_3_2_V_ce0;
input  [15:0] inputs_3_2_V_q0;
output  [10:0] inputs_3_3_V_address0;
output   inputs_3_3_V_ce0;
input  [15:0] inputs_3_3_V_q0;
output  [10:0] inputs_3_4_V_address0;
output   inputs_3_4_V_ce0;
input  [15:0] inputs_3_4_V_q0;
output  [10:0] inputs_3_5_V_address0;
output   inputs_3_5_V_ce0;
input  [15:0] inputs_3_5_V_q0;
output  [10:0] inputs_3_6_V_address0;
output   inputs_3_6_V_ce0;
input  [15:0] inputs_3_6_V_q0;
output  [10:0] inputs_3_7_V_address0;
output   inputs_3_7_V_ce0;
input  [15:0] inputs_3_7_V_q0;
output  [10:0] inputs_3_8_V_address0;
output   inputs_3_8_V_ce0;
input  [15:0] inputs_3_8_V_q0;
output  [10:0] inputs_3_9_V_address0;
output   inputs_3_9_V_ce0;
input  [15:0] inputs_3_9_V_q0;
output  [10:0] inputs_3_10_V_address0;
output   inputs_3_10_V_ce0;
input  [15:0] inputs_3_10_V_q0;
output  [10:0] inputs_3_11_V_address0;
output   inputs_3_11_V_ce0;
input  [15:0] inputs_3_11_V_q0;
output  [10:0] inputs_3_12_V_address0;
output   inputs_3_12_V_ce0;
input  [15:0] inputs_3_12_V_q0;
output  [10:0] inputs_3_13_V_address0;
output   inputs_3_13_V_ce0;
input  [15:0] inputs_3_13_V_q0;
output  [10:0] inputs_3_14_V_address0;
output   inputs_3_14_V_ce0;
input  [15:0] inputs_3_14_V_q0;
output  [10:0] inputs_3_15_V_address0;
output   inputs_3_15_V_ce0;
input  [15:0] inputs_3_15_V_q0;
output  [5:0] outputs_V_address0;
output   outputs_V_ce0;
output   outputs_V_we0;
output  [31:0] outputs_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg inputs_0_0_V_ce0;
reg inputs_0_1_V_ce0;
reg inputs_0_2_V_ce0;
reg inputs_0_3_V_ce0;
reg inputs_0_4_V_ce0;
reg inputs_0_5_V_ce0;
reg inputs_0_6_V_ce0;
reg inputs_0_7_V_ce0;
reg inputs_0_8_V_ce0;
reg inputs_0_9_V_ce0;
reg inputs_0_10_V_ce0;
reg inputs_0_11_V_ce0;
reg inputs_0_12_V_ce0;
reg inputs_0_13_V_ce0;
reg inputs_0_14_V_ce0;
reg inputs_0_15_V_ce0;
reg inputs_1_0_V_ce0;
reg inputs_1_1_V_ce0;
reg inputs_1_2_V_ce0;
reg inputs_1_3_V_ce0;
reg inputs_1_4_V_ce0;
reg inputs_1_5_V_ce0;
reg inputs_1_6_V_ce0;
reg inputs_1_7_V_ce0;
reg inputs_1_8_V_ce0;
reg inputs_1_9_V_ce0;
reg inputs_1_10_V_ce0;
reg inputs_1_11_V_ce0;
reg inputs_1_12_V_ce0;
reg inputs_1_13_V_ce0;
reg inputs_1_14_V_ce0;
reg inputs_1_15_V_ce0;
reg inputs_2_0_V_ce0;
reg inputs_2_1_V_ce0;
reg inputs_2_2_V_ce0;
reg inputs_2_3_V_ce0;
reg inputs_2_4_V_ce0;
reg inputs_2_5_V_ce0;
reg inputs_2_6_V_ce0;
reg inputs_2_7_V_ce0;
reg inputs_2_8_V_ce0;
reg inputs_2_9_V_ce0;
reg inputs_2_10_V_ce0;
reg inputs_2_11_V_ce0;
reg inputs_2_12_V_ce0;
reg inputs_2_13_V_ce0;
reg inputs_2_14_V_ce0;
reg inputs_2_15_V_ce0;
reg inputs_3_0_V_ce0;
reg inputs_3_1_V_ce0;
reg inputs_3_2_V_ce0;
reg inputs_3_3_V_ce0;
reg inputs_3_4_V_ce0;
reg inputs_3_5_V_ce0;
reg inputs_3_6_V_ce0;
reg inputs_3_7_V_ce0;
reg inputs_3_8_V_ce0;
reg inputs_3_9_V_ce0;
reg inputs_3_10_V_ce0;
reg inputs_3_11_V_ce0;
reg inputs_3_12_V_ce0;
reg inputs_3_13_V_ce0;
reg inputs_3_14_V_ce0;
reg inputs_3_15_V_ce0;
reg outputs_V_ce0;
reg outputs_V_we0;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] indvar_flatten_reg_2380;
reg   [3:0] i_0_reg_2391;
reg   [3:0] j_0_reg_2402;
reg  signed [31:0] tmp_15_V_4_reg_2413;
reg  signed [31:0] tmp_14_V_4_reg_2425;
reg  signed [31:0] tmp_13_V_4_reg_2437;
reg  signed [31:0] tmp_12_V_4_reg_2449;
reg  signed [31:0] tmp_11_V_4_reg_2461;
reg  signed [31:0] tmp_10_V_4_reg_2473;
reg  signed [31:0] tmp_9_V_4_reg_2485;
reg  signed [31:0] tmp_8_V_4_reg_2497;
reg  signed [31:0] tmp_7_V_4_reg_2509;
reg  signed [31:0] tmp_6_V_4_reg_2521;
reg  signed [31:0] tmp_5_V_4_reg_2533;
reg  signed [31:0] tmp_4_V_4_reg_2545;
reg  signed [31:0] tmp_3_V_4_reg_2557;
reg  signed [31:0] tmp_2_V_4_reg_2569;
reg  signed [31:0] tmp_1_V_4_reg_2581;
reg  signed [31:0] tmp_0_V_4_reg_2593;
reg   [4:0] k1_0_reg_2605;
wire   [0:0] icmp_ln232_fu_2616_p2;
wire    ap_CS_fsm_state2;
wire   [2:0] tile_fu_2622_p2;
reg   [2:0] tile_reg_4529;
wire   [4:0] k_fu_2634_p2;
wire    ap_CS_fsm_state3;
wire   [1:0] trunc_ln1265_fu_2644_p1;
reg   [1:0] trunc_ln1265_reg_4545;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln237_fu_2648_p2;
reg   [0:0] icmp_ln237_reg_4566;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state6_pp1_stage0_iter1;
wire    ap_block_state7_pp1_stage0_iter2;
wire    ap_block_state8_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln237_reg_4566_pp1_iter1_reg;
reg   [0:0] icmp_ln237_reg_4566_pp1_iter2_reg;
wire   [6:0] add_ln237_fu_2654_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [3:0] select_ln241_fu_2672_p3;
reg   [3:0] select_ln241_reg_4575;
wire   [3:0] select_ln241_1_fu_2680_p3;
reg   [3:0] select_ln241_1_reg_4580;
wire   [3:0] j_fu_2688_p2;
wire   [15:0] tmp_320_fu_2791_p6;
reg   [15:0] tmp_320_reg_4912;
wire   [15:0] tmp_321_fu_2804_p6;
reg   [15:0] tmp_321_reg_4917;
wire   [15:0] tmp_322_fu_2817_p6;
reg   [15:0] tmp_322_reg_4922;
wire   [15:0] tmp_323_fu_2830_p6;
reg   [15:0] tmp_323_reg_4927;
wire   [15:0] tmp_324_fu_2843_p6;
reg   [15:0] tmp_324_reg_4932;
wire   [15:0] tmp_325_fu_2856_p6;
reg   [15:0] tmp_325_reg_4937;
wire   [15:0] tmp_326_fu_2869_p6;
reg   [15:0] tmp_326_reg_4942;
wire   [15:0] tmp_327_fu_2882_p6;
reg   [15:0] tmp_327_reg_4947;
wire   [15:0] tmp_328_fu_2895_p6;
reg   [15:0] tmp_328_reg_4952;
wire   [15:0] tmp_329_fu_2908_p6;
reg   [15:0] tmp_329_reg_4957;
wire   [15:0] tmp_330_fu_2921_p6;
reg   [15:0] tmp_330_reg_4962;
wire   [15:0] tmp_331_fu_2934_p6;
reg   [15:0] tmp_331_reg_4967;
wire   [15:0] tmp_332_fu_2947_p6;
reg   [15:0] tmp_332_reg_4972;
wire   [15:0] tmp_333_fu_2960_p6;
reg   [15:0] tmp_333_reg_4977;
wire   [15:0] tmp_334_fu_2973_p6;
reg   [15:0] tmp_334_reg_4982;
wire   [15:0] tmp_335_fu_2986_p6;
reg   [15:0] tmp_335_reg_4987;
wire   [31:0] select_ln340_369_fu_3072_p3;
reg    ap_enable_reg_pp1_iter3;
wire   [31:0] select_ln340_370_fu_3153_p3;
wire   [31:0] select_ln340_371_fu_3234_p3;
wire   [31:0] select_ln340_372_fu_3315_p3;
wire   [31:0] select_ln340_373_fu_3396_p3;
wire   [31:0] select_ln340_374_fu_3477_p3;
wire   [31:0] select_ln340_375_fu_3558_p3;
wire   [31:0] select_ln340_376_fu_3639_p3;
wire   [31:0] select_ln340_377_fu_3720_p3;
wire   [31:0] select_ln340_378_fu_3801_p3;
wire   [31:0] select_ln340_379_fu_3882_p3;
wire   [31:0] select_ln340_380_fu_3963_p3;
wire   [31:0] select_ln340_381_fu_4044_p3;
wire   [31:0] select_ln340_382_fu_4125_p3;
wire   [31:0] select_ln340_383_fu_4206_p3;
wire   [31:0] select_ln340_384_fu_4287_p3;
wire   [5:0] shl_ln_fu_4295_p3;
reg   [5:0] shl_ln_reg_5072;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln245_fu_4302_p2;
reg   [0:0] icmp_ln245_reg_5077;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state10_pp2_stage0_iter0;
wire    ap_block_state11_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [4:0] k_1_fu_4308_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [5:0] add_ln247_fu_4318_p2;
reg   [5:0] add_ln247_reg_5086;
wire  signed [26:0] select_ln1148_fu_4421_p3;
reg  signed [26:0] select_ln1148_reg_5091;
wire   [0:0] p_Result_s_fu_4429_p2;
reg   [0:0] p_Result_s_reg_5096;
reg   [0:0] p_Result_4_reg_5102;
reg   [0:0] tmp_1232_reg_5108;
wire    ap_block_pp1_stage0_subdone;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state10;
reg    ap_enable_reg_pp2_iter1;
reg   [31:0] tmp_15_V_0_reg_1109;
wire    ap_CS_fsm_state12;
reg   [31:0] tmp_14_V_0_reg_1121;
reg   [31:0] tmp_13_V_0_reg_1133;
reg   [31:0] tmp_12_V_0_reg_1145;
reg   [31:0] tmp_11_V_0_reg_1157;
reg   [31:0] tmp_10_V_0_reg_1169;
reg   [31:0] tmp_9_V_0_reg_1181;
reg   [31:0] tmp_8_V_0_reg_1193;
reg   [31:0] tmp_7_V_0_reg_1205;
reg   [31:0] tmp_6_V_0_reg_1217;
reg   [31:0] tmp_5_V_0_reg_1229;
reg   [31:0] tmp_4_V_0_reg_1241;
reg   [31:0] tmp_3_V_0_reg_1253;
reg   [31:0] tmp_2_V_0_reg_1265;
reg   [31:0] tmp_1_V_0_reg_1277;
reg   [31:0] tmp_0_V_0_reg_1289;
reg   [2:0] tile_0_reg_1301;
reg   [31:0] tmp_15_V_116_reg_1313;
reg   [31:0] ap_phi_mux_tmp_15_V_2_phi_fu_1504_p32;
wire   [0:0] icmp_ln233_fu_2628_p2;
reg   [31:0] tmp_14_V_115_reg_1324;
reg   [31:0] ap_phi_mux_tmp_14_V_2_phi_fu_1559_p32;
reg   [31:0] tmp_13_V_114_reg_1335;
reg   [31:0] ap_phi_mux_tmp_13_V_2_phi_fu_1614_p32;
reg   [31:0] tmp_12_V_113_reg_1346;
reg   [31:0] ap_phi_mux_tmp_12_V_2_phi_fu_1669_p32;
reg   [31:0] tmp_11_V_112_reg_1357;
reg   [31:0] ap_phi_mux_tmp_11_V_2_phi_fu_1724_p32;
reg   [31:0] tmp_10_V_111_reg_1368;
reg   [31:0] ap_phi_mux_tmp_10_V_2_phi_fu_1779_p32;
reg   [31:0] tmp_9_V_110_reg_1379;
reg   [31:0] ap_phi_mux_tmp_9_V_2_phi_fu_1834_p32;
reg   [31:0] tmp_8_V_19_reg_1390;
reg   [31:0] ap_phi_mux_tmp_8_V_2_phi_fu_1889_p32;
reg   [31:0] tmp_7_V_18_reg_1401;
reg   [31:0] ap_phi_mux_tmp_7_V_2_phi_fu_1944_p32;
reg   [31:0] tmp_6_V_17_reg_1412;
reg   [31:0] ap_phi_mux_tmp_6_V_2_phi_fu_1999_p32;
reg   [31:0] tmp_5_V_16_reg_1423;
reg   [31:0] ap_phi_mux_tmp_5_V_2_phi_fu_2054_p32;
reg   [31:0] tmp_4_V_15_reg_1434;
reg   [31:0] ap_phi_mux_tmp_4_V_2_phi_fu_2109_p32;
reg   [31:0] tmp_3_V_14_reg_1445;
reg   [31:0] ap_phi_mux_tmp_3_V_2_phi_fu_2164_p32;
reg   [31:0] tmp_2_V_13_reg_1456;
reg   [31:0] ap_phi_mux_tmp_2_V_2_phi_fu_2219_p32;
reg   [31:0] tmp_1_V_12_reg_1467;
reg   [31:0] ap_phi_mux_tmp_1_V_2_phi_fu_2274_p32;
reg   [31:0] tmp_0_V_11_reg_1478;
reg   [31:0] ap_phi_mux_tmp_0_V_2_phi_fu_2329_p32;
reg   [4:0] k_0_reg_1489;
wire   [3:0] trunc_ln203_fu_2640_p1;
reg   [3:0] ap_phi_mux_i_0_phi_fu_2395_p4;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln1265_3_fu_2723_p1;
wire   [63:0] zext_ln247_fu_4451_p1;
wire    ap_block_pp2_stage0;
wire   [0:0] icmp_ln238_fu_2666_p2;
wire   [3:0] i_fu_2660_p2;
wire   [8:0] tmp_450_fu_2697_p3;
wire   [9:0] zext_ln1265_fu_2694_p1;
wire   [9:0] zext_ln1265_1_fu_2704_p1;
wire   [9:0] add_ln1265_fu_2708_p2;
wire   [9:0] zext_ln1265_2_fu_2714_p1;
wire   [9:0] add_ln1265_1_fu_2717_p2;
wire  signed [30:0] shl_ln3_fu_3003_p3;
wire  signed [32:0] sext_ln728_fu_3010_p1;
wire  signed [32:0] sext_ln703_fu_2999_p1;
wire   [32:0] add_ln1192_fu_3018_p2;
wire  signed [31:0] sext_ln1192_fu_3014_p1;
wire   [31:0] tmp_0_V_fu_3032_p2;
wire   [0:0] tmp_1198_fu_3024_p3;
wire   [0:0] tmp_1199_fu_3038_p3;
wire   [0:0] xor_ln785_272_fu_3046_p2;
wire   [0:0] and_ln785_fu_3052_p2;
wire   [0:0] xor_ln340_fu_3058_p2;
wire   [31:0] select_ln785_fu_3064_p3;
wire  signed [30:0] shl_ln728_s_fu_3084_p3;
wire  signed [32:0] sext_ln728_90_fu_3091_p1;
wire  signed [32:0] sext_ln703_95_fu_3080_p1;
wire   [32:0] add_ln1192_135_fu_3099_p2;
wire  signed [31:0] sext_ln1192_39_fu_3095_p1;
wire   [31:0] tmp_1_V_fu_3113_p2;
wire   [0:0] tmp_1200_fu_3105_p3;
wire   [0:0] tmp_1201_fu_3119_p3;
wire   [0:0] xor_ln785_273_fu_3127_p2;
wire   [0:0] and_ln785_153_fu_3133_p2;
wire   [0:0] xor_ln340_111_fu_3139_p2;
wire   [31:0] select_ln785_20_fu_3145_p3;
wire  signed [30:0] shl_ln728_93_fu_3165_p3;
wire  signed [32:0] sext_ln728_91_fu_3172_p1;
wire  signed [32:0] sext_ln703_96_fu_3161_p1;
wire   [32:0] add_ln1192_136_fu_3180_p2;
wire  signed [31:0] sext_ln1192_40_fu_3176_p1;
wire   [31:0] tmp_2_V_fu_3194_p2;
wire   [0:0] tmp_1202_fu_3186_p3;
wire   [0:0] tmp_1203_fu_3200_p3;
wire   [0:0] xor_ln785_274_fu_3208_p2;
wire   [0:0] and_ln785_154_fu_3214_p2;
wire   [0:0] xor_ln340_112_fu_3220_p2;
wire   [31:0] select_ln785_21_fu_3226_p3;
wire  signed [30:0] shl_ln728_94_fu_3246_p3;
wire  signed [32:0] sext_ln728_92_fu_3253_p1;
wire  signed [32:0] sext_ln703_97_fu_3242_p1;
wire   [32:0] add_ln1192_137_fu_3261_p2;
wire  signed [31:0] sext_ln1192_41_fu_3257_p1;
wire   [31:0] tmp_3_V_fu_3275_p2;
wire   [0:0] tmp_1204_fu_3267_p3;
wire   [0:0] tmp_1205_fu_3281_p3;
wire   [0:0] xor_ln785_275_fu_3289_p2;
wire   [0:0] and_ln785_155_fu_3295_p2;
wire   [0:0] xor_ln340_113_fu_3301_p2;
wire   [31:0] select_ln785_22_fu_3307_p3;
wire  signed [30:0] shl_ln728_95_fu_3327_p3;
wire  signed [32:0] sext_ln728_93_fu_3334_p1;
wire  signed [32:0] sext_ln703_98_fu_3323_p1;
wire   [32:0] add_ln1192_138_fu_3342_p2;
wire  signed [31:0] sext_ln1192_42_fu_3338_p1;
wire   [31:0] tmp_4_V_fu_3356_p2;
wire   [0:0] tmp_1206_fu_3348_p3;
wire   [0:0] tmp_1207_fu_3362_p3;
wire   [0:0] xor_ln785_276_fu_3370_p2;
wire   [0:0] and_ln785_156_fu_3376_p2;
wire   [0:0] xor_ln340_114_fu_3382_p2;
wire   [31:0] select_ln785_23_fu_3388_p3;
wire  signed [30:0] shl_ln728_96_fu_3408_p3;
wire  signed [32:0] sext_ln728_94_fu_3415_p1;
wire  signed [32:0] sext_ln703_99_fu_3404_p1;
wire   [32:0] add_ln1192_139_fu_3423_p2;
wire  signed [31:0] sext_ln1192_43_fu_3419_p1;
wire   [31:0] tmp_5_V_fu_3437_p2;
wire   [0:0] tmp_1208_fu_3429_p3;
wire   [0:0] tmp_1209_fu_3443_p3;
wire   [0:0] xor_ln785_277_fu_3451_p2;
wire   [0:0] and_ln785_157_fu_3457_p2;
wire   [0:0] xor_ln340_115_fu_3463_p2;
wire   [31:0] select_ln785_24_fu_3469_p3;
wire  signed [30:0] shl_ln728_97_fu_3489_p3;
wire  signed [32:0] sext_ln728_95_fu_3496_p1;
wire  signed [32:0] sext_ln703_100_fu_3485_p1;
wire   [32:0] add_ln1192_140_fu_3504_p2;
wire  signed [31:0] sext_ln1192_44_fu_3500_p1;
wire   [31:0] tmp_6_V_fu_3518_p2;
wire   [0:0] tmp_1210_fu_3510_p3;
wire   [0:0] tmp_1211_fu_3524_p3;
wire   [0:0] xor_ln785_278_fu_3532_p2;
wire   [0:0] and_ln785_158_fu_3538_p2;
wire   [0:0] xor_ln340_116_fu_3544_p2;
wire   [31:0] select_ln785_25_fu_3550_p3;
wire  signed [30:0] shl_ln728_98_fu_3570_p3;
wire  signed [32:0] sext_ln728_96_fu_3577_p1;
wire  signed [32:0] sext_ln703_101_fu_3566_p1;
wire   [32:0] add_ln1192_141_fu_3585_p2;
wire  signed [31:0] sext_ln1192_45_fu_3581_p1;
wire   [31:0] tmp_7_V_fu_3599_p2;
wire   [0:0] tmp_1212_fu_3591_p3;
wire   [0:0] tmp_1213_fu_3605_p3;
wire   [0:0] xor_ln785_279_fu_3613_p2;
wire   [0:0] and_ln785_159_fu_3619_p2;
wire   [0:0] xor_ln340_117_fu_3625_p2;
wire   [31:0] select_ln785_26_fu_3631_p3;
wire  signed [30:0] shl_ln728_99_fu_3651_p3;
wire  signed [32:0] sext_ln728_97_fu_3658_p1;
wire  signed [32:0] sext_ln703_102_fu_3647_p1;
wire   [32:0] add_ln1192_142_fu_3666_p2;
wire  signed [31:0] sext_ln1192_46_fu_3662_p1;
wire   [31:0] tmp_8_V_fu_3680_p2;
wire   [0:0] tmp_1214_fu_3672_p3;
wire   [0:0] tmp_1215_fu_3686_p3;
wire   [0:0] xor_ln785_280_fu_3694_p2;
wire   [0:0] and_ln785_160_fu_3700_p2;
wire   [0:0] xor_ln340_118_fu_3706_p2;
wire   [31:0] select_ln785_27_fu_3712_p3;
wire  signed [30:0] shl_ln728_100_fu_3732_p3;
wire  signed [32:0] sext_ln728_98_fu_3739_p1;
wire  signed [32:0] sext_ln703_103_fu_3728_p1;
wire   [32:0] add_ln1192_143_fu_3747_p2;
wire  signed [31:0] sext_ln1192_47_fu_3743_p1;
wire   [31:0] tmp_9_V_fu_3761_p2;
wire   [0:0] tmp_1216_fu_3753_p3;
wire   [0:0] tmp_1217_fu_3767_p3;
wire   [0:0] xor_ln785_281_fu_3775_p2;
wire   [0:0] and_ln785_161_fu_3781_p2;
wire   [0:0] xor_ln340_119_fu_3787_p2;
wire   [31:0] select_ln785_28_fu_3793_p3;
wire  signed [30:0] shl_ln728_101_fu_3813_p3;
wire  signed [32:0] sext_ln728_99_fu_3820_p1;
wire  signed [32:0] sext_ln703_104_fu_3809_p1;
wire   [32:0] add_ln1192_144_fu_3828_p2;
wire  signed [31:0] sext_ln1192_48_fu_3824_p1;
wire   [31:0] tmp_10_V_fu_3842_p2;
wire   [0:0] tmp_1218_fu_3834_p3;
wire   [0:0] tmp_1219_fu_3848_p3;
wire   [0:0] xor_ln785_282_fu_3856_p2;
wire   [0:0] and_ln785_162_fu_3862_p2;
wire   [0:0] xor_ln340_120_fu_3868_p2;
wire   [31:0] select_ln785_29_fu_3874_p3;
wire  signed [30:0] shl_ln728_102_fu_3894_p3;
wire  signed [32:0] sext_ln728_100_fu_3901_p1;
wire  signed [32:0] sext_ln703_105_fu_3890_p1;
wire   [32:0] add_ln1192_145_fu_3909_p2;
wire  signed [31:0] sext_ln1192_49_fu_3905_p1;
wire   [31:0] tmp_11_V_fu_3923_p2;
wire   [0:0] tmp_1220_fu_3915_p3;
wire   [0:0] tmp_1221_fu_3929_p3;
wire   [0:0] xor_ln785_283_fu_3937_p2;
wire   [0:0] and_ln785_163_fu_3943_p2;
wire   [0:0] xor_ln340_121_fu_3949_p2;
wire   [31:0] select_ln785_30_fu_3955_p3;
wire  signed [30:0] shl_ln728_103_fu_3975_p3;
wire  signed [32:0] sext_ln728_101_fu_3982_p1;
wire  signed [32:0] sext_ln703_106_fu_3971_p1;
wire   [32:0] add_ln1192_146_fu_3990_p2;
wire  signed [31:0] sext_ln1192_50_fu_3986_p1;
wire   [31:0] tmp_12_V_fu_4004_p2;
wire   [0:0] tmp_1222_fu_3996_p3;
wire   [0:0] tmp_1223_fu_4010_p3;
wire   [0:0] xor_ln785_284_fu_4018_p2;
wire   [0:0] and_ln785_164_fu_4024_p2;
wire   [0:0] xor_ln340_122_fu_4030_p2;
wire   [31:0] select_ln785_31_fu_4036_p3;
wire  signed [30:0] shl_ln728_104_fu_4056_p3;
wire  signed [32:0] sext_ln728_102_fu_4063_p1;
wire  signed [32:0] sext_ln703_107_fu_4052_p1;
wire   [32:0] add_ln1192_147_fu_4071_p2;
wire  signed [31:0] sext_ln1192_51_fu_4067_p1;
wire   [31:0] tmp_13_V_fu_4085_p2;
wire   [0:0] tmp_1224_fu_4077_p3;
wire   [0:0] tmp_1225_fu_4091_p3;
wire   [0:0] xor_ln785_285_fu_4099_p2;
wire   [0:0] and_ln785_165_fu_4105_p2;
wire   [0:0] xor_ln340_123_fu_4111_p2;
wire   [31:0] select_ln785_32_fu_4117_p3;
wire  signed [30:0] shl_ln728_105_fu_4137_p3;
wire  signed [32:0] sext_ln728_103_fu_4144_p1;
wire  signed [32:0] sext_ln703_108_fu_4133_p1;
wire   [32:0] add_ln1192_148_fu_4152_p2;
wire  signed [31:0] sext_ln1192_52_fu_4148_p1;
wire   [31:0] tmp_14_V_fu_4166_p2;
wire   [0:0] tmp_1226_fu_4158_p3;
wire   [0:0] tmp_1227_fu_4172_p3;
wire   [0:0] xor_ln785_286_fu_4180_p2;
wire   [0:0] and_ln785_166_fu_4186_p2;
wire   [0:0] xor_ln340_124_fu_4192_p2;
wire   [31:0] select_ln785_33_fu_4198_p3;
wire  signed [30:0] shl_ln728_106_fu_4218_p3;
wire  signed [32:0] sext_ln728_104_fu_4225_p1;
wire  signed [32:0] sext_ln703_109_fu_4214_p1;
wire   [32:0] add_ln1192_149_fu_4233_p2;
wire  signed [31:0] sext_ln1192_53_fu_4229_p1;
wire   [31:0] tmp_15_V_fu_4247_p2;
wire   [0:0] tmp_1228_fu_4239_p3;
wire   [0:0] tmp_1229_fu_4253_p3;
wire   [0:0] xor_ln785_287_fu_4261_p2;
wire   [0:0] and_ln785_167_fu_4267_p2;
wire   [0:0] xor_ln340_125_fu_4273_p2;
wire   [31:0] select_ln785_34_fu_4279_p3;
wire   [5:0] zext_ln245_fu_4314_p1;
wire   [3:0] p_Val2_s_fu_4327_p17;
wire   [31:0] p_Val2_s_fu_4327_p18;
wire   [53:0] t_V_fu_4365_p3;
wire   [53:0] sub_ln1148_fu_4381_p2;
wire   [25:0] tmp_451_fu_4387_p4;
wire   [26:0] zext_ln1148_fu_4397_p1;
wire   [25:0] tmp_452_fu_4407_p4;
wire   [0:0] tmp_1230_fu_4373_p3;
wire   [26:0] sub_ln1148_32_fu_4401_p2;
wire   [26:0] zext_ln1148_32_fu_4417_p1;
wire   [0:0] or_ln785_fu_4458_p2;
wire   [0:0] xor_ln785_fu_4462_p2;
wire   [0:0] and_ln786_fu_4473_p2;
wire   [0:0] xor_ln786_fu_4477_p2;
wire   [0:0] underflow_fu_4483_p2;
wire   [0:0] overflow_fu_4467_p2;
wire   [0:0] or_ln340_fu_4488_p2;
wire  signed [31:0] p_Val2_9_fu_4455_p1;
wire   [0:0] or_ln340_442_fu_4494_p2;
wire   [31:0] select_ln340_fu_4500_p3;
wire   [31:0] select_ln388_fu_4508_p3;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
end

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U1262(
    .din0(inputs_0_0_V_q0),
    .din1(inputs_1_0_V_q0),
    .din2(inputs_2_0_V_q0),
    .din3(inputs_3_0_V_q0),
    .din4(trunc_ln1265_reg_4545),
    .dout(tmp_320_fu_2791_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U1263(
    .din0(inputs_0_1_V_q0),
    .din1(inputs_1_1_V_q0),
    .din2(inputs_2_1_V_q0),
    .din3(inputs_3_1_V_q0),
    .din4(trunc_ln1265_reg_4545),
    .dout(tmp_321_fu_2804_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U1264(
    .din0(inputs_0_2_V_q0),
    .din1(inputs_1_2_V_q0),
    .din2(inputs_2_2_V_q0),
    .din3(inputs_3_2_V_q0),
    .din4(trunc_ln1265_reg_4545),
    .dout(tmp_322_fu_2817_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U1265(
    .din0(inputs_0_3_V_q0),
    .din1(inputs_1_3_V_q0),
    .din2(inputs_2_3_V_q0),
    .din3(inputs_3_3_V_q0),
    .din4(trunc_ln1265_reg_4545),
    .dout(tmp_323_fu_2830_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U1266(
    .din0(inputs_0_4_V_q0),
    .din1(inputs_1_4_V_q0),
    .din2(inputs_2_4_V_q0),
    .din3(inputs_3_4_V_q0),
    .din4(trunc_ln1265_reg_4545),
    .dout(tmp_324_fu_2843_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U1267(
    .din0(inputs_0_5_V_q0),
    .din1(inputs_1_5_V_q0),
    .din2(inputs_2_5_V_q0),
    .din3(inputs_3_5_V_q0),
    .din4(trunc_ln1265_reg_4545),
    .dout(tmp_325_fu_2856_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U1268(
    .din0(inputs_0_6_V_q0),
    .din1(inputs_1_6_V_q0),
    .din2(inputs_2_6_V_q0),
    .din3(inputs_3_6_V_q0),
    .din4(trunc_ln1265_reg_4545),
    .dout(tmp_326_fu_2869_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U1269(
    .din0(inputs_0_7_V_q0),
    .din1(inputs_1_7_V_q0),
    .din2(inputs_2_7_V_q0),
    .din3(inputs_3_7_V_q0),
    .din4(trunc_ln1265_reg_4545),
    .dout(tmp_327_fu_2882_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U1270(
    .din0(inputs_0_8_V_q0),
    .din1(inputs_1_8_V_q0),
    .din2(inputs_2_8_V_q0),
    .din3(inputs_3_8_V_q0),
    .din4(trunc_ln1265_reg_4545),
    .dout(tmp_328_fu_2895_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U1271(
    .din0(inputs_0_9_V_q0),
    .din1(inputs_1_9_V_q0),
    .din2(inputs_2_9_V_q0),
    .din3(inputs_3_9_V_q0),
    .din4(trunc_ln1265_reg_4545),
    .dout(tmp_329_fu_2908_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U1272(
    .din0(inputs_0_10_V_q0),
    .din1(inputs_1_10_V_q0),
    .din2(inputs_2_10_V_q0),
    .din3(inputs_3_10_V_q0),
    .din4(trunc_ln1265_reg_4545),
    .dout(tmp_330_fu_2921_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U1273(
    .din0(inputs_0_11_V_q0),
    .din1(inputs_1_11_V_q0),
    .din2(inputs_2_11_V_q0),
    .din3(inputs_3_11_V_q0),
    .din4(trunc_ln1265_reg_4545),
    .dout(tmp_331_fu_2934_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U1274(
    .din0(inputs_0_12_V_q0),
    .din1(inputs_1_12_V_q0),
    .din2(inputs_2_12_V_q0),
    .din3(inputs_3_12_V_q0),
    .din4(trunc_ln1265_reg_4545),
    .dout(tmp_332_fu_2947_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U1275(
    .din0(inputs_0_13_V_q0),
    .din1(inputs_1_13_V_q0),
    .din2(inputs_2_13_V_q0),
    .din3(inputs_3_13_V_q0),
    .din4(trunc_ln1265_reg_4545),
    .dout(tmp_333_fu_2960_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U1276(
    .din0(inputs_0_14_V_q0),
    .din1(inputs_1_14_V_q0),
    .din2(inputs_2_14_V_q0),
    .din3(inputs_3_14_V_q0),
    .din4(trunc_ln1265_reg_4545),
    .dout(tmp_334_fu_2973_p6)
);

FracNet_T_mux_42_cyx #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_42_cyx_U1277(
    .din0(inputs_0_15_V_q0),
    .din1(inputs_1_15_V_q0),
    .din2(inputs_2_15_V_q0),
    .din3(inputs_3_15_V_q0),
    .din4(trunc_ln1265_reg_4545),
    .dout(tmp_335_fu_2986_p6)
);

FracNet_T_mux_164cXB #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
FracNet_T_mux_164cXB_U1278(
    .din0(tmp_0_V_4_reg_2593),
    .din1(tmp_1_V_4_reg_2581),
    .din2(tmp_2_V_4_reg_2569),
    .din3(tmp_3_V_4_reg_2557),
    .din4(tmp_4_V_4_reg_2545),
    .din5(tmp_5_V_4_reg_2533),
    .din6(tmp_6_V_4_reg_2521),
    .din7(tmp_7_V_4_reg_2509),
    .din8(tmp_8_V_4_reg_2497),
    .din9(tmp_9_V_4_reg_2485),
    .din10(tmp_10_V_4_reg_2473),
    .din11(tmp_11_V_4_reg_2461),
    .din12(tmp_12_V_4_reg_2449),
    .din13(tmp_13_V_4_reg_2437),
    .din14(tmp_14_V_4_reg_2425),
    .din15(tmp_15_V_4_reg_2413),
    .din16(p_Val2_s_fu_4327_p17),
    .dout(p_Val2_s_fu_4327_p18)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln237_fu_2648_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state10))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state10);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln237_reg_4566 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_0_reg_2391 <= select_ln241_1_reg_4580;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_reg_2391 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln237_fu_2648_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten_reg_2380 <= add_ln237_fu_2654_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        indvar_flatten_reg_2380 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln237_fu_2648_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_0_reg_2402 <= j_fu_2688_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        j_0_reg_2402 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        k1_0_reg_2605 <= 5'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln245_fu_4302_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        k1_0_reg_2605 <= k_1_fu_4308_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        k_0_reg_1489 <= k_fu_2634_p2;
    end else if (((icmp_ln232_fu_2616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        k_0_reg_1489 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tile_0_reg_1301 <= tile_reg_4529;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tile_0_reg_1301 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_0_V_11_reg_1478 <= ap_phi_mux_tmp_0_V_2_phi_fu_2329_p32;
    end else if (((icmp_ln232_fu_2616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_0_V_11_reg_1478 <= tmp_0_V_0_reg_1289;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_4566_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        tmp_0_V_4_reg_2593 <= select_ln340_369_fu_3072_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_0_V_4_reg_2593 <= tmp_0_V_11_reg_1478;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_10_V_111_reg_1368 <= ap_phi_mux_tmp_10_V_2_phi_fu_1779_p32;
    end else if (((icmp_ln232_fu_2616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_10_V_111_reg_1368 <= tmp_10_V_0_reg_1169;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_4566_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        tmp_10_V_4_reg_2473 <= select_ln340_379_fu_3882_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_10_V_4_reg_2473 <= tmp_10_V_111_reg_1368;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_11_V_112_reg_1357 <= ap_phi_mux_tmp_11_V_2_phi_fu_1724_p32;
    end else if (((icmp_ln232_fu_2616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_11_V_112_reg_1357 <= tmp_11_V_0_reg_1157;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_4566_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        tmp_11_V_4_reg_2461 <= select_ln340_380_fu_3963_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_11_V_4_reg_2461 <= tmp_11_V_112_reg_1357;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_12_V_113_reg_1346 <= ap_phi_mux_tmp_12_V_2_phi_fu_1669_p32;
    end else if (((icmp_ln232_fu_2616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_12_V_113_reg_1346 <= tmp_12_V_0_reg_1145;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_4566_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        tmp_12_V_4_reg_2449 <= select_ln340_381_fu_4044_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_12_V_4_reg_2449 <= tmp_12_V_113_reg_1346;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_13_V_114_reg_1335 <= ap_phi_mux_tmp_13_V_2_phi_fu_1614_p32;
    end else if (((icmp_ln232_fu_2616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_13_V_114_reg_1335 <= tmp_13_V_0_reg_1133;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_4566_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        tmp_13_V_4_reg_2437 <= select_ln340_382_fu_4125_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_13_V_4_reg_2437 <= tmp_13_V_114_reg_1335;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_14_V_115_reg_1324 <= ap_phi_mux_tmp_14_V_2_phi_fu_1559_p32;
    end else if (((icmp_ln232_fu_2616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_14_V_115_reg_1324 <= tmp_14_V_0_reg_1121;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_4566_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        tmp_14_V_4_reg_2425 <= select_ln340_383_fu_4206_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_14_V_4_reg_2425 <= tmp_14_V_115_reg_1324;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_15_V_116_reg_1313 <= ap_phi_mux_tmp_15_V_2_phi_fu_1504_p32;
    end else if (((icmp_ln232_fu_2616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_15_V_116_reg_1313 <= tmp_15_V_0_reg_1109;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_4566_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        tmp_15_V_4_reg_2413 <= select_ln340_384_fu_4287_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_15_V_4_reg_2413 <= tmp_15_V_116_reg_1313;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_1_V_12_reg_1467 <= ap_phi_mux_tmp_1_V_2_phi_fu_2274_p32;
    end else if (((icmp_ln232_fu_2616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_1_V_12_reg_1467 <= tmp_1_V_0_reg_1277;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_4566_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        tmp_1_V_4_reg_2581 <= select_ln340_370_fu_3153_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_1_V_4_reg_2581 <= tmp_1_V_12_reg_1467;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_2_V_13_reg_1456 <= ap_phi_mux_tmp_2_V_2_phi_fu_2219_p32;
    end else if (((icmp_ln232_fu_2616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_2_V_13_reg_1456 <= tmp_2_V_0_reg_1265;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_4566_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        tmp_2_V_4_reg_2569 <= select_ln340_371_fu_3234_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_2_V_4_reg_2569 <= tmp_2_V_13_reg_1456;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_3_V_14_reg_1445 <= ap_phi_mux_tmp_3_V_2_phi_fu_2164_p32;
    end else if (((icmp_ln232_fu_2616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_3_V_14_reg_1445 <= tmp_3_V_0_reg_1253;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_4566_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        tmp_3_V_4_reg_2557 <= select_ln340_372_fu_3315_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_3_V_4_reg_2557 <= tmp_3_V_14_reg_1445;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_4_V_15_reg_1434 <= ap_phi_mux_tmp_4_V_2_phi_fu_2109_p32;
    end else if (((icmp_ln232_fu_2616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_4_V_15_reg_1434 <= tmp_4_V_0_reg_1241;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_4566_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        tmp_4_V_4_reg_2545 <= select_ln340_373_fu_3396_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_4_V_4_reg_2545 <= tmp_4_V_15_reg_1434;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_5_V_16_reg_1423 <= ap_phi_mux_tmp_5_V_2_phi_fu_2054_p32;
    end else if (((icmp_ln232_fu_2616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_5_V_16_reg_1423 <= tmp_5_V_0_reg_1229;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_4566_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        tmp_5_V_4_reg_2533 <= select_ln340_374_fu_3477_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_5_V_4_reg_2533 <= tmp_5_V_16_reg_1423;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_6_V_17_reg_1412 <= ap_phi_mux_tmp_6_V_2_phi_fu_1999_p32;
    end else if (((icmp_ln232_fu_2616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_6_V_17_reg_1412 <= tmp_6_V_0_reg_1217;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_4566_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        tmp_6_V_4_reg_2521 <= select_ln340_375_fu_3558_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_6_V_4_reg_2521 <= tmp_6_V_17_reg_1412;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_7_V_18_reg_1401 <= ap_phi_mux_tmp_7_V_2_phi_fu_1944_p32;
    end else if (((icmp_ln232_fu_2616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_7_V_18_reg_1401 <= tmp_7_V_0_reg_1205;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_4566_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        tmp_7_V_4_reg_2509 <= select_ln340_376_fu_3639_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_7_V_4_reg_2509 <= tmp_7_V_18_reg_1401;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_8_V_19_reg_1390 <= ap_phi_mux_tmp_8_V_2_phi_fu_1889_p32;
    end else if (((icmp_ln232_fu_2616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_8_V_19_reg_1390 <= tmp_8_V_0_reg_1193;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_4566_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        tmp_8_V_4_reg_2497 <= select_ln340_377_fu_3720_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_8_V_4_reg_2497 <= tmp_8_V_19_reg_1390;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_9_V_110_reg_1379 <= ap_phi_mux_tmp_9_V_2_phi_fu_1834_p32;
    end else if (((icmp_ln232_fu_2616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_9_V_110_reg_1379 <= tmp_9_V_0_reg_1181;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_4566_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        tmp_9_V_4_reg_2485 <= select_ln340_378_fu_3801_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_9_V_4_reg_2485 <= tmp_9_V_110_reg_1379;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln245_fu_4302_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln247_reg_5086 <= add_ln247_fu_4318_p2;
        p_Result_4_reg_5102 <= select_ln1148_fu_4421_p3[32'd26];
        p_Result_s_reg_5096 <= p_Result_s_fu_4429_p2;
        select_ln1148_reg_5091 <= select_ln1148_fu_4421_p3;
        tmp_1232_reg_5108 <= select_ln1148_fu_4421_p3[32'd26];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln237_reg_4566 <= icmp_ln237_fu_2648_p2;
        icmp_ln237_reg_4566_pp1_iter1_reg <= icmp_ln237_reg_4566;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln237_reg_4566_pp1_iter2_reg <= icmp_ln237_reg_4566_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln245_reg_5077 <= icmp_ln245_fu_4302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln237_fu_2648_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln241_1_reg_4580 <= select_ln241_1_fu_2680_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln237_fu_2648_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln241_reg_4575 <= select_ln241_fu_2672_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        shl_ln_reg_5072[5 : 4] <= shl_ln_fu_4295_p3[5 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tile_reg_4529 <= tile_fu_2622_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_0_V_0_reg_1289 <= tmp_0_V_4_reg_2593;
        tmp_10_V_0_reg_1169 <= tmp_10_V_4_reg_2473;
        tmp_11_V_0_reg_1157 <= tmp_11_V_4_reg_2461;
        tmp_12_V_0_reg_1145 <= tmp_12_V_4_reg_2449;
        tmp_13_V_0_reg_1133 <= tmp_13_V_4_reg_2437;
        tmp_14_V_0_reg_1121 <= tmp_14_V_4_reg_2425;
        tmp_15_V_0_reg_1109 <= tmp_15_V_4_reg_2413;
        tmp_1_V_0_reg_1277 <= tmp_1_V_4_reg_2581;
        tmp_2_V_0_reg_1265 <= tmp_2_V_4_reg_2569;
        tmp_3_V_0_reg_1253 <= tmp_3_V_4_reg_2557;
        tmp_4_V_0_reg_1241 <= tmp_4_V_4_reg_2545;
        tmp_5_V_0_reg_1229 <= tmp_5_V_4_reg_2533;
        tmp_6_V_0_reg_1217 <= tmp_6_V_4_reg_2521;
        tmp_7_V_0_reg_1205 <= tmp_7_V_4_reg_2509;
        tmp_8_V_0_reg_1193 <= tmp_8_V_4_reg_2497;
        tmp_9_V_0_reg_1181 <= tmp_9_V_4_reg_2485;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_4566_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_320_reg_4912 <= tmp_320_fu_2791_p6;
        tmp_321_reg_4917 <= tmp_321_fu_2804_p6;
        tmp_322_reg_4922 <= tmp_322_fu_2817_p6;
        tmp_323_reg_4927 <= tmp_323_fu_2830_p6;
        tmp_324_reg_4932 <= tmp_324_fu_2843_p6;
        tmp_325_reg_4937 <= tmp_325_fu_2856_p6;
        tmp_326_reg_4942 <= tmp_326_fu_2869_p6;
        tmp_327_reg_4947 <= tmp_327_fu_2882_p6;
        tmp_328_reg_4952 <= tmp_328_fu_2895_p6;
        tmp_329_reg_4957 <= tmp_329_fu_2908_p6;
        tmp_330_reg_4962 <= tmp_330_fu_2921_p6;
        tmp_331_reg_4967 <= tmp_331_fu_2934_p6;
        tmp_332_reg_4972 <= tmp_332_fu_2947_p6;
        tmp_333_reg_4977 <= tmp_333_fu_2960_p6;
        tmp_334_reg_4982 <= tmp_334_fu_2973_p6;
        tmp_335_reg_4987 <= tmp_335_fu_2986_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        trunc_ln1265_reg_4545 <= trunc_ln1265_fu_2644_p1;
    end
end

always @ (*) begin
    if ((icmp_ln245_fu_4302_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln232_fu_2616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_reg_4566 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_i_0_phi_fu_2395_p4 = select_ln241_1_reg_4580;
    end else begin
        ap_phi_mux_i_0_phi_fu_2395_p4 = i_0_reg_2391;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_2640_p1 == 4'd0) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_tmp_0_V_2_phi_fu_2329_p32 = 32'd0;
    end else if ((((trunc_ln203_fu_2640_p1 == 4'd1) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd2) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd3) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd4) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd5) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd6) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd7) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd8) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd9) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd10) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd11) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd12) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd13) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd14) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd15) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_phi_mux_tmp_0_V_2_phi_fu_2329_p32 = tmp_0_V_11_reg_1478;
    end else begin
        ap_phi_mux_tmp_0_V_2_phi_fu_2329_p32 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_2640_p1 == 4'd10) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_tmp_10_V_2_phi_fu_1779_p32 = 32'd0;
    end else if ((((trunc_ln203_fu_2640_p1 == 4'd0) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd1) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd2) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd3) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd4) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd5) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd6) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd7) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd8) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd9) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd11) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd12) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd13) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd14) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd15) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_phi_mux_tmp_10_V_2_phi_fu_1779_p32 = tmp_10_V_111_reg_1368;
    end else begin
        ap_phi_mux_tmp_10_V_2_phi_fu_1779_p32 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_2640_p1 == 4'd11) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_tmp_11_V_2_phi_fu_1724_p32 = 32'd0;
    end else if ((((trunc_ln203_fu_2640_p1 == 4'd0) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd1) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd2) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd3) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd4) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd5) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd6) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd7) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd8) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd9) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd10) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd12) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd13) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd14) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd15) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_phi_mux_tmp_11_V_2_phi_fu_1724_p32 = tmp_11_V_112_reg_1357;
    end else begin
        ap_phi_mux_tmp_11_V_2_phi_fu_1724_p32 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_2640_p1 == 4'd12) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_tmp_12_V_2_phi_fu_1669_p32 = 32'd0;
    end else if ((((trunc_ln203_fu_2640_p1 == 4'd0) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd1) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd2) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd3) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd4) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd5) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd6) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd7) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd8) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd9) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd10) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd11) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd13) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd14) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd15) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_phi_mux_tmp_12_V_2_phi_fu_1669_p32 = tmp_12_V_113_reg_1346;
    end else begin
        ap_phi_mux_tmp_12_V_2_phi_fu_1669_p32 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_2640_p1 == 4'd13) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_tmp_13_V_2_phi_fu_1614_p32 = 32'd0;
    end else if ((((trunc_ln203_fu_2640_p1 == 4'd0) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd1) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd2) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd3) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd4) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd5) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd6) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd7) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd8) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd9) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd10) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd11) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd12) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd14) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd15) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_phi_mux_tmp_13_V_2_phi_fu_1614_p32 = tmp_13_V_114_reg_1335;
    end else begin
        ap_phi_mux_tmp_13_V_2_phi_fu_1614_p32 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_2640_p1 == 4'd14) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_tmp_14_V_2_phi_fu_1559_p32 = 32'd0;
    end else if ((((trunc_ln203_fu_2640_p1 == 4'd0) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd1) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd2) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd3) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd4) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd5) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd6) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd7) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd8) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd9) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd10) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd11) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd12) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd13) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd15) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_phi_mux_tmp_14_V_2_phi_fu_1559_p32 = tmp_14_V_115_reg_1324;
    end else begin
        ap_phi_mux_tmp_14_V_2_phi_fu_1559_p32 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln203_fu_2640_p1 == 4'd0) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd1) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd2) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd3) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd4) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd5) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd6) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd7) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd8) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd9) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd10) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd11) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd12) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd13) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd14) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_phi_mux_tmp_15_V_2_phi_fu_1504_p32 = tmp_15_V_116_reg_1313;
    end else if (((trunc_ln203_fu_2640_p1 == 4'd15) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_tmp_15_V_2_phi_fu_1504_p32 = 32'd0;
    end else begin
        ap_phi_mux_tmp_15_V_2_phi_fu_1504_p32 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_2640_p1 == 4'd1) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_tmp_1_V_2_phi_fu_2274_p32 = 32'd0;
    end else if ((((trunc_ln203_fu_2640_p1 == 4'd0) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd2) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd3) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd4) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd5) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd6) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd7) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd8) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd9) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd10) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd11) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd12) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd13) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd14) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd15) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_phi_mux_tmp_1_V_2_phi_fu_2274_p32 = tmp_1_V_12_reg_1467;
    end else begin
        ap_phi_mux_tmp_1_V_2_phi_fu_2274_p32 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_2640_p1 == 4'd2) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_tmp_2_V_2_phi_fu_2219_p32 = 32'd0;
    end else if ((((trunc_ln203_fu_2640_p1 == 4'd0) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd1) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd3) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd4) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd5) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd6) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd7) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd8) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd9) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd10) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd11) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd12) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd13) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd14) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd15) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_phi_mux_tmp_2_V_2_phi_fu_2219_p32 = tmp_2_V_13_reg_1456;
    end else begin
        ap_phi_mux_tmp_2_V_2_phi_fu_2219_p32 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_2640_p1 == 4'd3) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_tmp_3_V_2_phi_fu_2164_p32 = 32'd0;
    end else if ((((trunc_ln203_fu_2640_p1 == 4'd0) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd1) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd2) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd4) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd5) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd6) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd7) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd8) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd9) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd10) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd11) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd12) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd13) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd14) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd15) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_phi_mux_tmp_3_V_2_phi_fu_2164_p32 = tmp_3_V_14_reg_1445;
    end else begin
        ap_phi_mux_tmp_3_V_2_phi_fu_2164_p32 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_2640_p1 == 4'd4) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_tmp_4_V_2_phi_fu_2109_p32 = 32'd0;
    end else if ((((trunc_ln203_fu_2640_p1 == 4'd0) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd1) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd2) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd3) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd5) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd6) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd7) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd8) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd9) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd10) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd11) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd12) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd13) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd14) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd15) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_phi_mux_tmp_4_V_2_phi_fu_2109_p32 = tmp_4_V_15_reg_1434;
    end else begin
        ap_phi_mux_tmp_4_V_2_phi_fu_2109_p32 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_2640_p1 == 4'd5) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_tmp_5_V_2_phi_fu_2054_p32 = 32'd0;
    end else if ((((trunc_ln203_fu_2640_p1 == 4'd0) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd1) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd2) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd3) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd4) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd6) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd7) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd8) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd9) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd10) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd11) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd12) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd13) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd14) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd15) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_phi_mux_tmp_5_V_2_phi_fu_2054_p32 = tmp_5_V_16_reg_1423;
    end else begin
        ap_phi_mux_tmp_5_V_2_phi_fu_2054_p32 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_2640_p1 == 4'd6) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_tmp_6_V_2_phi_fu_1999_p32 = 32'd0;
    end else if ((((trunc_ln203_fu_2640_p1 == 4'd0) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd1) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd2) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd3) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd4) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd5) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd7) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd8) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd9) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd10) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd11) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd12) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd13) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd14) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd15) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_phi_mux_tmp_6_V_2_phi_fu_1999_p32 = tmp_6_V_17_reg_1412;
    end else begin
        ap_phi_mux_tmp_6_V_2_phi_fu_1999_p32 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_2640_p1 == 4'd7) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_tmp_7_V_2_phi_fu_1944_p32 = 32'd0;
    end else if ((((trunc_ln203_fu_2640_p1 == 4'd0) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd1) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd2) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd3) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd4) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd5) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd6) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd8) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd9) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd10) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd11) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd12) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd13) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd14) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd15) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_phi_mux_tmp_7_V_2_phi_fu_1944_p32 = tmp_7_V_18_reg_1401;
    end else begin
        ap_phi_mux_tmp_7_V_2_phi_fu_1944_p32 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_2640_p1 == 4'd8) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_tmp_8_V_2_phi_fu_1889_p32 = 32'd0;
    end else if ((((trunc_ln203_fu_2640_p1 == 4'd0) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd1) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd2) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd3) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd4) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd5) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd6) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd7) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd9) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd10) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd11) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd12) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd13) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd14) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd15) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_phi_mux_tmp_8_V_2_phi_fu_1889_p32 = tmp_8_V_19_reg_1390;
    end else begin
        ap_phi_mux_tmp_8_V_2_phi_fu_1889_p32 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_2640_p1 == 4'd9) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_tmp_9_V_2_phi_fu_1834_p32 = 32'd0;
    end else if ((((trunc_ln203_fu_2640_p1 == 4'd0) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd1) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd2) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd3) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd4) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd5) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd6) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd7) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd8) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd10) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd11) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd12) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd13) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd14) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln203_fu_2640_p1 == 4'd15) & (icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_phi_mux_tmp_9_V_2_phi_fu_1834_p32 = tmp_9_V_110_reg_1379;
    end else begin
        ap_phi_mux_tmp_9_V_2_phi_fu_1834_p32 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln232_fu_2616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_0_0_V_ce0 = 1'b1;
    end else begin
        inputs_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_0_10_V_ce0 = 1'b1;
    end else begin
        inputs_0_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_0_11_V_ce0 = 1'b1;
    end else begin
        inputs_0_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_0_12_V_ce0 = 1'b1;
    end else begin
        inputs_0_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_0_13_V_ce0 = 1'b1;
    end else begin
        inputs_0_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_0_14_V_ce0 = 1'b1;
    end else begin
        inputs_0_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_0_15_V_ce0 = 1'b1;
    end else begin
        inputs_0_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_0_1_V_ce0 = 1'b1;
    end else begin
        inputs_0_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_0_2_V_ce0 = 1'b1;
    end else begin
        inputs_0_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_0_3_V_ce0 = 1'b1;
    end else begin
        inputs_0_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_0_4_V_ce0 = 1'b1;
    end else begin
        inputs_0_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_0_5_V_ce0 = 1'b1;
    end else begin
        inputs_0_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_0_6_V_ce0 = 1'b1;
    end else begin
        inputs_0_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_0_7_V_ce0 = 1'b1;
    end else begin
        inputs_0_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_0_8_V_ce0 = 1'b1;
    end else begin
        inputs_0_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_0_9_V_ce0 = 1'b1;
    end else begin
        inputs_0_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_1_0_V_ce0 = 1'b1;
    end else begin
        inputs_1_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_1_10_V_ce0 = 1'b1;
    end else begin
        inputs_1_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_1_11_V_ce0 = 1'b1;
    end else begin
        inputs_1_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_1_12_V_ce0 = 1'b1;
    end else begin
        inputs_1_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_1_13_V_ce0 = 1'b1;
    end else begin
        inputs_1_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_1_14_V_ce0 = 1'b1;
    end else begin
        inputs_1_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_1_15_V_ce0 = 1'b1;
    end else begin
        inputs_1_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_1_1_V_ce0 = 1'b1;
    end else begin
        inputs_1_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_1_2_V_ce0 = 1'b1;
    end else begin
        inputs_1_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_1_3_V_ce0 = 1'b1;
    end else begin
        inputs_1_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_1_4_V_ce0 = 1'b1;
    end else begin
        inputs_1_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_1_5_V_ce0 = 1'b1;
    end else begin
        inputs_1_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_1_6_V_ce0 = 1'b1;
    end else begin
        inputs_1_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_1_7_V_ce0 = 1'b1;
    end else begin
        inputs_1_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_1_8_V_ce0 = 1'b1;
    end else begin
        inputs_1_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_1_9_V_ce0 = 1'b1;
    end else begin
        inputs_1_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_2_0_V_ce0 = 1'b1;
    end else begin
        inputs_2_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_2_10_V_ce0 = 1'b1;
    end else begin
        inputs_2_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_2_11_V_ce0 = 1'b1;
    end else begin
        inputs_2_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_2_12_V_ce0 = 1'b1;
    end else begin
        inputs_2_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_2_13_V_ce0 = 1'b1;
    end else begin
        inputs_2_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_2_14_V_ce0 = 1'b1;
    end else begin
        inputs_2_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_2_15_V_ce0 = 1'b1;
    end else begin
        inputs_2_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_2_1_V_ce0 = 1'b1;
    end else begin
        inputs_2_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_2_2_V_ce0 = 1'b1;
    end else begin
        inputs_2_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_2_3_V_ce0 = 1'b1;
    end else begin
        inputs_2_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_2_4_V_ce0 = 1'b1;
    end else begin
        inputs_2_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_2_5_V_ce0 = 1'b1;
    end else begin
        inputs_2_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_2_6_V_ce0 = 1'b1;
    end else begin
        inputs_2_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_2_7_V_ce0 = 1'b1;
    end else begin
        inputs_2_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_2_8_V_ce0 = 1'b1;
    end else begin
        inputs_2_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_2_9_V_ce0 = 1'b1;
    end else begin
        inputs_2_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_3_0_V_ce0 = 1'b1;
    end else begin
        inputs_3_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_3_10_V_ce0 = 1'b1;
    end else begin
        inputs_3_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_3_11_V_ce0 = 1'b1;
    end else begin
        inputs_3_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_3_12_V_ce0 = 1'b1;
    end else begin
        inputs_3_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_3_13_V_ce0 = 1'b1;
    end else begin
        inputs_3_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_3_14_V_ce0 = 1'b1;
    end else begin
        inputs_3_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_3_15_V_ce0 = 1'b1;
    end else begin
        inputs_3_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_3_1_V_ce0 = 1'b1;
    end else begin
        inputs_3_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_3_2_V_ce0 = 1'b1;
    end else begin
        inputs_3_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_3_3_V_ce0 = 1'b1;
    end else begin
        inputs_3_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_3_4_V_ce0 = 1'b1;
    end else begin
        inputs_3_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_3_5_V_ce0 = 1'b1;
    end else begin
        inputs_3_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_3_6_V_ce0 = 1'b1;
    end else begin
        inputs_3_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_3_7_V_ce0 = 1'b1;
    end else begin
        inputs_3_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_3_8_V_ce0 = 1'b1;
    end else begin
        inputs_3_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inputs_3_9_V_ce0 = 1'b1;
    end else begin
        inputs_3_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        outputs_V_ce0 = 1'b1;
    end else begin
        outputs_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln245_reg_5077 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        outputs_V_we0 = 1'b1;
    end else begin
        outputs_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln232_fu_2616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln233_fu_2628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln245_fu_4302_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln245_fu_4302_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_135_fu_3099_p2 = ($signed(sext_ln728_90_fu_3091_p1) + $signed(sext_ln703_95_fu_3080_p1));

assign add_ln1192_136_fu_3180_p2 = ($signed(sext_ln728_91_fu_3172_p1) + $signed(sext_ln703_96_fu_3161_p1));

assign add_ln1192_137_fu_3261_p2 = ($signed(sext_ln728_92_fu_3253_p1) + $signed(sext_ln703_97_fu_3242_p1));

assign add_ln1192_138_fu_3342_p2 = ($signed(sext_ln728_93_fu_3334_p1) + $signed(sext_ln703_98_fu_3323_p1));

assign add_ln1192_139_fu_3423_p2 = ($signed(sext_ln728_94_fu_3415_p1) + $signed(sext_ln703_99_fu_3404_p1));

assign add_ln1192_140_fu_3504_p2 = ($signed(sext_ln728_95_fu_3496_p1) + $signed(sext_ln703_100_fu_3485_p1));

assign add_ln1192_141_fu_3585_p2 = ($signed(sext_ln728_96_fu_3577_p1) + $signed(sext_ln703_101_fu_3566_p1));

assign add_ln1192_142_fu_3666_p2 = ($signed(sext_ln728_97_fu_3658_p1) + $signed(sext_ln703_102_fu_3647_p1));

assign add_ln1192_143_fu_3747_p2 = ($signed(sext_ln728_98_fu_3739_p1) + $signed(sext_ln703_103_fu_3728_p1));

assign add_ln1192_144_fu_3828_p2 = ($signed(sext_ln728_99_fu_3820_p1) + $signed(sext_ln703_104_fu_3809_p1));

assign add_ln1192_145_fu_3909_p2 = ($signed(sext_ln728_100_fu_3901_p1) + $signed(sext_ln703_105_fu_3890_p1));

assign add_ln1192_146_fu_3990_p2 = ($signed(sext_ln728_101_fu_3982_p1) + $signed(sext_ln703_106_fu_3971_p1));

assign add_ln1192_147_fu_4071_p2 = ($signed(sext_ln728_102_fu_4063_p1) + $signed(sext_ln703_107_fu_4052_p1));

assign add_ln1192_148_fu_4152_p2 = ($signed(sext_ln728_103_fu_4144_p1) + $signed(sext_ln703_108_fu_4133_p1));

assign add_ln1192_149_fu_4233_p2 = ($signed(sext_ln728_104_fu_4225_p1) + $signed(sext_ln703_109_fu_4214_p1));

assign add_ln1192_fu_3018_p2 = ($signed(sext_ln728_fu_3010_p1) + $signed(sext_ln703_fu_2999_p1));

assign add_ln1265_1_fu_2717_p2 = (add_ln1265_fu_2708_p2 + zext_ln1265_2_fu_2714_p1);

assign add_ln1265_fu_2708_p2 = (zext_ln1265_fu_2694_p1 + zext_ln1265_1_fu_2704_p1);

assign add_ln237_fu_2654_p2 = (indvar_flatten_reg_2380 + 7'd1);

assign add_ln247_fu_4318_p2 = (shl_ln_reg_5072 + zext_ln245_fu_4314_p1);

assign and_ln785_153_fu_3133_p2 = (xor_ln785_273_fu_3127_p2 & tmp_1201_fu_3119_p3);

assign and_ln785_154_fu_3214_p2 = (xor_ln785_274_fu_3208_p2 & tmp_1203_fu_3200_p3);

assign and_ln785_155_fu_3295_p2 = (xor_ln785_275_fu_3289_p2 & tmp_1205_fu_3281_p3);

assign and_ln785_156_fu_3376_p2 = (xor_ln785_276_fu_3370_p2 & tmp_1207_fu_3362_p3);

assign and_ln785_157_fu_3457_p2 = (xor_ln785_277_fu_3451_p2 & tmp_1209_fu_3443_p3);

assign and_ln785_158_fu_3538_p2 = (xor_ln785_278_fu_3532_p2 & tmp_1211_fu_3524_p3);

assign and_ln785_159_fu_3619_p2 = (xor_ln785_279_fu_3613_p2 & tmp_1213_fu_3605_p3);

assign and_ln785_160_fu_3700_p2 = (xor_ln785_280_fu_3694_p2 & tmp_1215_fu_3686_p3);

assign and_ln785_161_fu_3781_p2 = (xor_ln785_281_fu_3775_p2 & tmp_1217_fu_3767_p3);

assign and_ln785_162_fu_3862_p2 = (xor_ln785_282_fu_3856_p2 & tmp_1219_fu_3848_p3);

assign and_ln785_163_fu_3943_p2 = (xor_ln785_283_fu_3937_p2 & tmp_1221_fu_3929_p3);

assign and_ln785_164_fu_4024_p2 = (xor_ln785_284_fu_4018_p2 & tmp_1223_fu_4010_p3);

assign and_ln785_165_fu_4105_p2 = (xor_ln785_285_fu_4099_p2 & tmp_1225_fu_4091_p3);

assign and_ln785_166_fu_4186_p2 = (xor_ln785_286_fu_4180_p2 & tmp_1227_fu_4172_p3);

assign and_ln785_167_fu_4267_p2 = (xor_ln785_287_fu_4261_p2 & tmp_1229_fu_4253_p3);

assign and_ln785_fu_3052_p2 = (xor_ln785_272_fu_3046_p2 & tmp_1199_fu_3038_p3);

assign and_ln786_fu_4473_p2 = (tmp_1232_reg_5108 & p_Result_4_reg_5102);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign i_fu_2660_p2 = (ap_phi_mux_i_0_phi_fu_2395_p4 + 4'd1);

assign icmp_ln232_fu_2616_p2 = ((tile_0_reg_1301 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln233_fu_2628_p2 = ((k_0_reg_1489 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln237_fu_2648_p2 = ((indvar_flatten_reg_2380 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln238_fu_2666_p2 = ((j_0_reg_2402 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln245_fu_4302_p2 = ((k1_0_reg_2605 == 5'd16) ? 1'b1 : 1'b0);

assign inputs_0_0_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_0_10_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_0_11_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_0_12_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_0_13_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_0_14_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_0_15_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_0_1_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_0_2_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_0_3_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_0_4_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_0_5_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_0_6_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_0_7_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_0_8_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_0_9_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_1_0_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_1_10_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_1_11_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_1_12_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_1_13_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_1_14_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_1_15_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_1_1_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_1_2_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_1_3_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_1_4_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_1_5_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_1_6_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_1_7_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_1_8_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_1_9_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_2_0_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_2_10_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_2_11_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_2_12_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_2_13_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_2_14_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_2_15_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_2_1_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_2_2_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_2_3_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_2_4_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_2_5_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_2_6_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_2_7_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_2_8_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_2_9_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_3_0_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_3_10_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_3_11_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_3_12_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_3_13_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_3_14_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_3_15_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_3_1_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_3_2_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_3_3_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_3_4_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_3_5_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_3_6_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_3_7_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_3_8_V_address0 = zext_ln1265_3_fu_2723_p1;

assign inputs_3_9_V_address0 = zext_ln1265_3_fu_2723_p1;

assign j_fu_2688_p2 = (select_ln241_fu_2672_p3 + 4'd1);

assign k_1_fu_4308_p2 = (k1_0_reg_2605 + 5'd1);

assign k_fu_2634_p2 = (k_0_reg_1489 + 5'd1);

assign or_ln340_442_fu_4494_p2 = (xor_ln785_fu_4462_p2 | and_ln786_fu_4473_p2);

assign or_ln340_fu_4488_p2 = (underflow_fu_4483_p2 | overflow_fu_4467_p2);

assign or_ln785_fu_4458_p2 = (tmp_1232_reg_5108 | p_Result_4_reg_5102);

assign outputs_V_address0 = zext_ln247_fu_4451_p1;

assign outputs_V_d0 = ((or_ln340_442_fu_4494_p2[0:0] === 1'b1) ? select_ln340_fu_4500_p3 : select_ln388_fu_4508_p3);

assign overflow_fu_4467_p2 = (xor_ln785_fu_4462_p2 & or_ln785_fu_4458_p2);

assign p_Result_s_fu_4429_p2 = (($signed(t_V_fu_4365_p3) < $signed(54'd18014398241046529)) ? 1'b1 : 1'b0);

assign p_Val2_9_fu_4455_p1 = select_ln1148_reg_5091;

assign p_Val2_s_fu_4327_p17 = k1_0_reg_2605[3:0];

assign select_ln1148_fu_4421_p3 = ((tmp_1230_fu_4373_p3[0:0] === 1'b1) ? sub_ln1148_32_fu_4401_p2 : zext_ln1148_32_fu_4417_p1);

assign select_ln241_1_fu_2680_p3 = ((icmp_ln238_fu_2666_p2[0:0] === 1'b1) ? i_fu_2660_p2 : ap_phi_mux_i_0_phi_fu_2395_p4);

assign select_ln241_fu_2672_p3 = ((icmp_ln238_fu_2666_p2[0:0] === 1'b1) ? 4'd0 : j_0_reg_2402);

assign select_ln340_369_fu_3072_p3 = ((xor_ln340_fu_3058_p2[0:0] === 1'b1) ? select_ln785_fu_3064_p3 : tmp_0_V_fu_3032_p2);

assign select_ln340_370_fu_3153_p3 = ((xor_ln340_111_fu_3139_p2[0:0] === 1'b1) ? select_ln785_20_fu_3145_p3 : tmp_1_V_fu_3113_p2);

assign select_ln340_371_fu_3234_p3 = ((xor_ln340_112_fu_3220_p2[0:0] === 1'b1) ? select_ln785_21_fu_3226_p3 : tmp_2_V_fu_3194_p2);

assign select_ln340_372_fu_3315_p3 = ((xor_ln340_113_fu_3301_p2[0:0] === 1'b1) ? select_ln785_22_fu_3307_p3 : tmp_3_V_fu_3275_p2);

assign select_ln340_373_fu_3396_p3 = ((xor_ln340_114_fu_3382_p2[0:0] === 1'b1) ? select_ln785_23_fu_3388_p3 : tmp_4_V_fu_3356_p2);

assign select_ln340_374_fu_3477_p3 = ((xor_ln340_115_fu_3463_p2[0:0] === 1'b1) ? select_ln785_24_fu_3469_p3 : tmp_5_V_fu_3437_p2);

assign select_ln340_375_fu_3558_p3 = ((xor_ln340_116_fu_3544_p2[0:0] === 1'b1) ? select_ln785_25_fu_3550_p3 : tmp_6_V_fu_3518_p2);

assign select_ln340_376_fu_3639_p3 = ((xor_ln340_117_fu_3625_p2[0:0] === 1'b1) ? select_ln785_26_fu_3631_p3 : tmp_7_V_fu_3599_p2);

assign select_ln340_377_fu_3720_p3 = ((xor_ln340_118_fu_3706_p2[0:0] === 1'b1) ? select_ln785_27_fu_3712_p3 : tmp_8_V_fu_3680_p2);

assign select_ln340_378_fu_3801_p3 = ((xor_ln340_119_fu_3787_p2[0:0] === 1'b1) ? select_ln785_28_fu_3793_p3 : tmp_9_V_fu_3761_p2);

assign select_ln340_379_fu_3882_p3 = ((xor_ln340_120_fu_3868_p2[0:0] === 1'b1) ? select_ln785_29_fu_3874_p3 : tmp_10_V_fu_3842_p2);

assign select_ln340_380_fu_3963_p3 = ((xor_ln340_121_fu_3949_p2[0:0] === 1'b1) ? select_ln785_30_fu_3955_p3 : tmp_11_V_fu_3923_p2);

assign select_ln340_381_fu_4044_p3 = ((xor_ln340_122_fu_4030_p2[0:0] === 1'b1) ? select_ln785_31_fu_4036_p3 : tmp_12_V_fu_4004_p2);

assign select_ln340_382_fu_4125_p3 = ((xor_ln340_123_fu_4111_p2[0:0] === 1'b1) ? select_ln785_32_fu_4117_p3 : tmp_13_V_fu_4085_p2);

assign select_ln340_383_fu_4206_p3 = ((xor_ln340_124_fu_4192_p2[0:0] === 1'b1) ? select_ln785_33_fu_4198_p3 : tmp_14_V_fu_4166_p2);

assign select_ln340_384_fu_4287_p3 = ((xor_ln340_125_fu_4273_p2[0:0] === 1'b1) ? select_ln785_34_fu_4279_p3 : tmp_15_V_fu_4247_p2);

assign select_ln340_fu_4500_p3 = ((or_ln340_fu_4488_p2[0:0] === 1'b1) ? 32'd2147483647 : p_Val2_9_fu_4455_p1);

assign select_ln388_fu_4508_p3 = ((underflow_fu_4483_p2[0:0] === 1'b1) ? 32'd2147483648 : p_Val2_9_fu_4455_p1);

assign select_ln785_20_fu_3145_p3 = ((and_ln785_153_fu_3133_p2[0:0] === 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln785_21_fu_3226_p3 = ((and_ln785_154_fu_3214_p2[0:0] === 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln785_22_fu_3307_p3 = ((and_ln785_155_fu_3295_p2[0:0] === 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln785_23_fu_3388_p3 = ((and_ln785_156_fu_3376_p2[0:0] === 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln785_24_fu_3469_p3 = ((and_ln785_157_fu_3457_p2[0:0] === 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln785_25_fu_3550_p3 = ((and_ln785_158_fu_3538_p2[0:0] === 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln785_26_fu_3631_p3 = ((and_ln785_159_fu_3619_p2[0:0] === 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln785_27_fu_3712_p3 = ((and_ln785_160_fu_3700_p2[0:0] === 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln785_28_fu_3793_p3 = ((and_ln785_161_fu_3781_p2[0:0] === 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln785_29_fu_3874_p3 = ((and_ln785_162_fu_3862_p2[0:0] === 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln785_30_fu_3955_p3 = ((and_ln785_163_fu_3943_p2[0:0] === 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln785_31_fu_4036_p3 = ((and_ln785_164_fu_4024_p2[0:0] === 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln785_32_fu_4117_p3 = ((and_ln785_165_fu_4105_p2[0:0] === 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln785_33_fu_4198_p3 = ((and_ln785_166_fu_4186_p2[0:0] === 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln785_34_fu_4279_p3 = ((and_ln785_167_fu_4267_p2[0:0] === 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln785_fu_3064_p3 = ((and_ln785_fu_3052_p2[0:0] === 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign sext_ln1192_39_fu_3095_p1 = shl_ln728_s_fu_3084_p3;

assign sext_ln1192_40_fu_3176_p1 = shl_ln728_93_fu_3165_p3;

assign sext_ln1192_41_fu_3257_p1 = shl_ln728_94_fu_3246_p3;

assign sext_ln1192_42_fu_3338_p1 = shl_ln728_95_fu_3327_p3;

assign sext_ln1192_43_fu_3419_p1 = shl_ln728_96_fu_3408_p3;

assign sext_ln1192_44_fu_3500_p1 = shl_ln728_97_fu_3489_p3;

assign sext_ln1192_45_fu_3581_p1 = shl_ln728_98_fu_3570_p3;

assign sext_ln1192_46_fu_3662_p1 = shl_ln728_99_fu_3651_p3;

assign sext_ln1192_47_fu_3743_p1 = shl_ln728_100_fu_3732_p3;

assign sext_ln1192_48_fu_3824_p1 = shl_ln728_101_fu_3813_p3;

assign sext_ln1192_49_fu_3905_p1 = shl_ln728_102_fu_3894_p3;

assign sext_ln1192_50_fu_3986_p1 = shl_ln728_103_fu_3975_p3;

assign sext_ln1192_51_fu_4067_p1 = shl_ln728_104_fu_4056_p3;

assign sext_ln1192_52_fu_4148_p1 = shl_ln728_105_fu_4137_p3;

assign sext_ln1192_53_fu_4229_p1 = shl_ln728_106_fu_4218_p3;

assign sext_ln1192_fu_3014_p1 = shl_ln3_fu_3003_p3;

assign sext_ln703_100_fu_3485_p1 = tmp_6_V_4_reg_2521;

assign sext_ln703_101_fu_3566_p1 = tmp_7_V_4_reg_2509;

assign sext_ln703_102_fu_3647_p1 = tmp_8_V_4_reg_2497;

assign sext_ln703_103_fu_3728_p1 = tmp_9_V_4_reg_2485;

assign sext_ln703_104_fu_3809_p1 = tmp_10_V_4_reg_2473;

assign sext_ln703_105_fu_3890_p1 = tmp_11_V_4_reg_2461;

assign sext_ln703_106_fu_3971_p1 = tmp_12_V_4_reg_2449;

assign sext_ln703_107_fu_4052_p1 = tmp_13_V_4_reg_2437;

assign sext_ln703_108_fu_4133_p1 = tmp_14_V_4_reg_2425;

assign sext_ln703_109_fu_4214_p1 = tmp_15_V_4_reg_2413;

assign sext_ln703_95_fu_3080_p1 = tmp_1_V_4_reg_2581;

assign sext_ln703_96_fu_3161_p1 = tmp_2_V_4_reg_2569;

assign sext_ln703_97_fu_3242_p1 = tmp_3_V_4_reg_2557;

assign sext_ln703_98_fu_3323_p1 = tmp_4_V_4_reg_2545;

assign sext_ln703_99_fu_3404_p1 = tmp_5_V_4_reg_2533;

assign sext_ln703_fu_2999_p1 = tmp_0_V_4_reg_2593;

assign sext_ln728_100_fu_3901_p1 = shl_ln728_102_fu_3894_p3;

assign sext_ln728_101_fu_3982_p1 = shl_ln728_103_fu_3975_p3;

assign sext_ln728_102_fu_4063_p1 = shl_ln728_104_fu_4056_p3;

assign sext_ln728_103_fu_4144_p1 = shl_ln728_105_fu_4137_p3;

assign sext_ln728_104_fu_4225_p1 = shl_ln728_106_fu_4218_p3;

assign sext_ln728_90_fu_3091_p1 = shl_ln728_s_fu_3084_p3;

assign sext_ln728_91_fu_3172_p1 = shl_ln728_93_fu_3165_p3;

assign sext_ln728_92_fu_3253_p1 = shl_ln728_94_fu_3246_p3;

assign sext_ln728_93_fu_3334_p1 = shl_ln728_95_fu_3327_p3;

assign sext_ln728_94_fu_3415_p1 = shl_ln728_96_fu_3408_p3;

assign sext_ln728_95_fu_3496_p1 = shl_ln728_97_fu_3489_p3;

assign sext_ln728_96_fu_3577_p1 = shl_ln728_98_fu_3570_p3;

assign sext_ln728_97_fu_3658_p1 = shl_ln728_99_fu_3651_p3;

assign sext_ln728_98_fu_3739_p1 = shl_ln728_100_fu_3732_p3;

assign sext_ln728_99_fu_3820_p1 = shl_ln728_101_fu_3813_p3;

assign sext_ln728_fu_3010_p1 = shl_ln3_fu_3003_p3;

assign shl_ln3_fu_3003_p3 = {{tmp_320_reg_4912}, {15'd0}};

assign shl_ln728_100_fu_3732_p3 = {{tmp_329_reg_4957}, {15'd0}};

assign shl_ln728_101_fu_3813_p3 = {{tmp_330_reg_4962}, {15'd0}};

assign shl_ln728_102_fu_3894_p3 = {{tmp_331_reg_4967}, {15'd0}};

assign shl_ln728_103_fu_3975_p3 = {{tmp_332_reg_4972}, {15'd0}};

assign shl_ln728_104_fu_4056_p3 = {{tmp_333_reg_4977}, {15'd0}};

assign shl_ln728_105_fu_4137_p3 = {{tmp_334_reg_4982}, {15'd0}};

assign shl_ln728_106_fu_4218_p3 = {{tmp_335_reg_4987}, {15'd0}};

assign shl_ln728_93_fu_3165_p3 = {{tmp_322_reg_4922}, {15'd0}};

assign shl_ln728_94_fu_3246_p3 = {{tmp_323_reg_4927}, {15'd0}};

assign shl_ln728_95_fu_3327_p3 = {{tmp_324_reg_4932}, {15'd0}};

assign shl_ln728_96_fu_3408_p3 = {{tmp_325_reg_4937}, {15'd0}};

assign shl_ln728_97_fu_3489_p3 = {{tmp_326_reg_4942}, {15'd0}};

assign shl_ln728_98_fu_3570_p3 = {{tmp_327_reg_4947}, {15'd0}};

assign shl_ln728_99_fu_3651_p3 = {{tmp_328_reg_4952}, {15'd0}};

assign shl_ln728_s_fu_3084_p3 = {{tmp_321_reg_4917}, {15'd0}};

assign shl_ln_fu_4295_p3 = {{trunc_ln1265_reg_4545}, {4'd0}};

assign sub_ln1148_32_fu_4401_p2 = (27'd0 - zext_ln1148_fu_4397_p1);

assign sub_ln1148_fu_4381_p2 = (54'd0 - t_V_fu_4365_p3);

assign t_V_fu_4365_p3 = {{p_Val2_s_fu_4327_p18}, {22'd0}};

assign tile_fu_2622_p2 = (tile_0_reg_1301 + 3'd1);

assign tmp_0_V_fu_3032_p2 = ($signed(tmp_0_V_4_reg_2593) + $signed(sext_ln1192_fu_3014_p1));

assign tmp_10_V_fu_3842_p2 = ($signed(tmp_10_V_4_reg_2473) + $signed(sext_ln1192_48_fu_3824_p1));

assign tmp_1198_fu_3024_p3 = add_ln1192_fu_3018_p2[32'd32];

assign tmp_1199_fu_3038_p3 = tmp_0_V_fu_3032_p2[32'd31];

assign tmp_11_V_fu_3923_p2 = ($signed(tmp_11_V_4_reg_2461) + $signed(sext_ln1192_49_fu_3905_p1));

assign tmp_1200_fu_3105_p3 = add_ln1192_135_fu_3099_p2[32'd32];

assign tmp_1201_fu_3119_p3 = tmp_1_V_fu_3113_p2[32'd31];

assign tmp_1202_fu_3186_p3 = add_ln1192_136_fu_3180_p2[32'd32];

assign tmp_1203_fu_3200_p3 = tmp_2_V_fu_3194_p2[32'd31];

assign tmp_1204_fu_3267_p3 = add_ln1192_137_fu_3261_p2[32'd32];

assign tmp_1205_fu_3281_p3 = tmp_3_V_fu_3275_p2[32'd31];

assign tmp_1206_fu_3348_p3 = add_ln1192_138_fu_3342_p2[32'd32];

assign tmp_1207_fu_3362_p3 = tmp_4_V_fu_3356_p2[32'd31];

assign tmp_1208_fu_3429_p3 = add_ln1192_139_fu_3423_p2[32'd32];

assign tmp_1209_fu_3443_p3 = tmp_5_V_fu_3437_p2[32'd31];

assign tmp_1210_fu_3510_p3 = add_ln1192_140_fu_3504_p2[32'd32];

assign tmp_1211_fu_3524_p3 = tmp_6_V_fu_3518_p2[32'd31];

assign tmp_1212_fu_3591_p3 = add_ln1192_141_fu_3585_p2[32'd32];

assign tmp_1213_fu_3605_p3 = tmp_7_V_fu_3599_p2[32'd31];

assign tmp_1214_fu_3672_p3 = add_ln1192_142_fu_3666_p2[32'd32];

assign tmp_1215_fu_3686_p3 = tmp_8_V_fu_3680_p2[32'd31];

assign tmp_1216_fu_3753_p3 = add_ln1192_143_fu_3747_p2[32'd32];

assign tmp_1217_fu_3767_p3 = tmp_9_V_fu_3761_p2[32'd31];

assign tmp_1218_fu_3834_p3 = add_ln1192_144_fu_3828_p2[32'd32];

assign tmp_1219_fu_3848_p3 = tmp_10_V_fu_3842_p2[32'd31];

assign tmp_1220_fu_3915_p3 = add_ln1192_145_fu_3909_p2[32'd32];

assign tmp_1221_fu_3929_p3 = tmp_11_V_fu_3923_p2[32'd31];

assign tmp_1222_fu_3996_p3 = add_ln1192_146_fu_3990_p2[32'd32];

assign tmp_1223_fu_4010_p3 = tmp_12_V_fu_4004_p2[32'd31];

assign tmp_1224_fu_4077_p3 = add_ln1192_147_fu_4071_p2[32'd32];

assign tmp_1225_fu_4091_p3 = tmp_13_V_fu_4085_p2[32'd31];

assign tmp_1226_fu_4158_p3 = add_ln1192_148_fu_4152_p2[32'd32];

assign tmp_1227_fu_4172_p3 = tmp_14_V_fu_4166_p2[32'd31];

assign tmp_1228_fu_4239_p3 = add_ln1192_149_fu_4233_p2[32'd32];

assign tmp_1229_fu_4253_p3 = tmp_15_V_fu_4247_p2[32'd31];

assign tmp_1230_fu_4373_p3 = p_Val2_s_fu_4327_p18[32'd31];

assign tmp_12_V_fu_4004_p2 = ($signed(tmp_12_V_4_reg_2449) + $signed(sext_ln1192_50_fu_3986_p1));

assign tmp_13_V_fu_4085_p2 = ($signed(tmp_13_V_4_reg_2437) + $signed(sext_ln1192_51_fu_4067_p1));

assign tmp_14_V_fu_4166_p2 = ($signed(tmp_14_V_4_reg_2425) + $signed(sext_ln1192_52_fu_4148_p1));

assign tmp_15_V_fu_4247_p2 = ($signed(tmp_15_V_4_reg_2413) + $signed(sext_ln1192_53_fu_4229_p1));

assign tmp_1_V_fu_3113_p2 = ($signed(tmp_1_V_4_reg_2581) + $signed(sext_ln1192_39_fu_3095_p1));

assign tmp_2_V_fu_3194_p2 = ($signed(tmp_2_V_4_reg_2569) + $signed(sext_ln1192_40_fu_3176_p1));

assign tmp_3_V_fu_3275_p2 = ($signed(tmp_3_V_4_reg_2557) + $signed(sext_ln1192_41_fu_3257_p1));

assign tmp_450_fu_2697_p3 = {{select_ln241_1_reg_4580}, {5'd0}};

assign tmp_451_fu_4387_p4 = {{sub_ln1148_fu_4381_p2[53:28]}};

assign tmp_452_fu_4407_p4 = {{p_Val2_s_fu_4327_p18[31:6]}};

assign tmp_4_V_fu_3356_p2 = ($signed(tmp_4_V_4_reg_2545) + $signed(sext_ln1192_42_fu_3338_p1));

assign tmp_5_V_fu_3437_p2 = ($signed(tmp_5_V_4_reg_2533) + $signed(sext_ln1192_43_fu_3419_p1));

assign tmp_6_V_fu_3518_p2 = ($signed(tmp_6_V_4_reg_2521) + $signed(sext_ln1192_44_fu_3500_p1));

assign tmp_7_V_fu_3599_p2 = ($signed(tmp_7_V_4_reg_2509) + $signed(sext_ln1192_45_fu_3581_p1));

assign tmp_8_V_fu_3680_p2 = ($signed(tmp_8_V_4_reg_2497) + $signed(sext_ln1192_46_fu_3662_p1));

assign tmp_9_V_fu_3761_p2 = ($signed(tmp_9_V_4_reg_2485) + $signed(sext_ln1192_47_fu_3743_p1));

assign trunc_ln1265_fu_2644_p1 = tile_0_reg_1301[1:0];

assign trunc_ln203_fu_2640_p1 = k_0_reg_1489[3:0];

assign underflow_fu_4483_p2 = (xor_ln786_fu_4477_p2 & p_Result_s_reg_5096);

assign xor_ln340_111_fu_3139_p2 = (tmp_1201_fu_3119_p3 ^ tmp_1200_fu_3105_p3);

assign xor_ln340_112_fu_3220_p2 = (tmp_1203_fu_3200_p3 ^ tmp_1202_fu_3186_p3);

assign xor_ln340_113_fu_3301_p2 = (tmp_1205_fu_3281_p3 ^ tmp_1204_fu_3267_p3);

assign xor_ln340_114_fu_3382_p2 = (tmp_1207_fu_3362_p3 ^ tmp_1206_fu_3348_p3);

assign xor_ln340_115_fu_3463_p2 = (tmp_1209_fu_3443_p3 ^ tmp_1208_fu_3429_p3);

assign xor_ln340_116_fu_3544_p2 = (tmp_1211_fu_3524_p3 ^ tmp_1210_fu_3510_p3);

assign xor_ln340_117_fu_3625_p2 = (tmp_1213_fu_3605_p3 ^ tmp_1212_fu_3591_p3);

assign xor_ln340_118_fu_3706_p2 = (tmp_1215_fu_3686_p3 ^ tmp_1214_fu_3672_p3);

assign xor_ln340_119_fu_3787_p2 = (tmp_1217_fu_3767_p3 ^ tmp_1216_fu_3753_p3);

assign xor_ln340_120_fu_3868_p2 = (tmp_1219_fu_3848_p3 ^ tmp_1218_fu_3834_p3);

assign xor_ln340_121_fu_3949_p2 = (tmp_1221_fu_3929_p3 ^ tmp_1220_fu_3915_p3);

assign xor_ln340_122_fu_4030_p2 = (tmp_1223_fu_4010_p3 ^ tmp_1222_fu_3996_p3);

assign xor_ln340_123_fu_4111_p2 = (tmp_1225_fu_4091_p3 ^ tmp_1224_fu_4077_p3);

assign xor_ln340_124_fu_4192_p2 = (tmp_1227_fu_4172_p3 ^ tmp_1226_fu_4158_p3);

assign xor_ln340_125_fu_4273_p2 = (tmp_1229_fu_4253_p3 ^ tmp_1228_fu_4239_p3);

assign xor_ln340_fu_3058_p2 = (tmp_1199_fu_3038_p3 ^ tmp_1198_fu_3024_p3);

assign xor_ln785_272_fu_3046_p2 = (tmp_1198_fu_3024_p3 ^ 1'd1);

assign xor_ln785_273_fu_3127_p2 = (tmp_1200_fu_3105_p3 ^ 1'd1);

assign xor_ln785_274_fu_3208_p2 = (tmp_1202_fu_3186_p3 ^ 1'd1);

assign xor_ln785_275_fu_3289_p2 = (tmp_1204_fu_3267_p3 ^ 1'd1);

assign xor_ln785_276_fu_3370_p2 = (tmp_1206_fu_3348_p3 ^ 1'd1);

assign xor_ln785_277_fu_3451_p2 = (tmp_1208_fu_3429_p3 ^ 1'd1);

assign xor_ln785_278_fu_3532_p2 = (tmp_1210_fu_3510_p3 ^ 1'd1);

assign xor_ln785_279_fu_3613_p2 = (tmp_1212_fu_3591_p3 ^ 1'd1);

assign xor_ln785_280_fu_3694_p2 = (tmp_1214_fu_3672_p3 ^ 1'd1);

assign xor_ln785_281_fu_3775_p2 = (tmp_1216_fu_3753_p3 ^ 1'd1);

assign xor_ln785_282_fu_3856_p2 = (tmp_1218_fu_3834_p3 ^ 1'd1);

assign xor_ln785_283_fu_3937_p2 = (tmp_1220_fu_3915_p3 ^ 1'd1);

assign xor_ln785_284_fu_4018_p2 = (tmp_1222_fu_3996_p3 ^ 1'd1);

assign xor_ln785_285_fu_4099_p2 = (tmp_1224_fu_4077_p3 ^ 1'd1);

assign xor_ln785_286_fu_4180_p2 = (tmp_1226_fu_4158_p3 ^ 1'd1);

assign xor_ln785_287_fu_4261_p2 = (tmp_1228_fu_4239_p3 ^ 1'd1);

assign xor_ln785_fu_4462_p2 = (p_Result_s_reg_5096 ^ 1'd1);

assign xor_ln786_fu_4477_p2 = (1'd1 ^ and_ln786_fu_4473_p2);

assign zext_ln1148_32_fu_4417_p1 = tmp_452_fu_4407_p4;

assign zext_ln1148_fu_4397_p1 = tmp_451_fu_4387_p4;

assign zext_ln1265_1_fu_2704_p1 = tmp_450_fu_2697_p3;

assign zext_ln1265_2_fu_2714_p1 = select_ln241_reg_4575;

assign zext_ln1265_3_fu_2723_p1 = add_ln1265_1_fu_2717_p2;

assign zext_ln1265_fu_2694_p1 = select_ln241_1_reg_4580;

assign zext_ln245_fu_4314_p1 = k1_0_reg_2605;

assign zext_ln247_fu_4451_p1 = add_ln247_reg_5086;

always @ (posedge ap_clk) begin
    shl_ln_reg_5072[3:0] <= 4'b0000;
end

endmodule //avgpool_8x8
