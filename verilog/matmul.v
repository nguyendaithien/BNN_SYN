// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module matmul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        outputs_V_address0,
        outputs_V_ce0,
        outputs_V_we0,
        outputs_V_d0,
        pool_out_buf_address0,
        pool_out_buf_ce0,
        pool_out_buf_q0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_pp1_stage0 = 7'd8;
parameter    ap_ST_fsm_state10 = 7'd16;
parameter    ap_ST_fsm_state11 = 7'd32;
parameter    ap_ST_fsm_state12 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] outputs_V_address0;
output   outputs_V_ce0;
output   outputs_V_we0;
output  [31:0] outputs_V_d0;
output  [5:0] pool_out_buf_address0;
output   pool_out_buf_ce0;
input  [31:0] pool_out_buf_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg outputs_V_ce0;
reg outputs_V_we0;
reg pool_out_buf_ce0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] linear_weight_fix_V_s_address0;
reg    linear_weight_fix_V_s_ce0;
wire   [9:0] linear_weight_fix_V_s_q0;
wire   [5:0] linear_weight_fix_V_1_address0;
reg    linear_weight_fix_V_1_ce0;
wire   [9:0] linear_weight_fix_V_1_q0;
wire   [5:0] linear_weight_fix_V_2_address0;
reg    linear_weight_fix_V_2_ce0;
wire   [9:0] linear_weight_fix_V_2_q0;
wire   [5:0] linear_weight_fix_V_3_address0;
reg    linear_weight_fix_V_3_ce0;
wire   [8:0] linear_weight_fix_V_3_q0;
wire   [5:0] linear_weight_fix_V_4_address0;
reg    linear_weight_fix_V_4_ce0;
wire   [9:0] linear_weight_fix_V_4_q0;
wire   [5:0] linear_weight_fix_V_5_address0;
reg    linear_weight_fix_V_5_ce0;
wire   [9:0] linear_weight_fix_V_5_q0;
wire   [5:0] linear_weight_fix_V_6_address0;
reg    linear_weight_fix_V_6_ce0;
wire   [9:0] linear_weight_fix_V_6_q0;
wire   [5:0] linear_weight_fix_V_7_address0;
reg    linear_weight_fix_V_7_ce0;
wire   [9:0] linear_weight_fix_V_7_q0;
wire   [5:0] linear_weight_fix_V_8_address0;
reg    linear_weight_fix_V_8_ce0;
wire   [9:0] linear_weight_fix_V_8_q0;
wire   [5:0] linear_weight_fix_V_9_address0;
reg    linear_weight_fix_V_9_ce0;
wire   [9:0] linear_weight_fix_V_9_q0;
reg   [15:0] buf_9_V_210_reg_375;
reg   [15:0] buf_8_V_29_reg_385;
reg   [15:0] buf_7_V_28_reg_395;
reg   [15:0] buf_6_V_27_reg_405;
reg   [15:0] buf_5_V_26_reg_415;
reg   [15:0] buf_4_V_25_reg_425;
reg   [15:0] buf_3_V_24_reg_435;
reg   [15:0] buf_2_V_23_reg_445;
reg   [15:0] buf_1_V_22_reg_455;
reg   [15:0] buf_0_V_21_reg_465;
reg   [6:0] cii_0_reg_475;
reg   [15:0] buf_0_V_0_load_reg_3810;
wire    ap_CS_fsm_state2;
reg   [15:0] buf_1_V_0_load_reg_3815;
reg   [15:0] buf_2_V_0_load_reg_3820;
reg   [15:0] buf_3_V_0_load_reg_3825;
reg   [15:0] buf_4_V_0_load_reg_3830;
reg   [15:0] buf_5_V_0_load_reg_3835;
reg   [15:0] buf_6_V_0_load_reg_3840;
reg   [15:0] buf_7_V_0_load_reg_3845;
reg   [15:0] buf_8_V_0_load_reg_3850;
reg   [15:0] buf_9_V_0_load_reg_3855;
wire   [3:0] coo_fu_533_p2;
wire   [0:0] icmp_ln271_fu_659_p2;
reg   [0:0] icmp_ln271_reg_3868;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state4_pp1_stage0_iter0;
wire    ap_block_state5_pp1_stage0_iter1;
wire    ap_block_state6_pp1_stage0_iter2;
wire    ap_block_state7_pp1_stage0_iter3;
wire    ap_block_state8_pp1_stage0_iter4;
wire    ap_block_state9_pp1_stage0_iter5;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln271_reg_3868_pp1_iter1_reg;
reg   [0:0] icmp_ln271_reg_3868_pp1_iter2_reg;
reg   [0:0] icmp_ln271_reg_3868_pp1_iter3_reg;
reg   [0:0] icmp_ln271_reg_3868_pp1_iter4_reg;
wire   [6:0] cii_fu_665_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] zext_ln273_fu_671_p1;
reg   [63:0] zext_ln273_reg_3877;
reg   [0:0] p_Result_s_reg_3896;
wire   [15:0] tmp_in_V_1_fu_714_p2;
reg   [15:0] tmp_in_V_1_reg_3904;
wire   [0:0] carry_2_fu_734_p2;
reg   [0:0] carry_2_reg_3910;
reg   [0:0] p_Result_3_reg_3918;
wire  signed [15:0] select_ln340_2_fu_826_p3;
reg  signed [15:0] select_ln340_2_reg_3974;
wire   [9:0] add_ln415_fu_856_p2;
reg  signed [9:0] add_ln415_reg_3980;
wire   [9:0] add_ln415_1_fu_884_p2;
reg  signed [9:0] add_ln415_1_reg_3985;
wire   [9:0] add_ln415_2_fu_912_p2;
reg  signed [9:0] add_ln415_2_reg_3990;
wire   [8:0] add_ln415_3_fu_940_p2;
reg  signed [8:0] add_ln415_3_reg_3995;
wire   [9:0] add_ln415_4_fu_968_p2;
reg  signed [9:0] add_ln415_4_reg_4000;
wire   [9:0] add_ln415_5_fu_996_p2;
reg  signed [9:0] add_ln415_5_reg_4005;
wire   [9:0] add_ln415_6_fu_1024_p2;
reg  signed [9:0] add_ln415_6_reg_4010;
wire   [9:0] add_ln415_7_fu_1052_p2;
reg  signed [9:0] add_ln415_7_reg_4015;
wire   [9:0] add_ln415_8_fu_1080_p2;
reg  signed [9:0] add_ln415_8_reg_4020;
wire   [9:0] add_ln415_9_fu_1108_p2;
reg  signed [9:0] add_ln415_9_reg_4025;
wire  signed [26:0] mul_ln1118_fu_3670_p2;
reg  signed [26:0] mul_ln1118_reg_4030;
wire   [23:0] trunc_ln1192_fu_1123_p1;
reg   [23:0] trunc_ln1192_reg_4035;
reg   [0:0] tmp_83_reg_4040;
wire  signed [26:0] mul_ln1118_1_fu_3678_p2;
reg  signed [26:0] mul_ln1118_1_reg_4045;
wire   [23:0] trunc_ln1192_1_fu_1136_p1;
reg   [23:0] trunc_ln1192_1_reg_4050;
reg   [0:0] tmp_89_reg_4055;
wire  signed [26:0] mul_ln1118_2_fu_3686_p2;
reg  signed [26:0] mul_ln1118_2_reg_4060;
wire   [23:0] trunc_ln1192_2_fu_1149_p1;
reg   [23:0] trunc_ln1192_2_reg_4065;
reg   [0:0] tmp_95_reg_4070;
wire  signed [25:0] mul_ln1118_3_fu_3694_p2;
reg  signed [25:0] mul_ln1118_3_reg_4075;
wire   [23:0] trunc_ln1192_3_fu_1162_p1;
reg   [23:0] trunc_ln1192_3_reg_4080;
reg   [0:0] tmp_101_reg_4085;
wire  signed [26:0] mul_ln1118_4_fu_3702_p2;
reg  signed [26:0] mul_ln1118_4_reg_4090;
wire   [23:0] trunc_ln1192_4_fu_1175_p1;
reg   [23:0] trunc_ln1192_4_reg_4095;
reg   [0:0] tmp_107_reg_4100;
wire  signed [26:0] mul_ln1118_5_fu_3710_p2;
reg  signed [26:0] mul_ln1118_5_reg_4105;
wire   [23:0] trunc_ln1192_5_fu_1188_p1;
reg   [23:0] trunc_ln1192_5_reg_4110;
reg   [0:0] tmp_113_reg_4115;
wire  signed [26:0] mul_ln1118_6_fu_3718_p2;
reg  signed [26:0] mul_ln1118_6_reg_4120;
wire   [23:0] trunc_ln1192_6_fu_1201_p1;
reg   [23:0] trunc_ln1192_6_reg_4125;
reg   [0:0] tmp_119_reg_4130;
wire  signed [26:0] mul_ln1118_7_fu_3726_p2;
reg  signed [26:0] mul_ln1118_7_reg_4135;
wire   [23:0] trunc_ln1192_7_fu_1214_p1;
reg   [23:0] trunc_ln1192_7_reg_4140;
reg   [0:0] tmp_125_reg_4145;
wire  signed [26:0] mul_ln1118_8_fu_3734_p2;
reg  signed [26:0] mul_ln1118_8_reg_4150;
wire   [23:0] trunc_ln1192_8_fu_1227_p1;
reg   [23:0] trunc_ln1192_8_reg_4155;
reg   [0:0] tmp_131_reg_4160;
wire  signed [26:0] mul_ln1118_9_fu_3742_p2;
reg  signed [26:0] mul_ln1118_9_reg_4165;
wire   [23:0] trunc_ln1192_9_fu_1240_p1;
reg   [23:0] trunc_ln1192_9_reg_4170;
reg   [0:0] tmp_137_reg_4175;
wire   [15:0] buf_0_V_fu_1305_p2;
reg   [15:0] buf_0_V_reg_4180;
wire   [0:0] and_ln785_fu_1437_p2;
reg   [0:0] and_ln785_reg_4185;
wire   [0:0] or_ln785_11_fu_1467_p2;
reg   [0:0] or_ln785_11_reg_4190;
wire   [15:0] buf_1_V_fu_1528_p2;
reg   [15:0] buf_1_V_reg_4195;
wire   [0:0] and_ln785_1_fu_1660_p2;
reg   [0:0] and_ln785_1_reg_4200;
wire   [0:0] or_ln785_12_fu_1690_p2;
reg   [0:0] or_ln785_12_reg_4205;
wire   [15:0] buf_2_V_fu_1751_p2;
reg   [15:0] buf_2_V_reg_4210;
wire   [0:0] and_ln785_2_fu_1883_p2;
reg   [0:0] and_ln785_2_reg_4215;
wire   [0:0] or_ln785_13_fu_1913_p2;
reg   [0:0] or_ln785_13_reg_4220;
wire   [15:0] buf_3_V_fu_1978_p2;
reg   [15:0] buf_3_V_reg_4225;
wire   [0:0] and_ln785_3_fu_2110_p2;
reg   [0:0] and_ln785_3_reg_4230;
wire   [0:0] or_ln785_14_fu_2140_p2;
reg   [0:0] or_ln785_14_reg_4235;
wire   [15:0] buf_4_V_fu_2201_p2;
reg   [15:0] buf_4_V_reg_4240;
wire   [0:0] and_ln785_4_fu_2333_p2;
reg   [0:0] and_ln785_4_reg_4245;
wire   [0:0] or_ln785_15_fu_2363_p2;
reg   [0:0] or_ln785_15_reg_4250;
wire   [15:0] buf_5_V_fu_2424_p2;
reg   [15:0] buf_5_V_reg_4255;
wire   [0:0] and_ln785_5_fu_2556_p2;
reg   [0:0] and_ln785_5_reg_4260;
wire   [0:0] or_ln785_16_fu_2586_p2;
reg   [0:0] or_ln785_16_reg_4265;
wire   [15:0] buf_6_V_fu_2647_p2;
reg   [15:0] buf_6_V_reg_4270;
wire   [0:0] and_ln785_6_fu_2779_p2;
reg   [0:0] and_ln785_6_reg_4275;
wire   [0:0] or_ln785_17_fu_2809_p2;
reg   [0:0] or_ln785_17_reg_4280;
wire   [15:0] buf_7_V_fu_2870_p2;
reg   [15:0] buf_7_V_reg_4285;
wire   [0:0] and_ln785_7_fu_3002_p2;
reg   [0:0] and_ln785_7_reg_4290;
wire   [0:0] or_ln785_18_fu_3032_p2;
reg   [0:0] or_ln785_18_reg_4295;
wire   [15:0] buf_8_V_1_fu_3093_p2;
reg   [15:0] buf_8_V_1_reg_4300;
wire   [0:0] and_ln785_8_fu_3225_p2;
reg   [0:0] and_ln785_8_reg_4305;
wire   [0:0] or_ln785_19_fu_3255_p2;
reg   [0:0] or_ln785_19_reg_4310;
wire   [15:0] buf_9_V_fu_3316_p2;
reg   [15:0] buf_9_V_reg_4315;
wire   [0:0] and_ln785_9_fu_3448_p2;
reg   [0:0] and_ln785_9_reg_4320;
wire   [0:0] or_ln785_20_fu_3478_p2;
reg   [0:0] or_ln785_20_reg_4325;
wire   [15:0] select_ln785_1_fu_3491_p3;
reg    ap_enable_reg_pp1_iter5;
wire   [15:0] select_ln785_3_fu_3504_p3;
wire   [15:0] select_ln785_5_fu_3517_p3;
wire   [15:0] select_ln785_7_fu_3530_p3;
wire   [15:0] select_ln785_9_fu_3543_p3;
wire   [15:0] select_ln785_11_fu_3556_p3;
wire   [15:0] select_ln785_13_fu_3569_p3;
wire   [15:0] select_ln785_15_fu_3582_p3;
wire   [15:0] select_ln785_17_fu_3595_p3;
wire   [15:0] select_ln785_19_fu_3608_p3;
wire   [3:0] coo_1_fu_3620_p2;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state3;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state4;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
wire   [3:0] ap_phi_mux_coo_0_phi_fu_368_p4;
reg   [3:0] coo_0_reg_364;
wire   [0:0] icmp_ln266_fu_527_p2;
reg   [15:0] ap_phi_mux_buf_9_V_210_phi_fu_378_p4;
wire    ap_block_pp1_stage0;
reg   [15:0] ap_phi_mux_buf_8_V_29_phi_fu_388_p4;
reg   [15:0] ap_phi_mux_buf_7_V_28_phi_fu_398_p4;
reg   [15:0] ap_phi_mux_buf_6_V_27_phi_fu_408_p4;
reg   [15:0] ap_phi_mux_buf_5_V_26_phi_fu_418_p4;
reg   [15:0] ap_phi_mux_buf_4_V_25_phi_fu_428_p4;
reg   [15:0] ap_phi_mux_buf_3_V_24_phi_fu_438_p4;
reg   [15:0] ap_phi_mux_buf_2_V_23_phi_fu_448_p4;
reg   [15:0] ap_phi_mux_buf_1_V_22_phi_fu_458_p4;
reg   [15:0] ap_phi_mux_buf_0_V_21_phi_fu_468_p4;
reg   [3:0] coo4_0_reg_486;
wire   [0:0] icmp_ln284_fu_3614_p2;
wire    ap_CS_fsm_state10;
wire   [63:0] zext_ln286_fu_3626_p1;
reg   [15:0] buf_0_V_0_fu_168;
wire  signed [15:0] sext_ln415_fu_605_p1;
reg   [15:0] buf_1_V_0_fu_172;
reg   [15:0] buf_2_V_0_fu_176;
reg   [15:0] buf_3_V_0_fu_180;
reg   [15:0] buf_4_V_0_fu_184;
reg   [15:0] buf_5_V_0_fu_188;
reg   [15:0] buf_6_V_0_fu_192;
reg   [15:0] buf_7_V_0_fu_196;
reg   [15:0] buf_8_V_0_fu_200;
reg   [15:0] buf_9_V_0_fu_204;
wire   [11:0] p_Val2_s_fu_539_p18;
wire   [10:0] trunc_ln1_fu_581_p4;
wire   [0:0] trunc_ln700_fu_577_p1;
wire  signed [11:0] sext_ln713_fu_591_p1;
wire   [11:0] zext_ln713_fu_595_p1;
wire   [11:0] buf_0_V_2_fu_599_p2;
wire   [0:0] tmp_68_fu_702_p3;
wire   [15:0] zext_ln415_fu_710_p1;
wire   [15:0] tmp_in_V_fu_684_p4;
wire   [0:0] tmp_69_fu_720_p3;
wire   [0:0] p_Result_2_fu_694_p3;
wire   [0:0] xor_ln416_fu_728_p2;
wire   [0:0] xor_ln779_fu_748_p2;
wire   [0:0] xor_ln785_fu_759_p2;
wire   [0:0] or_ln785_fu_763_p2;
wire   [0:0] deleted_ones_fu_753_p3;
wire   [0:0] and_ln786_fu_774_p2;
wire   [0:0] or_ln786_fu_779_p2;
wire   [0:0] xor_ln786_fu_784_p2;
wire   [0:0] underflow_fu_790_p2;
wire   [0:0] overflow_fu_768_p2;
wire   [0:0] or_ln340_2_fu_801_p2;
wire   [0:0] or_ln340_fu_795_p2;
wire   [0:0] or_ln340_1_fu_807_p2;
wire   [15:0] select_ln340_fu_812_p3;
wire   [15:0] select_ln388_fu_819_p3;
wire   [8:0] tmp_71_fu_834_p4;
wire   [0:0] trunc_ln415_fu_848_p1;
wire  signed [9:0] sext_ln713_1_fu_844_p1;
wire   [9:0] zext_ln415_11_fu_852_p1;
wire   [8:0] tmp_72_fu_862_p4;
wire   [0:0] trunc_ln415_1_fu_876_p1;
wire  signed [9:0] sext_ln713_2_fu_872_p1;
wire   [9:0] zext_ln415_12_fu_880_p1;
wire   [8:0] tmp_73_fu_890_p4;
wire   [0:0] trunc_ln415_2_fu_904_p1;
wire  signed [9:0] sext_ln713_3_fu_900_p1;
wire   [9:0] zext_ln415_13_fu_908_p1;
wire   [7:0] tmp_74_fu_918_p4;
wire   [0:0] trunc_ln415_3_fu_932_p1;
wire  signed [8:0] sext_ln713_4_fu_928_p1;
wire   [8:0] zext_ln415_14_fu_936_p1;
wire   [8:0] tmp_75_fu_946_p4;
wire   [0:0] trunc_ln415_4_fu_960_p1;
wire  signed [9:0] sext_ln713_5_fu_956_p1;
wire   [9:0] zext_ln415_15_fu_964_p1;
wire   [8:0] tmp_76_fu_974_p4;
wire   [0:0] trunc_ln415_5_fu_988_p1;
wire  signed [9:0] sext_ln713_6_fu_984_p1;
wire   [9:0] zext_ln415_16_fu_992_p1;
wire   [8:0] tmp_77_fu_1002_p4;
wire   [0:0] trunc_ln415_6_fu_1016_p1;
wire  signed [9:0] sext_ln713_7_fu_1012_p1;
wire   [9:0] zext_ln415_17_fu_1020_p1;
wire   [8:0] tmp_78_fu_1030_p4;
wire   [0:0] trunc_ln415_7_fu_1044_p1;
wire  signed [9:0] sext_ln713_8_fu_1040_p1;
wire   [9:0] zext_ln415_18_fu_1048_p1;
wire   [8:0] tmp_79_fu_1058_p4;
wire   [0:0] trunc_ln415_8_fu_1072_p1;
wire  signed [9:0] sext_ln713_9_fu_1068_p1;
wire   [9:0] zext_ln415_19_fu_1076_p1;
wire   [8:0] tmp_80_fu_1086_p4;
wire   [0:0] trunc_ln415_9_fu_1100_p1;
wire  signed [9:0] sext_ln713_10_fu_1096_p1;
wire   [9:0] zext_ln415_20_fu_1104_p1;
wire  signed [22:0] shl_ln728_1_fu_1250_p3;
wire  signed [26:0] sext_ln728_fu_1258_p1;
wire  signed [23:0] sext_ln1192_fu_1262_p1;
(* use_dsp48 = "no" *) wire   [26:0] add_ln1192_fu_1266_p2;
wire   [15:0] trunc_ln708_s_fu_1284_p4;
wire   [15:0] zext_ln415_1_fu_1302_p1;
wire   [0:0] tmp_84_fu_1311_p3;
wire   [0:0] tmp_82_fu_1294_p3;
wire   [0:0] xor_ln416_1_fu_1319_p2;
wire   [2:0] tmp_16_fu_1339_p4;
wire   [3:0] tmp_17_fu_1355_p4;
wire   [0:0] and_ln416_fu_1325_p2;
wire   [0:0] icmp_ln879_1_fu_1365_p2;
wire   [0:0] icmp_ln768_fu_1371_p2;
wire   [23:0] add_ln1192_10_fu_1271_p2;
wire   [0:0] tmp_86_fu_1385_p3;
wire   [0:0] icmp_ln879_fu_1349_p2;
wire   [0:0] xor_ln779_1_fu_1393_p2;
wire   [0:0] and_ln779_fu_1399_p2;
wire   [0:0] select_ln777_fu_1377_p3;
wire   [0:0] tmp_85_fu_1331_p3;
wire   [0:0] xor_ln785_1_fu_1419_p2;
wire   [0:0] tmp_81_fu_1276_p3;
wire   [0:0] or_ln785_1_fu_1425_p2;
wire   [0:0] xor_ln785_2_fu_1431_p2;
wire   [0:0] select_ln416_fu_1405_p3;
wire   [0:0] and_ln781_fu_1413_p2;
wire   [0:0] and_ln786_2_fu_1443_p2;
wire   [0:0] or_ln786_1_fu_1449_p2;
wire   [0:0] xor_ln786_1_fu_1455_p2;
wire   [0:0] and_ln786_3_fu_1461_p2;
wire  signed [22:0] shl_ln728_2_fu_1473_p3;
wire  signed [26:0] sext_ln728_1_fu_1481_p1;
wire  signed [23:0] sext_ln1192_1_fu_1485_p1;
(* use_dsp48 = "no" *) wire   [26:0] add_ln1192_1_fu_1489_p2;
wire   [15:0] trunc_ln708_1_fu_1507_p4;
wire   [15:0] zext_ln415_2_fu_1525_p1;
wire   [0:0] tmp_90_fu_1534_p3;
wire   [0:0] tmp_88_fu_1517_p3;
wire   [0:0] xor_ln416_2_fu_1542_p2;
wire   [2:0] tmp_18_fu_1562_p4;
wire   [3:0] tmp_19_fu_1578_p4;
wire   [0:0] and_ln416_1_fu_1548_p2;
wire   [0:0] icmp_ln879_3_fu_1588_p2;
wire   [0:0] icmp_ln768_1_fu_1594_p2;
wire   [23:0] add_ln1192_11_fu_1494_p2;
wire   [0:0] tmp_92_fu_1608_p3;
wire   [0:0] icmp_ln879_2_fu_1572_p2;
wire   [0:0] xor_ln779_2_fu_1616_p2;
wire   [0:0] and_ln779_1_fu_1622_p2;
wire   [0:0] select_ln777_1_fu_1600_p3;
wire   [0:0] tmp_91_fu_1554_p3;
wire   [0:0] xor_ln785_3_fu_1642_p2;
wire   [0:0] tmp_87_fu_1499_p3;
wire   [0:0] or_ln785_2_fu_1648_p2;
wire   [0:0] xor_ln785_4_fu_1654_p2;
wire   [0:0] select_ln416_1_fu_1628_p3;
wire   [0:0] and_ln781_1_fu_1636_p2;
wire   [0:0] and_ln786_4_fu_1666_p2;
wire   [0:0] or_ln786_2_fu_1672_p2;
wire   [0:0] xor_ln786_2_fu_1678_p2;
wire   [0:0] and_ln786_5_fu_1684_p2;
wire  signed [22:0] shl_ln728_3_fu_1696_p3;
wire  signed [26:0] sext_ln728_2_fu_1704_p1;
wire  signed [23:0] sext_ln1192_2_fu_1708_p1;
(* use_dsp48 = "no" *) wire   [26:0] add_ln1192_2_fu_1712_p2;
wire   [15:0] trunc_ln708_2_fu_1730_p4;
wire   [15:0] zext_ln415_3_fu_1748_p1;
wire   [0:0] tmp_96_fu_1757_p3;
wire   [0:0] tmp_94_fu_1740_p3;
wire   [0:0] xor_ln416_3_fu_1765_p2;
wire   [2:0] tmp_20_fu_1785_p4;
wire   [3:0] tmp_21_fu_1801_p4;
wire   [0:0] and_ln416_2_fu_1771_p2;
wire   [0:0] icmp_ln879_5_fu_1811_p2;
wire   [0:0] icmp_ln768_2_fu_1817_p2;
wire   [23:0] add_ln1192_12_fu_1717_p2;
wire   [0:0] tmp_98_fu_1831_p3;
wire   [0:0] icmp_ln879_4_fu_1795_p2;
wire   [0:0] xor_ln779_3_fu_1839_p2;
wire   [0:0] and_ln779_2_fu_1845_p2;
wire   [0:0] select_ln777_2_fu_1823_p3;
wire   [0:0] tmp_97_fu_1777_p3;
wire   [0:0] xor_ln785_5_fu_1865_p2;
wire   [0:0] tmp_93_fu_1722_p3;
wire   [0:0] or_ln785_3_fu_1871_p2;
wire   [0:0] xor_ln785_6_fu_1877_p2;
wire   [0:0] select_ln416_2_fu_1851_p3;
wire   [0:0] and_ln781_2_fu_1859_p2;
wire   [0:0] and_ln786_6_fu_1889_p2;
wire   [0:0] or_ln786_3_fu_1895_p2;
wire   [0:0] xor_ln786_3_fu_1901_p2;
wire   [0:0] and_ln786_7_fu_1907_p2;
wire  signed [22:0] shl_ln728_4_fu_1919_p3;
wire  signed [26:0] sext_ln1192_10_fu_1931_p1;
wire  signed [26:0] sext_ln728_3_fu_1927_p1;
wire  signed [23:0] sext_ln1192_3_fu_1934_p1;
wire   [26:0] add_ln1192_3_fu_1938_p2;
wire   [15:0] trunc_ln708_3_fu_1957_p4;
wire   [15:0] zext_ln415_4_fu_1975_p1;
wire   [0:0] tmp_102_fu_1984_p3;
wire   [0:0] tmp_100_fu_1967_p3;
wire   [0:0] xor_ln416_4_fu_1992_p2;
wire   [2:0] tmp_22_fu_2012_p4;
wire   [3:0] tmp_23_fu_2028_p4;
wire   [0:0] and_ln416_3_fu_1998_p2;
wire   [0:0] icmp_ln879_7_fu_2038_p2;
wire   [0:0] icmp_ln768_3_fu_2044_p2;
wire   [23:0] add_ln1192_13_fu_1944_p2;
wire   [0:0] tmp_104_fu_2058_p3;
wire   [0:0] icmp_ln879_6_fu_2022_p2;
wire   [0:0] xor_ln779_4_fu_2066_p2;
wire   [0:0] and_ln779_3_fu_2072_p2;
wire   [0:0] select_ln777_3_fu_2050_p3;
wire   [0:0] tmp_103_fu_2004_p3;
wire   [0:0] xor_ln785_7_fu_2092_p2;
wire   [0:0] tmp_99_fu_1949_p3;
wire   [0:0] or_ln785_4_fu_2098_p2;
wire   [0:0] xor_ln785_8_fu_2104_p2;
wire   [0:0] select_ln416_3_fu_2078_p3;
wire   [0:0] and_ln781_3_fu_2086_p2;
wire   [0:0] and_ln786_8_fu_2116_p2;
wire   [0:0] or_ln786_4_fu_2122_p2;
wire   [0:0] xor_ln786_4_fu_2128_p2;
wire   [0:0] and_ln786_9_fu_2134_p2;
wire  signed [22:0] shl_ln728_5_fu_2146_p3;
wire  signed [26:0] sext_ln728_4_fu_2154_p1;
wire  signed [23:0] sext_ln1192_4_fu_2158_p1;
(* use_dsp48 = "no" *) wire   [26:0] add_ln1192_4_fu_2162_p2;
wire   [15:0] trunc_ln708_4_fu_2180_p4;
wire   [15:0] zext_ln415_5_fu_2198_p1;
wire   [0:0] tmp_108_fu_2207_p3;
wire   [0:0] tmp_106_fu_2190_p3;
wire   [0:0] xor_ln416_5_fu_2215_p2;
wire   [2:0] tmp_24_fu_2235_p4;
wire   [3:0] tmp_25_fu_2251_p4;
wire   [0:0] and_ln416_4_fu_2221_p2;
wire   [0:0] icmp_ln879_9_fu_2261_p2;
wire   [0:0] icmp_ln768_4_fu_2267_p2;
wire   [23:0] add_ln1192_14_fu_2167_p2;
wire   [0:0] tmp_110_fu_2281_p3;
wire   [0:0] icmp_ln879_8_fu_2245_p2;
wire   [0:0] xor_ln779_5_fu_2289_p2;
wire   [0:0] and_ln779_4_fu_2295_p2;
wire   [0:0] select_ln777_4_fu_2273_p3;
wire   [0:0] tmp_109_fu_2227_p3;
wire   [0:0] xor_ln785_9_fu_2315_p2;
wire   [0:0] tmp_105_fu_2172_p3;
wire   [0:0] or_ln785_5_fu_2321_p2;
wire   [0:0] xor_ln785_10_fu_2327_p2;
wire   [0:0] select_ln416_4_fu_2301_p3;
wire   [0:0] and_ln781_4_fu_2309_p2;
wire   [0:0] and_ln786_10_fu_2339_p2;
wire   [0:0] or_ln786_5_fu_2345_p2;
wire   [0:0] xor_ln786_5_fu_2351_p2;
wire   [0:0] and_ln786_11_fu_2357_p2;
wire  signed [22:0] shl_ln728_6_fu_2369_p3;
wire  signed [26:0] sext_ln728_5_fu_2377_p1;
wire  signed [23:0] sext_ln1192_5_fu_2381_p1;
(* use_dsp48 = "no" *) wire   [26:0] add_ln1192_5_fu_2385_p2;
wire   [15:0] trunc_ln708_5_fu_2403_p4;
wire   [15:0] zext_ln415_6_fu_2421_p1;
wire   [0:0] tmp_114_fu_2430_p3;
wire   [0:0] tmp_112_fu_2413_p3;
wire   [0:0] xor_ln416_6_fu_2438_p2;
wire   [2:0] tmp_26_fu_2458_p4;
wire   [3:0] tmp_27_fu_2474_p4;
wire   [0:0] and_ln416_5_fu_2444_p2;
wire   [0:0] icmp_ln879_11_fu_2484_p2;
wire   [0:0] icmp_ln768_5_fu_2490_p2;
wire   [23:0] add_ln1192_15_fu_2390_p2;
wire   [0:0] tmp_116_fu_2504_p3;
wire   [0:0] icmp_ln879_10_fu_2468_p2;
wire   [0:0] xor_ln779_6_fu_2512_p2;
wire   [0:0] and_ln779_5_fu_2518_p2;
wire   [0:0] select_ln777_5_fu_2496_p3;
wire   [0:0] tmp_115_fu_2450_p3;
wire   [0:0] xor_ln785_11_fu_2538_p2;
wire   [0:0] tmp_111_fu_2395_p3;
wire   [0:0] or_ln785_6_fu_2544_p2;
wire   [0:0] xor_ln785_12_fu_2550_p2;
wire   [0:0] select_ln416_5_fu_2524_p3;
wire   [0:0] and_ln781_5_fu_2532_p2;
wire   [0:0] and_ln786_12_fu_2562_p2;
wire   [0:0] or_ln786_6_fu_2568_p2;
wire   [0:0] xor_ln786_6_fu_2574_p2;
wire   [0:0] and_ln786_13_fu_2580_p2;
wire  signed [22:0] shl_ln728_7_fu_2592_p3;
wire  signed [26:0] sext_ln728_6_fu_2600_p1;
wire  signed [23:0] sext_ln1192_6_fu_2604_p1;
(* use_dsp48 = "no" *) wire   [26:0] add_ln1192_6_fu_2608_p2;
wire   [15:0] trunc_ln708_6_fu_2626_p4;
wire   [15:0] zext_ln415_7_fu_2644_p1;
wire   [0:0] tmp_120_fu_2653_p3;
wire   [0:0] tmp_118_fu_2636_p3;
wire   [0:0] xor_ln416_7_fu_2661_p2;
wire   [2:0] tmp_28_fu_2681_p4;
wire   [3:0] tmp_29_fu_2697_p4;
wire   [0:0] and_ln416_6_fu_2667_p2;
wire   [0:0] icmp_ln879_13_fu_2707_p2;
wire   [0:0] icmp_ln768_6_fu_2713_p2;
wire   [23:0] add_ln1192_16_fu_2613_p2;
wire   [0:0] tmp_122_fu_2727_p3;
wire   [0:0] icmp_ln879_12_fu_2691_p2;
wire   [0:0] xor_ln779_7_fu_2735_p2;
wire   [0:0] and_ln779_6_fu_2741_p2;
wire   [0:0] select_ln777_6_fu_2719_p3;
wire   [0:0] tmp_121_fu_2673_p3;
wire   [0:0] xor_ln785_13_fu_2761_p2;
wire   [0:0] tmp_117_fu_2618_p3;
wire   [0:0] or_ln785_7_fu_2767_p2;
wire   [0:0] xor_ln785_14_fu_2773_p2;
wire   [0:0] select_ln416_6_fu_2747_p3;
wire   [0:0] and_ln781_6_fu_2755_p2;
wire   [0:0] and_ln786_14_fu_2785_p2;
wire   [0:0] or_ln786_7_fu_2791_p2;
wire   [0:0] xor_ln786_7_fu_2797_p2;
wire   [0:0] and_ln786_15_fu_2803_p2;
wire  signed [22:0] shl_ln728_8_fu_2815_p3;
wire  signed [26:0] sext_ln728_7_fu_2823_p1;
wire  signed [23:0] sext_ln1192_7_fu_2827_p1;
(* use_dsp48 = "no" *) wire   [26:0] add_ln1192_7_fu_2831_p2;
wire   [15:0] trunc_ln708_7_fu_2849_p4;
wire   [15:0] zext_ln415_8_fu_2867_p1;
wire   [0:0] tmp_126_fu_2876_p3;
wire   [0:0] tmp_124_fu_2859_p3;
wire   [0:0] xor_ln416_8_fu_2884_p2;
wire   [2:0] tmp_30_fu_2904_p4;
wire   [3:0] tmp_31_fu_2920_p4;
wire   [0:0] and_ln416_7_fu_2890_p2;
wire   [0:0] icmp_ln879_15_fu_2930_p2;
wire   [0:0] icmp_ln768_7_fu_2936_p2;
wire   [23:0] add_ln1192_17_fu_2836_p2;
wire   [0:0] tmp_128_fu_2950_p3;
wire   [0:0] icmp_ln879_14_fu_2914_p2;
wire   [0:0] xor_ln779_8_fu_2958_p2;
wire   [0:0] and_ln779_7_fu_2964_p2;
wire   [0:0] select_ln777_7_fu_2942_p3;
wire   [0:0] tmp_127_fu_2896_p3;
wire   [0:0] xor_ln785_15_fu_2984_p2;
wire   [0:0] tmp_123_fu_2841_p3;
wire   [0:0] or_ln785_8_fu_2990_p2;
wire   [0:0] xor_ln785_16_fu_2996_p2;
wire   [0:0] select_ln416_7_fu_2970_p3;
wire   [0:0] and_ln781_7_fu_2978_p2;
wire   [0:0] and_ln786_16_fu_3008_p2;
wire   [0:0] or_ln786_8_fu_3014_p2;
wire   [0:0] xor_ln786_8_fu_3020_p2;
wire   [0:0] and_ln786_17_fu_3026_p2;
wire  signed [22:0] shl_ln728_9_fu_3038_p3;
wire  signed [26:0] sext_ln728_8_fu_3046_p1;
wire  signed [23:0] sext_ln1192_8_fu_3050_p1;
(* use_dsp48 = "no" *) wire   [26:0] add_ln1192_8_fu_3054_p2;
wire   [15:0] trunc_ln708_8_fu_3072_p4;
wire   [15:0] zext_ln415_9_fu_3090_p1;
wire   [0:0] tmp_132_fu_3099_p3;
wire   [0:0] tmp_130_fu_3082_p3;
wire   [0:0] xor_ln416_9_fu_3107_p2;
wire   [2:0] tmp_32_fu_3127_p4;
wire   [3:0] tmp_33_fu_3143_p4;
wire   [0:0] and_ln416_8_fu_3113_p2;
wire   [0:0] icmp_ln879_17_fu_3153_p2;
wire   [0:0] icmp_ln768_8_fu_3159_p2;
wire   [23:0] add_ln1192_18_fu_3059_p2;
wire   [0:0] tmp_134_fu_3173_p3;
wire   [0:0] icmp_ln879_16_fu_3137_p2;
wire   [0:0] xor_ln779_9_fu_3181_p2;
wire   [0:0] and_ln779_8_fu_3187_p2;
wire   [0:0] select_ln777_8_fu_3165_p3;
wire   [0:0] tmp_133_fu_3119_p3;
wire   [0:0] xor_ln785_17_fu_3207_p2;
wire   [0:0] tmp_129_fu_3064_p3;
wire   [0:0] or_ln785_9_fu_3213_p2;
wire   [0:0] xor_ln785_18_fu_3219_p2;
wire   [0:0] select_ln416_8_fu_3193_p3;
wire   [0:0] and_ln781_8_fu_3201_p2;
wire   [0:0] and_ln786_18_fu_3231_p2;
wire   [0:0] or_ln786_9_fu_3237_p2;
wire   [0:0] xor_ln786_9_fu_3243_p2;
wire   [0:0] and_ln786_19_fu_3249_p2;
wire  signed [22:0] shl_ln728_s_fu_3261_p3;
wire  signed [26:0] sext_ln728_9_fu_3269_p1;
wire  signed [23:0] sext_ln1192_9_fu_3273_p1;
(* use_dsp48 = "no" *) wire   [26:0] add_ln1192_9_fu_3277_p2;
wire   [15:0] trunc_ln708_9_fu_3295_p4;
wire   [15:0] zext_ln415_10_fu_3313_p1;
wire   [0:0] tmp_138_fu_3322_p3;
wire   [0:0] tmp_136_fu_3305_p3;
wire   [0:0] xor_ln416_10_fu_3330_p2;
wire   [2:0] tmp_34_fu_3350_p4;
wire   [3:0] tmp_35_fu_3366_p4;
wire   [0:0] and_ln416_9_fu_3336_p2;
wire   [0:0] icmp_ln879_19_fu_3376_p2;
wire   [0:0] icmp_ln768_9_fu_3382_p2;
wire   [23:0] add_ln1192_19_fu_3282_p2;
wire   [0:0] tmp_140_fu_3396_p3;
wire   [0:0] icmp_ln879_18_fu_3360_p2;
wire   [0:0] xor_ln779_10_fu_3404_p2;
wire   [0:0] and_ln779_9_fu_3410_p2;
wire   [0:0] select_ln777_9_fu_3388_p3;
wire   [0:0] tmp_139_fu_3342_p3;
wire   [0:0] xor_ln785_19_fu_3430_p2;
wire   [0:0] tmp_135_fu_3287_p3;
wire   [0:0] or_ln785_10_fu_3436_p2;
wire   [0:0] xor_ln785_20_fu_3442_p2;
wire   [0:0] select_ln416_9_fu_3416_p3;
wire   [0:0] and_ln781_9_fu_3424_p2;
wire   [0:0] and_ln786_20_fu_3454_p2;
wire   [0:0] or_ln786_10_fu_3460_p2;
wire   [0:0] xor_ln786_10_fu_3466_p2;
wire   [0:0] and_ln786_21_fu_3472_p2;
wire   [15:0] select_ln785_fu_3484_p3;
wire   [15:0] select_ln785_2_fu_3497_p3;
wire   [15:0] select_ln785_4_fu_3510_p3;
wire   [15:0] select_ln785_6_fu_3523_p3;
wire   [15:0] select_ln785_8_fu_3536_p3;
wire   [15:0] select_ln785_10_fu_3549_p3;
wire   [15:0] select_ln785_12_fu_3562_p3;
wire   [15:0] select_ln785_14_fu_3575_p3;
wire   [15:0] select_ln785_16_fu_3588_p3;
wire   [15:0] select_ln785_18_fu_3601_p3;
wire   [15:0] p_Val2_8_fu_3631_p12;
wire   [30:0] shl_ln_fu_3657_p3;
wire  signed [15:0] mul_ln1118_fu_3670_p0;
wire  signed [26:0] sext_ln1118_1_fu_1117_p1;
wire  signed [15:0] mul_ln1118_1_fu_3678_p0;
wire  signed [15:0] mul_ln1118_2_fu_3686_p0;
wire  signed [15:0] mul_ln1118_4_fu_3702_p0;
wire  signed [15:0] mul_ln1118_5_fu_3710_p0;
wire  signed [15:0] mul_ln1118_6_fu_3718_p0;
wire  signed [15:0] mul_ln1118_7_fu_3726_p0;
wire  signed [15:0] mul_ln1118_8_fu_3734_p0;
wire  signed [15:0] mul_ln1118_9_fu_3742_p0;
wire    ap_CS_fsm_state12;
reg   [6:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
end

matmul_linear_weicYC #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_s_address0),
    .ce0(linear_weight_fix_V_s_ce0),
    .q0(linear_weight_fix_V_s_q0)
);

matmul_linear_weicZC #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_1_address0),
    .ce0(linear_weight_fix_V_1_ce0),
    .q0(linear_weight_fix_V_1_q0)
);

matmul_linear_weic0C #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_2_address0),
    .ce0(linear_weight_fix_V_2_ce0),
    .q0(linear_weight_fix_V_2_q0)
);

matmul_linear_weic1C #(
    .DataWidth( 9 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_3_address0),
    .ce0(linear_weight_fix_V_3_ce0),
    .q0(linear_weight_fix_V_3_q0)
);

matmul_linear_weic2C #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_4_address0),
    .ce0(linear_weight_fix_V_4_ce0),
    .q0(linear_weight_fix_V_4_q0)
);

matmul_linear_weic3C #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_5_address0),
    .ce0(linear_weight_fix_V_5_ce0),
    .q0(linear_weight_fix_V_5_q0)
);

matmul_linear_weic4D #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_6_address0),
    .ce0(linear_weight_fix_V_6_ce0),
    .q0(linear_weight_fix_V_6_q0)
);

matmul_linear_weic5D #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_7_address0),
    .ce0(linear_weight_fix_V_7_ce0),
    .q0(linear_weight_fix_V_7_q0)
);

matmul_linear_weic6D #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_8_address0),
    .ce0(linear_weight_fix_V_8_ce0),
    .q0(linear_weight_fix_V_8_q0)
);

matmul_linear_weic7D #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_9_address0),
    .ce0(linear_weight_fix_V_9_ce0),
    .q0(linear_weight_fix_V_9_q0)
);

FracNet_T_mux_164c8D #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 12 ),
    .din5_WIDTH( 12 ),
    .din6_WIDTH( 12 ),
    .din7_WIDTH( 12 ),
    .din8_WIDTH( 12 ),
    .din9_WIDTH( 12 ),
    .din10_WIDTH( 12 ),
    .din11_WIDTH( 12 ),
    .din12_WIDTH( 12 ),
    .din13_WIDTH( 12 ),
    .din14_WIDTH( 12 ),
    .din15_WIDTH( 12 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
FracNet_T_mux_164c8D_U1345(
    .din0(12'd42),
    .din1(12'd4036),
    .din2(12'd40),
    .din3(12'd85),
    .din4(12'd5),
    .din5(12'd29),
    .din6(12'd4053),
    .din7(12'd4094),
    .din8(12'd4001),
    .din9(12'd4),
    .din10(12'd4),
    .din11(12'd4),
    .din12(12'd4),
    .din13(12'd4),
    .din14(12'd4),
    .din15(12'd4),
    .din16(coo_0_reg_364),
    .dout(p_Val2_s_fu_539_p18)
);

FracNet_T_mux_104c9D #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
FracNet_T_mux_104c9D_U1346(
    .din0(buf_0_V_21_reg_465),
    .din1(buf_1_V_22_reg_455),
    .din2(buf_2_V_23_reg_445),
    .din3(buf_3_V_24_reg_435),
    .din4(buf_4_V_25_reg_425),
    .din5(buf_5_V_26_reg_415),
    .din6(buf_6_V_27_reg_405),
    .din7(buf_7_V_28_reg_395),
    .din8(buf_8_V_29_reg_385),
    .din9(buf_9_V_210_reg_375),
    .din10(coo4_0_reg_486),
    .dout(p_Val2_8_fu_3631_p12)
);

FracNet_T_mul_muldaE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 27 ))
FracNet_T_mul_muldaE_U1347(
    .din0(mul_ln1118_fu_3670_p0),
    .din1(add_ln415_reg_3980),
    .dout(mul_ln1118_fu_3670_p2)
);

FracNet_T_mul_muldaE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 27 ))
FracNet_T_mul_muldaE_U1348(
    .din0(mul_ln1118_1_fu_3678_p0),
    .din1(add_ln415_1_reg_3985),
    .dout(mul_ln1118_1_fu_3678_p2)
);

FracNet_T_mul_muldaE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 27 ))
FracNet_T_mul_muldaE_U1349(
    .din0(mul_ln1118_2_fu_3686_p0),
    .din1(add_ln415_2_reg_3990),
    .dout(mul_ln1118_2_fu_3686_p2)
);

FracNet_T_mul_muldbE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 26 ))
FracNet_T_mul_muldbE_U1350(
    .din0(select_ln340_2_reg_3974),
    .din1(add_ln415_3_reg_3995),
    .dout(mul_ln1118_3_fu_3694_p2)
);

FracNet_T_mul_muldaE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 27 ))
FracNet_T_mul_muldaE_U1351(
    .din0(mul_ln1118_4_fu_3702_p0),
    .din1(add_ln415_4_reg_4000),
    .dout(mul_ln1118_4_fu_3702_p2)
);

FracNet_T_mul_muldaE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 27 ))
FracNet_T_mul_muldaE_U1352(
    .din0(mul_ln1118_5_fu_3710_p0),
    .din1(add_ln415_5_reg_4005),
    .dout(mul_ln1118_5_fu_3710_p2)
);

FracNet_T_mul_muldaE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 27 ))
FracNet_T_mul_muldaE_U1353(
    .din0(mul_ln1118_6_fu_3718_p0),
    .din1(add_ln415_6_reg_4010),
    .dout(mul_ln1118_6_fu_3718_p2)
);

FracNet_T_mul_muldaE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 27 ))
FracNet_T_mul_muldaE_U1354(
    .din0(mul_ln1118_7_fu_3726_p0),
    .din1(add_ln415_7_reg_4015),
    .dout(mul_ln1118_7_fu_3726_p2)
);

FracNet_T_mul_muldaE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 27 ))
FracNet_T_mul_muldaE_U1355(
    .din0(mul_ln1118_8_fu_3734_p0),
    .din1(add_ln415_8_reg_4020),
    .dout(mul_ln1118_8_fu_3734_p2)
);

FracNet_T_mul_muldaE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 27 ))
FracNet_T_mul_muldaE_U1356(
    .din0(mul_ln1118_9_fu_3742_p0),
    .din1(add_ln415_9_reg_4025),
    .dout(mul_ln1118_9_fu_3742_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state4)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state4);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_0_V_21_reg_465 <= buf_0_V_0_load_reg_3810;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_0_V_21_reg_465 <= select_ln785_1_fu_3491_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_1_V_22_reg_455 <= buf_1_V_0_load_reg_3815;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_1_V_22_reg_455 <= select_ln785_3_fu_3504_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_2_V_23_reg_445 <= buf_2_V_0_load_reg_3820;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_2_V_23_reg_445 <= select_ln785_5_fu_3517_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_3_V_24_reg_435 <= buf_3_V_0_load_reg_3825;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_3_V_24_reg_435 <= select_ln785_7_fu_3530_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_4_V_25_reg_425 <= buf_4_V_0_load_reg_3830;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_4_V_25_reg_425 <= select_ln785_9_fu_3543_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_5_V_26_reg_415 <= buf_5_V_0_load_reg_3835;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_5_V_26_reg_415 <= select_ln785_11_fu_3556_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_6_V_27_reg_405 <= buf_6_V_0_load_reg_3840;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_6_V_27_reg_405 <= select_ln785_13_fu_3569_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_7_V_28_reg_395 <= buf_7_V_0_load_reg_3845;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_7_V_28_reg_395 <= select_ln785_15_fu_3582_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_8_V_29_reg_385 <= buf_8_V_0_load_reg_3850;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_8_V_29_reg_385 <= select_ln785_17_fu_3595_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_9_V_210_reg_375 <= buf_9_V_0_load_reg_3855;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_9_V_210_reg_375 <= select_ln785_19_fu_3608_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cii_0_reg_475 <= 7'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln271_fu_659_p2 == 1'd0))) begin
        cii_0_reg_475 <= cii_fu_665_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        coo4_0_reg_486 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln284_fu_3614_p2 == 1'd0))) begin
        coo4_0_reg_486 <= coo_1_fu_3620_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln266_fu_527_p2 == 1'd0))) begin
        coo_0_reg_364 <= coo_fu_533_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        coo_0_reg_364 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln271_reg_3868_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln415_1_reg_3985 <= add_ln415_1_fu_884_p2;
        add_ln415_2_reg_3990 <= add_ln415_2_fu_912_p2;
        add_ln415_3_reg_3995 <= add_ln415_3_fu_940_p2;
        add_ln415_4_reg_4000 <= add_ln415_4_fu_968_p2;
        add_ln415_5_reg_4005 <= add_ln415_5_fu_996_p2;
        add_ln415_6_reg_4010 <= add_ln415_6_fu_1024_p2;
        add_ln415_7_reg_4015 <= add_ln415_7_fu_1052_p2;
        add_ln415_8_reg_4020 <= add_ln415_8_fu_1080_p2;
        add_ln415_9_reg_4025 <= add_ln415_9_fu_1108_p2;
        add_ln415_reg_3980 <= add_ln415_fu_856_p2;
        select_ln340_2_reg_3974 <= select_ln340_2_fu_826_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln271_reg_3868_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        and_ln785_1_reg_4200 <= and_ln785_1_fu_1660_p2;
        and_ln785_2_reg_4215 <= and_ln785_2_fu_1883_p2;
        and_ln785_3_reg_4230 <= and_ln785_3_fu_2110_p2;
        and_ln785_4_reg_4245 <= and_ln785_4_fu_2333_p2;
        and_ln785_5_reg_4260 <= and_ln785_5_fu_2556_p2;
        and_ln785_6_reg_4275 <= and_ln785_6_fu_2779_p2;
        and_ln785_7_reg_4290 <= and_ln785_7_fu_3002_p2;
        and_ln785_8_reg_4305 <= and_ln785_8_fu_3225_p2;
        and_ln785_9_reg_4320 <= and_ln785_9_fu_3448_p2;
        and_ln785_reg_4185 <= and_ln785_fu_1437_p2;
        buf_0_V_reg_4180 <= buf_0_V_fu_1305_p2;
        buf_1_V_reg_4195 <= buf_1_V_fu_1528_p2;
        buf_2_V_reg_4210 <= buf_2_V_fu_1751_p2;
        buf_3_V_reg_4225 <= buf_3_V_fu_1978_p2;
        buf_4_V_reg_4240 <= buf_4_V_fu_2201_p2;
        buf_5_V_reg_4255 <= buf_5_V_fu_2424_p2;
        buf_6_V_reg_4270 <= buf_6_V_fu_2647_p2;
        buf_7_V_reg_4285 <= buf_7_V_fu_2870_p2;
        buf_8_V_1_reg_4300 <= buf_8_V_1_fu_3093_p2;
        buf_9_V_reg_4315 <= buf_9_V_fu_3316_p2;
        or_ln785_11_reg_4190 <= or_ln785_11_fu_1467_p2;
        or_ln785_12_reg_4205 <= or_ln785_12_fu_1690_p2;
        or_ln785_13_reg_4220 <= or_ln785_13_fu_1913_p2;
        or_ln785_14_reg_4235 <= or_ln785_14_fu_2140_p2;
        or_ln785_15_reg_4250 <= or_ln785_15_fu_2363_p2;
        or_ln785_16_reg_4265 <= or_ln785_16_fu_2586_p2;
        or_ln785_17_reg_4280 <= or_ln785_17_fu_2809_p2;
        or_ln785_18_reg_4295 <= or_ln785_18_fu_3032_p2;
        or_ln785_19_reg_4310 <= or_ln785_19_fu_3255_p2;
        or_ln785_20_reg_4325 <= or_ln785_20_fu_3478_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln266_fu_527_p2 == 1'd0))) begin
        buf_0_V_0_fu_168 <= sext_ln415_fu_605_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_0_V_0_load_reg_3810 <= buf_0_V_0_fu_168;
        buf_1_V_0_load_reg_3815 <= buf_1_V_0_fu_172;
        buf_2_V_0_load_reg_3820 <= buf_2_V_0_fu_176;
        buf_3_V_0_load_reg_3825 <= buf_3_V_0_fu_180;
        buf_4_V_0_load_reg_3830 <= buf_4_V_0_fu_184;
        buf_5_V_0_load_reg_3835 <= buf_5_V_0_fu_188;
        buf_6_V_0_load_reg_3840 <= buf_6_V_0_fu_192;
        buf_7_V_0_load_reg_3845 <= buf_7_V_0_fu_196;
        buf_8_V_0_load_reg_3850 <= buf_8_V_0_fu_200;
        buf_9_V_0_load_reg_3855 <= buf_9_V_0_fu_204;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln266_fu_527_p2 == 1'd0))) begin
        buf_1_V_0_fu_172 <= sext_ln415_fu_605_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln266_fu_527_p2 == 1'd0))) begin
        buf_2_V_0_fu_176 <= sext_ln415_fu_605_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd3) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln266_fu_527_p2 == 1'd0))) begin
        buf_3_V_0_fu_180 <= sext_ln415_fu_605_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd4) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln266_fu_527_p2 == 1'd0))) begin
        buf_4_V_0_fu_184 <= sext_ln415_fu_605_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd5) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln266_fu_527_p2 == 1'd0))) begin
        buf_5_V_0_fu_188 <= sext_ln415_fu_605_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd6) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln266_fu_527_p2 == 1'd0))) begin
        buf_6_V_0_fu_192 <= sext_ln415_fu_605_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd7) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln266_fu_527_p2 == 1'd0))) begin
        buf_7_V_0_fu_196 <= sext_ln415_fu_605_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd8) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln266_fu_527_p2 == 1'd0))) begin
        buf_8_V_0_fu_200 <= sext_ln415_fu_605_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd8) & ~(ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd7) & ~(ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd6) & ~(ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd5) & ~(ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd4) & ~(ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd3) & ~(ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd2) & ~(ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd1) & ~(ap_phi_mux_coo_0_phi_fu_368_p4 == 4'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln266_fu_527_p2 == 1'd0))) begin
        buf_9_V_0_fu_204 <= sext_ln415_fu_605_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln271_reg_3868 == 1'd0))) begin
        carry_2_reg_3910 <= carry_2_fu_734_p2;
        p_Result_3_reg_3918 <= tmp_in_V_1_fu_714_p2[32'd15];
        p_Result_s_reg_3896 <= pool_out_buf_q0[32'd31];
        tmp_in_V_1_reg_3904 <= tmp_in_V_1_fu_714_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln271_reg_3868 <= icmp_ln271_fu_659_p2;
        icmp_ln271_reg_3868_pp1_iter1_reg <= icmp_ln271_reg_3868;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln271_reg_3868_pp1_iter2_reg <= icmp_ln271_reg_3868_pp1_iter1_reg;
        icmp_ln271_reg_3868_pp1_iter3_reg <= icmp_ln271_reg_3868_pp1_iter2_reg;
        icmp_ln271_reg_3868_pp1_iter4_reg <= icmp_ln271_reg_3868_pp1_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln271_reg_3868_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        mul_ln1118_1_reg_4045 <= mul_ln1118_1_fu_3678_p2;
        mul_ln1118_2_reg_4060 <= mul_ln1118_2_fu_3686_p2;
        mul_ln1118_3_reg_4075 <= mul_ln1118_3_fu_3694_p2;
        mul_ln1118_4_reg_4090 <= mul_ln1118_4_fu_3702_p2;
        mul_ln1118_5_reg_4105 <= mul_ln1118_5_fu_3710_p2;
        mul_ln1118_6_reg_4120 <= mul_ln1118_6_fu_3718_p2;
        mul_ln1118_7_reg_4135 <= mul_ln1118_7_fu_3726_p2;
        mul_ln1118_8_reg_4150 <= mul_ln1118_8_fu_3734_p2;
        mul_ln1118_9_reg_4165 <= mul_ln1118_9_fu_3742_p2;
        mul_ln1118_reg_4030 <= mul_ln1118_fu_3670_p2;
        tmp_101_reg_4085 <= mul_ln1118_3_fu_3694_p2[32'd6];
        tmp_107_reg_4100 <= mul_ln1118_4_fu_3702_p2[32'd6];
        tmp_113_reg_4115 <= mul_ln1118_5_fu_3710_p2[32'd6];
        tmp_119_reg_4130 <= mul_ln1118_6_fu_3718_p2[32'd6];
        tmp_125_reg_4145 <= mul_ln1118_7_fu_3726_p2[32'd6];
        tmp_131_reg_4160 <= mul_ln1118_8_fu_3734_p2[32'd6];
        tmp_137_reg_4175 <= mul_ln1118_9_fu_3742_p2[32'd6];
        tmp_83_reg_4040 <= mul_ln1118_fu_3670_p2[32'd6];
        tmp_89_reg_4055 <= mul_ln1118_1_fu_3678_p2[32'd6];
        tmp_95_reg_4070 <= mul_ln1118_2_fu_3686_p2[32'd6];
        trunc_ln1192_1_reg_4050 <= trunc_ln1192_1_fu_1136_p1;
        trunc_ln1192_2_reg_4065 <= trunc_ln1192_2_fu_1149_p1;
        trunc_ln1192_3_reg_4080 <= trunc_ln1192_3_fu_1162_p1;
        trunc_ln1192_4_reg_4095 <= trunc_ln1192_4_fu_1175_p1;
        trunc_ln1192_5_reg_4110 <= trunc_ln1192_5_fu_1188_p1;
        trunc_ln1192_6_reg_4125 <= trunc_ln1192_6_fu_1201_p1;
        trunc_ln1192_7_reg_4140 <= trunc_ln1192_7_fu_1214_p1;
        trunc_ln1192_8_reg_4155 <= trunc_ln1192_8_fu_1227_p1;
        trunc_ln1192_9_reg_4170 <= trunc_ln1192_9_fu_1240_p1;
        trunc_ln1192_reg_4035 <= trunc_ln1192_fu_1123_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln271_fu_659_p2 == 1'd0))) begin
        zext_ln273_reg_3877[6 : 0] <= zext_ln273_fu_671_p1[6 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln271_fu_659_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0))) begin
        ap_phi_mux_buf_0_V_21_phi_fu_468_p4 = select_ln785_1_fu_3491_p3;
    end else begin
        ap_phi_mux_buf_0_V_21_phi_fu_468_p4 = buf_0_V_21_reg_465;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0))) begin
        ap_phi_mux_buf_1_V_22_phi_fu_458_p4 = select_ln785_3_fu_3504_p3;
    end else begin
        ap_phi_mux_buf_1_V_22_phi_fu_458_p4 = buf_1_V_22_reg_455;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0))) begin
        ap_phi_mux_buf_2_V_23_phi_fu_448_p4 = select_ln785_5_fu_3517_p3;
    end else begin
        ap_phi_mux_buf_2_V_23_phi_fu_448_p4 = buf_2_V_23_reg_445;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0))) begin
        ap_phi_mux_buf_3_V_24_phi_fu_438_p4 = select_ln785_7_fu_3530_p3;
    end else begin
        ap_phi_mux_buf_3_V_24_phi_fu_438_p4 = buf_3_V_24_reg_435;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0))) begin
        ap_phi_mux_buf_4_V_25_phi_fu_428_p4 = select_ln785_9_fu_3543_p3;
    end else begin
        ap_phi_mux_buf_4_V_25_phi_fu_428_p4 = buf_4_V_25_reg_425;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0))) begin
        ap_phi_mux_buf_5_V_26_phi_fu_418_p4 = select_ln785_11_fu_3556_p3;
    end else begin
        ap_phi_mux_buf_5_V_26_phi_fu_418_p4 = buf_5_V_26_reg_415;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0))) begin
        ap_phi_mux_buf_6_V_27_phi_fu_408_p4 = select_ln785_13_fu_3569_p3;
    end else begin
        ap_phi_mux_buf_6_V_27_phi_fu_408_p4 = buf_6_V_27_reg_405;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0))) begin
        ap_phi_mux_buf_7_V_28_phi_fu_398_p4 = select_ln785_15_fu_3582_p3;
    end else begin
        ap_phi_mux_buf_7_V_28_phi_fu_398_p4 = buf_7_V_28_reg_395;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0))) begin
        ap_phi_mux_buf_8_V_29_phi_fu_388_p4 = select_ln785_17_fu_3595_p3;
    end else begin
        ap_phi_mux_buf_8_V_29_phi_fu_388_p4 = buf_8_V_29_reg_385;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln271_reg_3868_pp1_iter4_reg == 1'd0))) begin
        ap_phi_mux_buf_9_V_210_phi_fu_378_p4 = select_ln785_19_fu_3608_p3;
    end else begin
        ap_phi_mux_buf_9_V_210_phi_fu_378_p4 = buf_9_V_210_reg_375;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_1_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_2_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_3_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_4_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_5_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_6_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_7_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_8_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_9_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_s_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        outputs_V_ce0 = 1'b1;
    end else begin
        outputs_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln284_fu_3614_p2 == 1'd0))) begin
        outputs_V_we0 = 1'b1;
    end else begin
        outputs_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        pool_out_buf_ce0 = 1'b1;
    end else begin
        pool_out_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln266_fu_527_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln271_fu_659_p2 == 1'd1)) & ~((ap_enable_reg_pp1_iter4 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter4 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln271_fu_659_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln284_fu_3614_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_10_fu_1271_p2 = ($signed(sext_ln1192_fu_1262_p1) + $signed(trunc_ln1192_reg_4035));

assign add_ln1192_11_fu_1494_p2 = ($signed(sext_ln1192_1_fu_1485_p1) + $signed(trunc_ln1192_1_reg_4050));

assign add_ln1192_12_fu_1717_p2 = ($signed(sext_ln1192_2_fu_1708_p1) + $signed(trunc_ln1192_2_reg_4065));

assign add_ln1192_13_fu_1944_p2 = ($signed(sext_ln1192_3_fu_1934_p1) + $signed(trunc_ln1192_3_reg_4080));

assign add_ln1192_14_fu_2167_p2 = ($signed(sext_ln1192_4_fu_2158_p1) + $signed(trunc_ln1192_4_reg_4095));

assign add_ln1192_15_fu_2390_p2 = ($signed(sext_ln1192_5_fu_2381_p1) + $signed(trunc_ln1192_5_reg_4110));

assign add_ln1192_16_fu_2613_p2 = ($signed(sext_ln1192_6_fu_2604_p1) + $signed(trunc_ln1192_6_reg_4125));

assign add_ln1192_17_fu_2836_p2 = ($signed(sext_ln1192_7_fu_2827_p1) + $signed(trunc_ln1192_7_reg_4140));

assign add_ln1192_18_fu_3059_p2 = ($signed(sext_ln1192_8_fu_3050_p1) + $signed(trunc_ln1192_8_reg_4155));

assign add_ln1192_19_fu_3282_p2 = ($signed(sext_ln1192_9_fu_3273_p1) + $signed(trunc_ln1192_9_reg_4170));

assign add_ln1192_1_fu_1489_p2 = ($signed(mul_ln1118_1_reg_4045) + $signed(sext_ln728_1_fu_1481_p1));

assign add_ln1192_2_fu_1712_p2 = ($signed(mul_ln1118_2_reg_4060) + $signed(sext_ln728_2_fu_1704_p1));

assign add_ln1192_3_fu_1938_p2 = ($signed(sext_ln1192_10_fu_1931_p1) + $signed(sext_ln728_3_fu_1927_p1));

assign add_ln1192_4_fu_2162_p2 = ($signed(mul_ln1118_4_reg_4090) + $signed(sext_ln728_4_fu_2154_p1));

assign add_ln1192_5_fu_2385_p2 = ($signed(mul_ln1118_5_reg_4105) + $signed(sext_ln728_5_fu_2377_p1));

assign add_ln1192_6_fu_2608_p2 = ($signed(mul_ln1118_6_reg_4120) + $signed(sext_ln728_6_fu_2600_p1));

assign add_ln1192_7_fu_2831_p2 = ($signed(mul_ln1118_7_reg_4135) + $signed(sext_ln728_7_fu_2823_p1));

assign add_ln1192_8_fu_3054_p2 = ($signed(mul_ln1118_8_reg_4150) + $signed(sext_ln728_8_fu_3046_p1));

assign add_ln1192_9_fu_3277_p2 = ($signed(mul_ln1118_9_reg_4165) + $signed(sext_ln728_9_fu_3269_p1));

assign add_ln1192_fu_1266_p2 = ($signed(mul_ln1118_reg_4030) + $signed(sext_ln728_fu_1258_p1));

assign add_ln415_1_fu_884_p2 = ($signed(sext_ln713_2_fu_872_p1) + $signed(zext_ln415_12_fu_880_p1));

assign add_ln415_2_fu_912_p2 = ($signed(sext_ln713_3_fu_900_p1) + $signed(zext_ln415_13_fu_908_p1));

assign add_ln415_3_fu_940_p2 = ($signed(sext_ln713_4_fu_928_p1) + $signed(zext_ln415_14_fu_936_p1));

assign add_ln415_4_fu_968_p2 = ($signed(sext_ln713_5_fu_956_p1) + $signed(zext_ln415_15_fu_964_p1));

assign add_ln415_5_fu_996_p2 = ($signed(sext_ln713_6_fu_984_p1) + $signed(zext_ln415_16_fu_992_p1));

assign add_ln415_6_fu_1024_p2 = ($signed(sext_ln713_7_fu_1012_p1) + $signed(zext_ln415_17_fu_1020_p1));

assign add_ln415_7_fu_1052_p2 = ($signed(sext_ln713_8_fu_1040_p1) + $signed(zext_ln415_18_fu_1048_p1));

assign add_ln415_8_fu_1080_p2 = ($signed(sext_ln713_9_fu_1068_p1) + $signed(zext_ln415_19_fu_1076_p1));

assign add_ln415_9_fu_1108_p2 = ($signed(sext_ln713_10_fu_1096_p1) + $signed(zext_ln415_20_fu_1104_p1));

assign add_ln415_fu_856_p2 = ($signed(sext_ln713_1_fu_844_p1) + $signed(zext_ln415_11_fu_852_p1));

assign and_ln416_1_fu_1548_p2 = (xor_ln416_2_fu_1542_p2 & tmp_88_fu_1517_p3);

assign and_ln416_2_fu_1771_p2 = (xor_ln416_3_fu_1765_p2 & tmp_94_fu_1740_p3);

assign and_ln416_3_fu_1998_p2 = (xor_ln416_4_fu_1992_p2 & tmp_100_fu_1967_p3);

assign and_ln416_4_fu_2221_p2 = (xor_ln416_5_fu_2215_p2 & tmp_106_fu_2190_p3);

assign and_ln416_5_fu_2444_p2 = (xor_ln416_6_fu_2438_p2 & tmp_112_fu_2413_p3);

assign and_ln416_6_fu_2667_p2 = (xor_ln416_7_fu_2661_p2 & tmp_118_fu_2636_p3);

assign and_ln416_7_fu_2890_p2 = (xor_ln416_8_fu_2884_p2 & tmp_124_fu_2859_p3);

assign and_ln416_8_fu_3113_p2 = (xor_ln416_9_fu_3107_p2 & tmp_130_fu_3082_p3);

assign and_ln416_9_fu_3336_p2 = (xor_ln416_10_fu_3330_p2 & tmp_136_fu_3305_p3);

assign and_ln416_fu_1325_p2 = (xor_ln416_1_fu_1319_p2 & tmp_82_fu_1294_p3);

assign and_ln779_1_fu_1622_p2 = (xor_ln779_2_fu_1616_p2 & icmp_ln879_2_fu_1572_p2);

assign and_ln779_2_fu_1845_p2 = (xor_ln779_3_fu_1839_p2 & icmp_ln879_4_fu_1795_p2);

assign and_ln779_3_fu_2072_p2 = (xor_ln779_4_fu_2066_p2 & icmp_ln879_6_fu_2022_p2);

assign and_ln779_4_fu_2295_p2 = (xor_ln779_5_fu_2289_p2 & icmp_ln879_8_fu_2245_p2);

assign and_ln779_5_fu_2518_p2 = (xor_ln779_6_fu_2512_p2 & icmp_ln879_10_fu_2468_p2);

assign and_ln779_6_fu_2741_p2 = (xor_ln779_7_fu_2735_p2 & icmp_ln879_12_fu_2691_p2);

assign and_ln779_7_fu_2964_p2 = (xor_ln779_8_fu_2958_p2 & icmp_ln879_14_fu_2914_p2);

assign and_ln779_8_fu_3187_p2 = (xor_ln779_9_fu_3181_p2 & icmp_ln879_16_fu_3137_p2);

assign and_ln779_9_fu_3410_p2 = (xor_ln779_10_fu_3404_p2 & icmp_ln879_18_fu_3360_p2);

assign and_ln779_fu_1399_p2 = (xor_ln779_1_fu_1393_p2 & icmp_ln879_fu_1349_p2);

assign and_ln781_1_fu_1636_p2 = (icmp_ln879_3_fu_1588_p2 & and_ln416_1_fu_1548_p2);

assign and_ln781_2_fu_1859_p2 = (icmp_ln879_5_fu_1811_p2 & and_ln416_2_fu_1771_p2);

assign and_ln781_3_fu_2086_p2 = (icmp_ln879_7_fu_2038_p2 & and_ln416_3_fu_1998_p2);

assign and_ln781_4_fu_2309_p2 = (icmp_ln879_9_fu_2261_p2 & and_ln416_4_fu_2221_p2);

assign and_ln781_5_fu_2532_p2 = (icmp_ln879_11_fu_2484_p2 & and_ln416_5_fu_2444_p2);

assign and_ln781_6_fu_2755_p2 = (icmp_ln879_13_fu_2707_p2 & and_ln416_6_fu_2667_p2);

assign and_ln781_7_fu_2978_p2 = (icmp_ln879_15_fu_2930_p2 & and_ln416_7_fu_2890_p2);

assign and_ln781_8_fu_3201_p2 = (icmp_ln879_17_fu_3153_p2 & and_ln416_8_fu_3113_p2);

assign and_ln781_9_fu_3424_p2 = (icmp_ln879_19_fu_3376_p2 & and_ln416_9_fu_3336_p2);

assign and_ln781_fu_1413_p2 = (icmp_ln879_1_fu_1365_p2 & and_ln416_fu_1325_p2);

assign and_ln785_1_fu_1660_p2 = (xor_ln785_4_fu_1654_p2 & or_ln785_2_fu_1648_p2);

assign and_ln785_2_fu_1883_p2 = (xor_ln785_6_fu_1877_p2 & or_ln785_3_fu_1871_p2);

assign and_ln785_3_fu_2110_p2 = (xor_ln785_8_fu_2104_p2 & or_ln785_4_fu_2098_p2);

assign and_ln785_4_fu_2333_p2 = (xor_ln785_10_fu_2327_p2 & or_ln785_5_fu_2321_p2);

assign and_ln785_5_fu_2556_p2 = (xor_ln785_12_fu_2550_p2 & or_ln785_6_fu_2544_p2);

assign and_ln785_6_fu_2779_p2 = (xor_ln785_14_fu_2773_p2 & or_ln785_7_fu_2767_p2);

assign and_ln785_7_fu_3002_p2 = (xor_ln785_16_fu_2996_p2 & or_ln785_8_fu_2990_p2);

assign and_ln785_8_fu_3225_p2 = (xor_ln785_18_fu_3219_p2 & or_ln785_9_fu_3213_p2);

assign and_ln785_9_fu_3448_p2 = (xor_ln785_20_fu_3442_p2 & or_ln785_10_fu_3436_p2);

assign and_ln785_fu_1437_p2 = (xor_ln785_2_fu_1431_p2 & or_ln785_1_fu_1425_p2);

assign and_ln786_10_fu_2339_p2 = (tmp_109_fu_2227_p3 & select_ln416_4_fu_2301_p3);

assign and_ln786_11_fu_2357_p2 = (xor_ln786_5_fu_2351_p2 & tmp_105_fu_2172_p3);

assign and_ln786_12_fu_2562_p2 = (tmp_115_fu_2450_p3 & select_ln416_5_fu_2524_p3);

assign and_ln786_13_fu_2580_p2 = (xor_ln786_6_fu_2574_p2 & tmp_111_fu_2395_p3);

assign and_ln786_14_fu_2785_p2 = (tmp_121_fu_2673_p3 & select_ln416_6_fu_2747_p3);

assign and_ln786_15_fu_2803_p2 = (xor_ln786_7_fu_2797_p2 & tmp_117_fu_2618_p3);

assign and_ln786_16_fu_3008_p2 = (tmp_127_fu_2896_p3 & select_ln416_7_fu_2970_p3);

assign and_ln786_17_fu_3026_p2 = (xor_ln786_8_fu_3020_p2 & tmp_123_fu_2841_p3);

assign and_ln786_18_fu_3231_p2 = (tmp_133_fu_3119_p3 & select_ln416_8_fu_3193_p3);

assign and_ln786_19_fu_3249_p2 = (xor_ln786_9_fu_3243_p2 & tmp_129_fu_3064_p3);

assign and_ln786_20_fu_3454_p2 = (tmp_139_fu_3342_p3 & select_ln416_9_fu_3416_p3);

assign and_ln786_21_fu_3472_p2 = (xor_ln786_10_fu_3466_p2 & tmp_135_fu_3287_p3);

assign and_ln786_2_fu_1443_p2 = (tmp_85_fu_1331_p3 & select_ln416_fu_1405_p3);

assign and_ln786_3_fu_1461_p2 = (xor_ln786_1_fu_1455_p2 & tmp_81_fu_1276_p3);

assign and_ln786_4_fu_1666_p2 = (tmp_91_fu_1554_p3 & select_ln416_1_fu_1628_p3);

assign and_ln786_5_fu_1684_p2 = (xor_ln786_2_fu_1678_p2 & tmp_87_fu_1499_p3);

assign and_ln786_6_fu_1889_p2 = (tmp_97_fu_1777_p3 & select_ln416_2_fu_1851_p3);

assign and_ln786_7_fu_1907_p2 = (xor_ln786_3_fu_1901_p2 & tmp_93_fu_1722_p3);

assign and_ln786_8_fu_2116_p2 = (tmp_103_fu_2004_p3 & select_ln416_3_fu_2078_p3);

assign and_ln786_9_fu_2134_p2 = (xor_ln786_4_fu_2128_p2 & tmp_99_fu_1949_p3);

assign and_ln786_fu_774_p2 = (p_Result_3_reg_3918 & deleted_ones_fu_753_p3);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state4_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_coo_0_phi_fu_368_p4 = coo_0_reg_364;

assign buf_0_V_2_fu_599_p2 = ($signed(sext_ln713_fu_591_p1) + $signed(zext_ln713_fu_595_p1));

assign buf_0_V_fu_1305_p2 = (trunc_ln708_s_fu_1284_p4 + zext_ln415_1_fu_1302_p1);

assign buf_1_V_fu_1528_p2 = (trunc_ln708_1_fu_1507_p4 + zext_ln415_2_fu_1525_p1);

assign buf_2_V_fu_1751_p2 = (trunc_ln708_2_fu_1730_p4 + zext_ln415_3_fu_1748_p1);

assign buf_3_V_fu_1978_p2 = (trunc_ln708_3_fu_1957_p4 + zext_ln415_4_fu_1975_p1);

assign buf_4_V_fu_2201_p2 = (trunc_ln708_4_fu_2180_p4 + zext_ln415_5_fu_2198_p1);

assign buf_5_V_fu_2424_p2 = (trunc_ln708_5_fu_2403_p4 + zext_ln415_6_fu_2421_p1);

assign buf_6_V_fu_2647_p2 = (trunc_ln708_6_fu_2626_p4 + zext_ln415_7_fu_2644_p1);

assign buf_7_V_fu_2870_p2 = (trunc_ln708_7_fu_2849_p4 + zext_ln415_8_fu_2867_p1);

assign buf_8_V_1_fu_3093_p2 = (trunc_ln708_8_fu_3072_p4 + zext_ln415_9_fu_3090_p1);

assign buf_9_V_fu_3316_p2 = (trunc_ln708_9_fu_3295_p4 + zext_ln415_10_fu_3313_p1);

assign carry_2_fu_734_p2 = (xor_ln416_fu_728_p2 & p_Result_2_fu_694_p3);

assign cii_fu_665_p2 = (cii_0_reg_475 + 7'd1);

assign coo_1_fu_3620_p2 = (coo4_0_reg_486 + 4'd1);

assign coo_fu_533_p2 = (coo_0_reg_364 + 4'd1);

assign deleted_ones_fu_753_p3 = ((carry_2_reg_3910[0:0] === 1'b1) ? xor_ln779_fu_748_p2 : p_Result_s_reg_3896);

assign icmp_ln266_fu_527_p2 = ((coo_0_reg_364 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln271_fu_659_p2 = ((cii_0_reg_475 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln284_fu_3614_p2 = ((coo4_0_reg_486 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln768_1_fu_1594_p2 = ((tmp_19_fu_1578_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_2_fu_1817_p2 = ((tmp_21_fu_1801_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_3_fu_2044_p2 = ((tmp_23_fu_2028_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_4_fu_2267_p2 = ((tmp_25_fu_2251_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_5_fu_2490_p2 = ((tmp_27_fu_2474_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_6_fu_2713_p2 = ((tmp_29_fu_2697_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_7_fu_2936_p2 = ((tmp_31_fu_2920_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_8_fu_3159_p2 = ((tmp_33_fu_3143_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_9_fu_3382_p2 = ((tmp_35_fu_3366_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_fu_1371_p2 = ((tmp_17_fu_1355_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_10_fu_2468_p2 = ((tmp_26_fu_2458_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_11_fu_2484_p2 = ((tmp_27_fu_2474_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_12_fu_2691_p2 = ((tmp_28_fu_2681_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_13_fu_2707_p2 = ((tmp_29_fu_2697_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_14_fu_2914_p2 = ((tmp_30_fu_2904_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_15_fu_2930_p2 = ((tmp_31_fu_2920_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_16_fu_3137_p2 = ((tmp_32_fu_3127_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_17_fu_3153_p2 = ((tmp_33_fu_3143_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_18_fu_3360_p2 = ((tmp_34_fu_3350_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_19_fu_3376_p2 = ((tmp_35_fu_3366_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_1365_p2 = ((tmp_17_fu_1355_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_2_fu_1572_p2 = ((tmp_18_fu_1562_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_3_fu_1588_p2 = ((tmp_19_fu_1578_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_4_fu_1795_p2 = ((tmp_20_fu_1785_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_5_fu_1811_p2 = ((tmp_21_fu_1801_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_6_fu_2022_p2 = ((tmp_22_fu_2012_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_7_fu_2038_p2 = ((tmp_23_fu_2028_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_8_fu_2245_p2 = ((tmp_24_fu_2235_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_9_fu_2261_p2 = ((tmp_25_fu_2251_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_1349_p2 = ((tmp_16_fu_1339_p4 == 3'd7) ? 1'b1 : 1'b0);

assign linear_weight_fix_V_1_address0 = zext_ln273_reg_3877;

assign linear_weight_fix_V_2_address0 = zext_ln273_reg_3877;

assign linear_weight_fix_V_3_address0 = zext_ln273_reg_3877;

assign linear_weight_fix_V_4_address0 = zext_ln273_reg_3877;

assign linear_weight_fix_V_5_address0 = zext_ln273_reg_3877;

assign linear_weight_fix_V_6_address0 = zext_ln273_reg_3877;

assign linear_weight_fix_V_7_address0 = zext_ln273_reg_3877;

assign linear_weight_fix_V_8_address0 = zext_ln273_reg_3877;

assign linear_weight_fix_V_9_address0 = zext_ln273_reg_3877;

assign linear_weight_fix_V_s_address0 = zext_ln273_reg_3877;

assign mul_ln1118_1_fu_3678_p0 = sext_ln1118_1_fu_1117_p1;

assign mul_ln1118_2_fu_3686_p0 = sext_ln1118_1_fu_1117_p1;

assign mul_ln1118_4_fu_3702_p0 = sext_ln1118_1_fu_1117_p1;

assign mul_ln1118_5_fu_3710_p0 = sext_ln1118_1_fu_1117_p1;

assign mul_ln1118_6_fu_3718_p0 = sext_ln1118_1_fu_1117_p1;

assign mul_ln1118_7_fu_3726_p0 = sext_ln1118_1_fu_1117_p1;

assign mul_ln1118_8_fu_3734_p0 = sext_ln1118_1_fu_1117_p1;

assign mul_ln1118_9_fu_3742_p0 = sext_ln1118_1_fu_1117_p1;

assign mul_ln1118_fu_3670_p0 = sext_ln1118_1_fu_1117_p1;

assign or_ln340_1_fu_807_p2 = (or_ln340_2_fu_801_p2 | carry_2_reg_3910);

assign or_ln340_2_fu_801_p2 = (xor_ln779_fu_748_p2 | and_ln786_fu_774_p2);

assign or_ln340_fu_795_p2 = (underflow_fu_790_p2 | overflow_fu_768_p2);

assign or_ln785_10_fu_3436_p2 = (xor_ln785_19_fu_3430_p2 | tmp_139_fu_3342_p3);

assign or_ln785_11_fu_1467_p2 = (and_ln786_3_fu_1461_p2 | and_ln785_fu_1437_p2);

assign or_ln785_12_fu_1690_p2 = (and_ln786_5_fu_1684_p2 | and_ln785_1_fu_1660_p2);

assign or_ln785_13_fu_1913_p2 = (and_ln786_7_fu_1907_p2 | and_ln785_2_fu_1883_p2);

assign or_ln785_14_fu_2140_p2 = (and_ln786_9_fu_2134_p2 | and_ln785_3_fu_2110_p2);

assign or_ln785_15_fu_2363_p2 = (and_ln786_11_fu_2357_p2 | and_ln785_4_fu_2333_p2);

assign or_ln785_16_fu_2586_p2 = (and_ln786_13_fu_2580_p2 | and_ln785_5_fu_2556_p2);

assign or_ln785_17_fu_2809_p2 = (and_ln786_15_fu_2803_p2 | and_ln785_6_fu_2779_p2);

assign or_ln785_18_fu_3032_p2 = (and_ln786_17_fu_3026_p2 | and_ln785_7_fu_3002_p2);

assign or_ln785_19_fu_3255_p2 = (and_ln786_19_fu_3249_p2 | and_ln785_8_fu_3225_p2);

assign or_ln785_1_fu_1425_p2 = (xor_ln785_1_fu_1419_p2 | tmp_85_fu_1331_p3);

assign or_ln785_20_fu_3478_p2 = (and_ln786_21_fu_3472_p2 | and_ln785_9_fu_3448_p2);

assign or_ln785_2_fu_1648_p2 = (xor_ln785_3_fu_1642_p2 | tmp_91_fu_1554_p3);

assign or_ln785_3_fu_1871_p2 = (xor_ln785_5_fu_1865_p2 | tmp_97_fu_1777_p3);

assign or_ln785_4_fu_2098_p2 = (xor_ln785_7_fu_2092_p2 | tmp_103_fu_2004_p3);

assign or_ln785_5_fu_2321_p2 = (xor_ln785_9_fu_2315_p2 | tmp_109_fu_2227_p3);

assign or_ln785_6_fu_2544_p2 = (xor_ln785_11_fu_2538_p2 | tmp_115_fu_2450_p3);

assign or_ln785_7_fu_2767_p2 = (xor_ln785_13_fu_2761_p2 | tmp_121_fu_2673_p3);

assign or_ln785_8_fu_2990_p2 = (xor_ln785_15_fu_2984_p2 | tmp_127_fu_2896_p3);

assign or_ln785_9_fu_3213_p2 = (xor_ln785_17_fu_3207_p2 | tmp_133_fu_3119_p3);

assign or_ln785_fu_763_p2 = (xor_ln785_fu_759_p2 | p_Result_3_reg_3918);

assign or_ln786_10_fu_3460_p2 = (and_ln786_20_fu_3454_p2 | and_ln781_9_fu_3424_p2);

assign or_ln786_1_fu_1449_p2 = (and_ln786_2_fu_1443_p2 | and_ln781_fu_1413_p2);

assign or_ln786_2_fu_1672_p2 = (and_ln786_4_fu_1666_p2 | and_ln781_1_fu_1636_p2);

assign or_ln786_3_fu_1895_p2 = (and_ln786_6_fu_1889_p2 | and_ln781_2_fu_1859_p2);

assign or_ln786_4_fu_2122_p2 = (and_ln786_8_fu_2116_p2 | and_ln781_3_fu_2086_p2);

assign or_ln786_5_fu_2345_p2 = (and_ln786_10_fu_2339_p2 | and_ln781_4_fu_2309_p2);

assign or_ln786_6_fu_2568_p2 = (and_ln786_12_fu_2562_p2 | and_ln781_5_fu_2532_p2);

assign or_ln786_7_fu_2791_p2 = (and_ln786_14_fu_2785_p2 | and_ln781_6_fu_2755_p2);

assign or_ln786_8_fu_3014_p2 = (and_ln786_16_fu_3008_p2 | and_ln781_7_fu_2978_p2);

assign or_ln786_9_fu_3237_p2 = (and_ln786_18_fu_3231_p2 | and_ln781_8_fu_3201_p2);

assign or_ln786_fu_779_p2 = (carry_2_reg_3910 | and_ln786_fu_774_p2);

assign outputs_V_address0 = zext_ln286_fu_3626_p1;

assign outputs_V_d0 = $signed(shl_ln_fu_3657_p3);

assign overflow_fu_768_p2 = (xor_ln779_fu_748_p2 & or_ln785_fu_763_p2);

assign p_Result_2_fu_694_p3 = pool_out_buf_q0[32'd30];

assign pool_out_buf_address0 = zext_ln273_fu_671_p1;

assign select_ln340_2_fu_826_p3 = ((or_ln340_1_fu_807_p2[0:0] === 1'b1) ? select_ln340_fu_812_p3 : select_ln388_fu_819_p3);

assign select_ln340_fu_812_p3 = ((or_ln340_fu_795_p2[0:0] === 1'b1) ? 16'd32767 : tmp_in_V_1_reg_3904);

assign select_ln388_fu_819_p3 = ((underflow_fu_790_p2[0:0] === 1'b1) ? 16'd32768 : tmp_in_V_1_reg_3904);

assign select_ln416_1_fu_1628_p3 = ((and_ln416_1_fu_1548_p2[0:0] === 1'b1) ? and_ln779_1_fu_1622_p2 : icmp_ln879_3_fu_1588_p2);

assign select_ln416_2_fu_1851_p3 = ((and_ln416_2_fu_1771_p2[0:0] === 1'b1) ? and_ln779_2_fu_1845_p2 : icmp_ln879_5_fu_1811_p2);

assign select_ln416_3_fu_2078_p3 = ((and_ln416_3_fu_1998_p2[0:0] === 1'b1) ? and_ln779_3_fu_2072_p2 : icmp_ln879_7_fu_2038_p2);

assign select_ln416_4_fu_2301_p3 = ((and_ln416_4_fu_2221_p2[0:0] === 1'b1) ? and_ln779_4_fu_2295_p2 : icmp_ln879_9_fu_2261_p2);

assign select_ln416_5_fu_2524_p3 = ((and_ln416_5_fu_2444_p2[0:0] === 1'b1) ? and_ln779_5_fu_2518_p2 : icmp_ln879_11_fu_2484_p2);

assign select_ln416_6_fu_2747_p3 = ((and_ln416_6_fu_2667_p2[0:0] === 1'b1) ? and_ln779_6_fu_2741_p2 : icmp_ln879_13_fu_2707_p2);

assign select_ln416_7_fu_2970_p3 = ((and_ln416_7_fu_2890_p2[0:0] === 1'b1) ? and_ln779_7_fu_2964_p2 : icmp_ln879_15_fu_2930_p2);

assign select_ln416_8_fu_3193_p3 = ((and_ln416_8_fu_3113_p2[0:0] === 1'b1) ? and_ln779_8_fu_3187_p2 : icmp_ln879_17_fu_3153_p2);

assign select_ln416_9_fu_3416_p3 = ((and_ln416_9_fu_3336_p2[0:0] === 1'b1) ? and_ln779_9_fu_3410_p2 : icmp_ln879_19_fu_3376_p2);

assign select_ln416_fu_1405_p3 = ((and_ln416_fu_1325_p2[0:0] === 1'b1) ? and_ln779_fu_1399_p2 : icmp_ln879_1_fu_1365_p2);

assign select_ln777_1_fu_1600_p3 = ((and_ln416_1_fu_1548_p2[0:0] === 1'b1) ? icmp_ln879_3_fu_1588_p2 : icmp_ln768_1_fu_1594_p2);

assign select_ln777_2_fu_1823_p3 = ((and_ln416_2_fu_1771_p2[0:0] === 1'b1) ? icmp_ln879_5_fu_1811_p2 : icmp_ln768_2_fu_1817_p2);

assign select_ln777_3_fu_2050_p3 = ((and_ln416_3_fu_1998_p2[0:0] === 1'b1) ? icmp_ln879_7_fu_2038_p2 : icmp_ln768_3_fu_2044_p2);

assign select_ln777_4_fu_2273_p3 = ((and_ln416_4_fu_2221_p2[0:0] === 1'b1) ? icmp_ln879_9_fu_2261_p2 : icmp_ln768_4_fu_2267_p2);

assign select_ln777_5_fu_2496_p3 = ((and_ln416_5_fu_2444_p2[0:0] === 1'b1) ? icmp_ln879_11_fu_2484_p2 : icmp_ln768_5_fu_2490_p2);

assign select_ln777_6_fu_2719_p3 = ((and_ln416_6_fu_2667_p2[0:0] === 1'b1) ? icmp_ln879_13_fu_2707_p2 : icmp_ln768_6_fu_2713_p2);

assign select_ln777_7_fu_2942_p3 = ((and_ln416_7_fu_2890_p2[0:0] === 1'b1) ? icmp_ln879_15_fu_2930_p2 : icmp_ln768_7_fu_2936_p2);

assign select_ln777_8_fu_3165_p3 = ((and_ln416_8_fu_3113_p2[0:0] === 1'b1) ? icmp_ln879_17_fu_3153_p2 : icmp_ln768_8_fu_3159_p2);

assign select_ln777_9_fu_3388_p3 = ((and_ln416_9_fu_3336_p2[0:0] === 1'b1) ? icmp_ln879_19_fu_3376_p2 : icmp_ln768_9_fu_3382_p2);

assign select_ln777_fu_1377_p3 = ((and_ln416_fu_1325_p2[0:0] === 1'b1) ? icmp_ln879_1_fu_1365_p2 : icmp_ln768_fu_1371_p2);

assign select_ln785_10_fu_3549_p3 = ((and_ln785_5_reg_4260[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln785_11_fu_3556_p3 = ((or_ln785_16_reg_4265[0:0] === 1'b1) ? select_ln785_10_fu_3549_p3 : buf_5_V_reg_4255);

assign select_ln785_12_fu_3562_p3 = ((and_ln785_6_reg_4275[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln785_13_fu_3569_p3 = ((or_ln785_17_reg_4280[0:0] === 1'b1) ? select_ln785_12_fu_3562_p3 : buf_6_V_reg_4270);

assign select_ln785_14_fu_3575_p3 = ((and_ln785_7_reg_4290[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln785_15_fu_3582_p3 = ((or_ln785_18_reg_4295[0:0] === 1'b1) ? select_ln785_14_fu_3575_p3 : buf_7_V_reg_4285);

assign select_ln785_16_fu_3588_p3 = ((and_ln785_8_reg_4305[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln785_17_fu_3595_p3 = ((or_ln785_19_reg_4310[0:0] === 1'b1) ? select_ln785_16_fu_3588_p3 : buf_8_V_1_reg_4300);

assign select_ln785_18_fu_3601_p3 = ((and_ln785_9_reg_4320[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln785_19_fu_3608_p3 = ((or_ln785_20_reg_4325[0:0] === 1'b1) ? select_ln785_18_fu_3601_p3 : buf_9_V_reg_4315);

assign select_ln785_1_fu_3491_p3 = ((or_ln785_11_reg_4190[0:0] === 1'b1) ? select_ln785_fu_3484_p3 : buf_0_V_reg_4180);

assign select_ln785_2_fu_3497_p3 = ((and_ln785_1_reg_4200[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln785_3_fu_3504_p3 = ((or_ln785_12_reg_4205[0:0] === 1'b1) ? select_ln785_2_fu_3497_p3 : buf_1_V_reg_4195);

assign select_ln785_4_fu_3510_p3 = ((and_ln785_2_reg_4215[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln785_5_fu_3517_p3 = ((or_ln785_13_reg_4220[0:0] === 1'b1) ? select_ln785_4_fu_3510_p3 : buf_2_V_reg_4210);

assign select_ln785_6_fu_3523_p3 = ((and_ln785_3_reg_4230[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln785_7_fu_3530_p3 = ((or_ln785_14_reg_4235[0:0] === 1'b1) ? select_ln785_6_fu_3523_p3 : buf_3_V_reg_4225);

assign select_ln785_8_fu_3536_p3 = ((and_ln785_4_reg_4245[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln785_9_fu_3543_p3 = ((or_ln785_15_reg_4250[0:0] === 1'b1) ? select_ln785_8_fu_3536_p3 : buf_4_V_reg_4240);

assign select_ln785_fu_3484_p3 = ((and_ln785_reg_4185[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign sext_ln1118_1_fu_1117_p1 = select_ln340_2_reg_3974;

assign sext_ln1192_10_fu_1931_p1 = mul_ln1118_3_reg_4075;

assign sext_ln1192_1_fu_1485_p1 = shl_ln728_2_fu_1473_p3;

assign sext_ln1192_2_fu_1708_p1 = shl_ln728_3_fu_1696_p3;

assign sext_ln1192_3_fu_1934_p1 = shl_ln728_4_fu_1919_p3;

assign sext_ln1192_4_fu_2158_p1 = shl_ln728_5_fu_2146_p3;

assign sext_ln1192_5_fu_2381_p1 = shl_ln728_6_fu_2369_p3;

assign sext_ln1192_6_fu_2604_p1 = shl_ln728_7_fu_2592_p3;

assign sext_ln1192_7_fu_2827_p1 = shl_ln728_8_fu_2815_p3;

assign sext_ln1192_8_fu_3050_p1 = shl_ln728_9_fu_3038_p3;

assign sext_ln1192_9_fu_3273_p1 = shl_ln728_s_fu_3261_p3;

assign sext_ln1192_fu_1262_p1 = shl_ln728_1_fu_1250_p3;

assign sext_ln415_fu_605_p1 = $signed(buf_0_V_2_fu_599_p2);

assign sext_ln713_10_fu_1096_p1 = $signed(tmp_80_fu_1086_p4);

assign sext_ln713_1_fu_844_p1 = $signed(tmp_71_fu_834_p4);

assign sext_ln713_2_fu_872_p1 = $signed(tmp_72_fu_862_p4);

assign sext_ln713_3_fu_900_p1 = $signed(tmp_73_fu_890_p4);

assign sext_ln713_4_fu_928_p1 = $signed(tmp_74_fu_918_p4);

assign sext_ln713_5_fu_956_p1 = $signed(tmp_75_fu_946_p4);

assign sext_ln713_6_fu_984_p1 = $signed(tmp_76_fu_974_p4);

assign sext_ln713_7_fu_1012_p1 = $signed(tmp_77_fu_1002_p4);

assign sext_ln713_8_fu_1040_p1 = $signed(tmp_78_fu_1030_p4);

assign sext_ln713_9_fu_1068_p1 = $signed(tmp_79_fu_1058_p4);

assign sext_ln713_fu_591_p1 = $signed(trunc_ln1_fu_581_p4);

assign sext_ln728_1_fu_1481_p1 = shl_ln728_2_fu_1473_p3;

assign sext_ln728_2_fu_1704_p1 = shl_ln728_3_fu_1696_p3;

assign sext_ln728_3_fu_1927_p1 = shl_ln728_4_fu_1919_p3;

assign sext_ln728_4_fu_2154_p1 = shl_ln728_5_fu_2146_p3;

assign sext_ln728_5_fu_2377_p1 = shl_ln728_6_fu_2369_p3;

assign sext_ln728_6_fu_2600_p1 = shl_ln728_7_fu_2592_p3;

assign sext_ln728_7_fu_2823_p1 = shl_ln728_8_fu_2815_p3;

assign sext_ln728_8_fu_3046_p1 = shl_ln728_9_fu_3038_p3;

assign sext_ln728_9_fu_3269_p1 = shl_ln728_s_fu_3261_p3;

assign sext_ln728_fu_1258_p1 = shl_ln728_1_fu_1250_p3;

assign shl_ln728_1_fu_1250_p3 = {{ap_phi_mux_buf_0_V_21_phi_fu_468_p4}, {7'd0}};

assign shl_ln728_2_fu_1473_p3 = {{ap_phi_mux_buf_1_V_22_phi_fu_458_p4}, {7'd0}};

assign shl_ln728_3_fu_1696_p3 = {{ap_phi_mux_buf_2_V_23_phi_fu_448_p4}, {7'd0}};

assign shl_ln728_4_fu_1919_p3 = {{ap_phi_mux_buf_3_V_24_phi_fu_438_p4}, {7'd0}};

assign shl_ln728_5_fu_2146_p3 = {{ap_phi_mux_buf_4_V_25_phi_fu_428_p4}, {7'd0}};

assign shl_ln728_6_fu_2369_p3 = {{ap_phi_mux_buf_5_V_26_phi_fu_418_p4}, {7'd0}};

assign shl_ln728_7_fu_2592_p3 = {{ap_phi_mux_buf_6_V_27_phi_fu_408_p4}, {7'd0}};

assign shl_ln728_8_fu_2815_p3 = {{ap_phi_mux_buf_7_V_28_phi_fu_398_p4}, {7'd0}};

assign shl_ln728_9_fu_3038_p3 = {{ap_phi_mux_buf_8_V_29_phi_fu_388_p4}, {7'd0}};

assign shl_ln728_s_fu_3261_p3 = {{ap_phi_mux_buf_9_V_210_phi_fu_378_p4}, {7'd0}};

assign shl_ln_fu_3657_p3 = {{p_Val2_8_fu_3631_p12}, {15'd0}};

assign tmp_100_fu_1967_p3 = add_ln1192_3_fu_1938_p2[32'd22];

assign tmp_102_fu_1984_p3 = buf_3_V_fu_1978_p2[32'd15];

assign tmp_103_fu_2004_p3 = buf_3_V_fu_1978_p2[32'd15];

assign tmp_104_fu_2058_p3 = add_ln1192_13_fu_1944_p2[32'd23];

assign tmp_105_fu_2172_p3 = add_ln1192_4_fu_2162_p2[32'd26];

assign tmp_106_fu_2190_p3 = add_ln1192_4_fu_2162_p2[32'd22];

assign tmp_108_fu_2207_p3 = buf_4_V_fu_2201_p2[32'd15];

assign tmp_109_fu_2227_p3 = buf_4_V_fu_2201_p2[32'd15];

assign tmp_110_fu_2281_p3 = add_ln1192_14_fu_2167_p2[32'd23];

assign tmp_111_fu_2395_p3 = add_ln1192_5_fu_2385_p2[32'd26];

assign tmp_112_fu_2413_p3 = add_ln1192_5_fu_2385_p2[32'd22];

assign tmp_114_fu_2430_p3 = buf_5_V_fu_2424_p2[32'd15];

assign tmp_115_fu_2450_p3 = buf_5_V_fu_2424_p2[32'd15];

assign tmp_116_fu_2504_p3 = add_ln1192_15_fu_2390_p2[32'd23];

assign tmp_117_fu_2618_p3 = add_ln1192_6_fu_2608_p2[32'd26];

assign tmp_118_fu_2636_p3 = add_ln1192_6_fu_2608_p2[32'd22];

assign tmp_120_fu_2653_p3 = buf_6_V_fu_2647_p2[32'd15];

assign tmp_121_fu_2673_p3 = buf_6_V_fu_2647_p2[32'd15];

assign tmp_122_fu_2727_p3 = add_ln1192_16_fu_2613_p2[32'd23];

assign tmp_123_fu_2841_p3 = add_ln1192_7_fu_2831_p2[32'd26];

assign tmp_124_fu_2859_p3 = add_ln1192_7_fu_2831_p2[32'd22];

assign tmp_126_fu_2876_p3 = buf_7_V_fu_2870_p2[32'd15];

assign tmp_127_fu_2896_p3 = buf_7_V_fu_2870_p2[32'd15];

assign tmp_128_fu_2950_p3 = add_ln1192_17_fu_2836_p2[32'd23];

assign tmp_129_fu_3064_p3 = add_ln1192_8_fu_3054_p2[32'd26];

assign tmp_130_fu_3082_p3 = add_ln1192_8_fu_3054_p2[32'd22];

assign tmp_132_fu_3099_p3 = buf_8_V_1_fu_3093_p2[32'd15];

assign tmp_133_fu_3119_p3 = buf_8_V_1_fu_3093_p2[32'd15];

assign tmp_134_fu_3173_p3 = add_ln1192_18_fu_3059_p2[32'd23];

assign tmp_135_fu_3287_p3 = add_ln1192_9_fu_3277_p2[32'd26];

assign tmp_136_fu_3305_p3 = add_ln1192_9_fu_3277_p2[32'd22];

assign tmp_138_fu_3322_p3 = buf_9_V_fu_3316_p2[32'd15];

assign tmp_139_fu_3342_p3 = buf_9_V_fu_3316_p2[32'd15];

assign tmp_140_fu_3396_p3 = add_ln1192_19_fu_3282_p2[32'd23];

assign tmp_16_fu_1339_p4 = {{add_ln1192_fu_1266_p2[26:24]}};

assign tmp_17_fu_1355_p4 = {{add_ln1192_fu_1266_p2[26:23]}};

assign tmp_18_fu_1562_p4 = {{add_ln1192_1_fu_1489_p2[26:24]}};

assign tmp_19_fu_1578_p4 = {{add_ln1192_1_fu_1489_p2[26:23]}};

assign tmp_20_fu_1785_p4 = {{add_ln1192_2_fu_1712_p2[26:24]}};

assign tmp_21_fu_1801_p4 = {{add_ln1192_2_fu_1712_p2[26:23]}};

assign tmp_22_fu_2012_p4 = {{add_ln1192_3_fu_1938_p2[26:24]}};

assign tmp_23_fu_2028_p4 = {{add_ln1192_3_fu_1938_p2[26:23]}};

assign tmp_24_fu_2235_p4 = {{add_ln1192_4_fu_2162_p2[26:24]}};

assign tmp_25_fu_2251_p4 = {{add_ln1192_4_fu_2162_p2[26:23]}};

assign tmp_26_fu_2458_p4 = {{add_ln1192_5_fu_2385_p2[26:24]}};

assign tmp_27_fu_2474_p4 = {{add_ln1192_5_fu_2385_p2[26:23]}};

assign tmp_28_fu_2681_p4 = {{add_ln1192_6_fu_2608_p2[26:24]}};

assign tmp_29_fu_2697_p4 = {{add_ln1192_6_fu_2608_p2[26:23]}};

assign tmp_30_fu_2904_p4 = {{add_ln1192_7_fu_2831_p2[26:24]}};

assign tmp_31_fu_2920_p4 = {{add_ln1192_7_fu_2831_p2[26:23]}};

assign tmp_32_fu_3127_p4 = {{add_ln1192_8_fu_3054_p2[26:24]}};

assign tmp_33_fu_3143_p4 = {{add_ln1192_8_fu_3054_p2[26:23]}};

assign tmp_34_fu_3350_p4 = {{add_ln1192_9_fu_3277_p2[26:24]}};

assign tmp_35_fu_3366_p4 = {{add_ln1192_9_fu_3277_p2[26:23]}};

assign tmp_68_fu_702_p3 = pool_out_buf_q0[32'd14];

assign tmp_69_fu_720_p3 = tmp_in_V_1_fu_714_p2[32'd15];

assign tmp_71_fu_834_p4 = {{linear_weight_fix_V_s_q0[9:1]}};

assign tmp_72_fu_862_p4 = {{linear_weight_fix_V_1_q0[9:1]}};

assign tmp_73_fu_890_p4 = {{linear_weight_fix_V_2_q0[9:1]}};

assign tmp_74_fu_918_p4 = {{linear_weight_fix_V_3_q0[8:1]}};

assign tmp_75_fu_946_p4 = {{linear_weight_fix_V_4_q0[9:1]}};

assign tmp_76_fu_974_p4 = {{linear_weight_fix_V_5_q0[9:1]}};

assign tmp_77_fu_1002_p4 = {{linear_weight_fix_V_6_q0[9:1]}};

assign tmp_78_fu_1030_p4 = {{linear_weight_fix_V_7_q0[9:1]}};

assign tmp_79_fu_1058_p4 = {{linear_weight_fix_V_8_q0[9:1]}};

assign tmp_80_fu_1086_p4 = {{linear_weight_fix_V_9_q0[9:1]}};

assign tmp_81_fu_1276_p3 = add_ln1192_fu_1266_p2[32'd26];

assign tmp_82_fu_1294_p3 = add_ln1192_fu_1266_p2[32'd22];

assign tmp_84_fu_1311_p3 = buf_0_V_fu_1305_p2[32'd15];

assign tmp_85_fu_1331_p3 = buf_0_V_fu_1305_p2[32'd15];

assign tmp_86_fu_1385_p3 = add_ln1192_10_fu_1271_p2[32'd23];

assign tmp_87_fu_1499_p3 = add_ln1192_1_fu_1489_p2[32'd26];

assign tmp_88_fu_1517_p3 = add_ln1192_1_fu_1489_p2[32'd22];

assign tmp_90_fu_1534_p3 = buf_1_V_fu_1528_p2[32'd15];

assign tmp_91_fu_1554_p3 = buf_1_V_fu_1528_p2[32'd15];

assign tmp_92_fu_1608_p3 = add_ln1192_11_fu_1494_p2[32'd23];

assign tmp_93_fu_1722_p3 = add_ln1192_2_fu_1712_p2[32'd26];

assign tmp_94_fu_1740_p3 = add_ln1192_2_fu_1712_p2[32'd22];

assign tmp_96_fu_1757_p3 = buf_2_V_fu_1751_p2[32'd15];

assign tmp_97_fu_1777_p3 = buf_2_V_fu_1751_p2[32'd15];

assign tmp_98_fu_1831_p3 = add_ln1192_12_fu_1717_p2[32'd23];

assign tmp_99_fu_1949_p3 = add_ln1192_3_fu_1938_p2[32'd26];

assign tmp_in_V_1_fu_714_p2 = (zext_ln415_fu_710_p1 + tmp_in_V_fu_684_p4);

assign tmp_in_V_fu_684_p4 = {{pool_out_buf_q0[30:15]}};

assign trunc_ln1192_1_fu_1136_p1 = mul_ln1118_1_fu_3678_p2[23:0];

assign trunc_ln1192_2_fu_1149_p1 = mul_ln1118_2_fu_3686_p2[23:0];

assign trunc_ln1192_3_fu_1162_p1 = mul_ln1118_3_fu_3694_p2[23:0];

assign trunc_ln1192_4_fu_1175_p1 = mul_ln1118_4_fu_3702_p2[23:0];

assign trunc_ln1192_5_fu_1188_p1 = mul_ln1118_5_fu_3710_p2[23:0];

assign trunc_ln1192_6_fu_1201_p1 = mul_ln1118_6_fu_3718_p2[23:0];

assign trunc_ln1192_7_fu_1214_p1 = mul_ln1118_7_fu_3726_p2[23:0];

assign trunc_ln1192_8_fu_1227_p1 = mul_ln1118_8_fu_3734_p2[23:0];

assign trunc_ln1192_9_fu_1240_p1 = mul_ln1118_9_fu_3742_p2[23:0];

assign trunc_ln1192_fu_1123_p1 = mul_ln1118_fu_3670_p2[23:0];

assign trunc_ln1_fu_581_p4 = {{p_Val2_s_fu_539_p18[11:1]}};

assign trunc_ln415_1_fu_876_p1 = linear_weight_fix_V_1_q0[0:0];

assign trunc_ln415_2_fu_904_p1 = linear_weight_fix_V_2_q0[0:0];

assign trunc_ln415_3_fu_932_p1 = linear_weight_fix_V_3_q0[0:0];

assign trunc_ln415_4_fu_960_p1 = linear_weight_fix_V_4_q0[0:0];

assign trunc_ln415_5_fu_988_p1 = linear_weight_fix_V_5_q0[0:0];

assign trunc_ln415_6_fu_1016_p1 = linear_weight_fix_V_6_q0[0:0];

assign trunc_ln415_7_fu_1044_p1 = linear_weight_fix_V_7_q0[0:0];

assign trunc_ln415_8_fu_1072_p1 = linear_weight_fix_V_8_q0[0:0];

assign trunc_ln415_9_fu_1100_p1 = linear_weight_fix_V_9_q0[0:0];

assign trunc_ln415_fu_848_p1 = linear_weight_fix_V_s_q0[0:0];

assign trunc_ln700_fu_577_p1 = p_Val2_s_fu_539_p18[0:0];

assign trunc_ln708_1_fu_1507_p4 = {{add_ln1192_1_fu_1489_p2[22:7]}};

assign trunc_ln708_2_fu_1730_p4 = {{add_ln1192_2_fu_1712_p2[22:7]}};

assign trunc_ln708_3_fu_1957_p4 = {{add_ln1192_3_fu_1938_p2[22:7]}};

assign trunc_ln708_4_fu_2180_p4 = {{add_ln1192_4_fu_2162_p2[22:7]}};

assign trunc_ln708_5_fu_2403_p4 = {{add_ln1192_5_fu_2385_p2[22:7]}};

assign trunc_ln708_6_fu_2626_p4 = {{add_ln1192_6_fu_2608_p2[22:7]}};

assign trunc_ln708_7_fu_2849_p4 = {{add_ln1192_7_fu_2831_p2[22:7]}};

assign trunc_ln708_8_fu_3072_p4 = {{add_ln1192_8_fu_3054_p2[22:7]}};

assign trunc_ln708_9_fu_3295_p4 = {{add_ln1192_9_fu_3277_p2[22:7]}};

assign trunc_ln708_s_fu_1284_p4 = {{add_ln1192_fu_1266_p2[22:7]}};

assign underflow_fu_790_p2 = (xor_ln786_fu_784_p2 & p_Result_s_reg_3896);

assign xor_ln416_10_fu_3330_p2 = (tmp_138_fu_3322_p3 ^ 1'd1);

assign xor_ln416_1_fu_1319_p2 = (tmp_84_fu_1311_p3 ^ 1'd1);

assign xor_ln416_2_fu_1542_p2 = (tmp_90_fu_1534_p3 ^ 1'd1);

assign xor_ln416_3_fu_1765_p2 = (tmp_96_fu_1757_p3 ^ 1'd1);

assign xor_ln416_4_fu_1992_p2 = (tmp_102_fu_1984_p3 ^ 1'd1);

assign xor_ln416_5_fu_2215_p2 = (tmp_108_fu_2207_p3 ^ 1'd1);

assign xor_ln416_6_fu_2438_p2 = (tmp_114_fu_2430_p3 ^ 1'd1);

assign xor_ln416_7_fu_2661_p2 = (tmp_120_fu_2653_p3 ^ 1'd1);

assign xor_ln416_8_fu_2884_p2 = (tmp_126_fu_2876_p3 ^ 1'd1);

assign xor_ln416_9_fu_3107_p2 = (tmp_132_fu_3099_p3 ^ 1'd1);

assign xor_ln416_fu_728_p2 = (tmp_69_fu_720_p3 ^ 1'd1);

assign xor_ln779_10_fu_3404_p2 = (tmp_140_fu_3396_p3 ^ 1'd1);

assign xor_ln779_1_fu_1393_p2 = (tmp_86_fu_1385_p3 ^ 1'd1);

assign xor_ln779_2_fu_1616_p2 = (tmp_92_fu_1608_p3 ^ 1'd1);

assign xor_ln779_3_fu_1839_p2 = (tmp_98_fu_1831_p3 ^ 1'd1);

assign xor_ln779_4_fu_2066_p2 = (tmp_104_fu_2058_p3 ^ 1'd1);

assign xor_ln779_5_fu_2289_p2 = (tmp_110_fu_2281_p3 ^ 1'd1);

assign xor_ln779_6_fu_2512_p2 = (tmp_116_fu_2504_p3 ^ 1'd1);

assign xor_ln779_7_fu_2735_p2 = (tmp_122_fu_2727_p3 ^ 1'd1);

assign xor_ln779_8_fu_2958_p2 = (tmp_128_fu_2950_p3 ^ 1'd1);

assign xor_ln779_9_fu_3181_p2 = (tmp_134_fu_3173_p3 ^ 1'd1);

assign xor_ln779_fu_748_p2 = (p_Result_s_reg_3896 ^ 1'd1);

assign xor_ln785_10_fu_2327_p2 = (tmp_105_fu_2172_p3 ^ 1'd1);

assign xor_ln785_11_fu_2538_p2 = (select_ln777_5_fu_2496_p3 ^ 1'd1);

assign xor_ln785_12_fu_2550_p2 = (tmp_111_fu_2395_p3 ^ 1'd1);

assign xor_ln785_13_fu_2761_p2 = (select_ln777_6_fu_2719_p3 ^ 1'd1);

assign xor_ln785_14_fu_2773_p2 = (tmp_117_fu_2618_p3 ^ 1'd1);

assign xor_ln785_15_fu_2984_p2 = (select_ln777_7_fu_2942_p3 ^ 1'd1);

assign xor_ln785_16_fu_2996_p2 = (tmp_123_fu_2841_p3 ^ 1'd1);

assign xor_ln785_17_fu_3207_p2 = (select_ln777_8_fu_3165_p3 ^ 1'd1);

assign xor_ln785_18_fu_3219_p2 = (tmp_129_fu_3064_p3 ^ 1'd1);

assign xor_ln785_19_fu_3430_p2 = (select_ln777_9_fu_3388_p3 ^ 1'd1);

assign xor_ln785_1_fu_1419_p2 = (select_ln777_fu_1377_p3 ^ 1'd1);

assign xor_ln785_20_fu_3442_p2 = (tmp_135_fu_3287_p3 ^ 1'd1);

assign xor_ln785_2_fu_1431_p2 = (tmp_81_fu_1276_p3 ^ 1'd1);

assign xor_ln785_3_fu_1642_p2 = (select_ln777_1_fu_1600_p3 ^ 1'd1);

assign xor_ln785_4_fu_1654_p2 = (tmp_87_fu_1499_p3 ^ 1'd1);

assign xor_ln785_5_fu_1865_p2 = (select_ln777_2_fu_1823_p3 ^ 1'd1);

assign xor_ln785_6_fu_1877_p2 = (tmp_93_fu_1722_p3 ^ 1'd1);

assign xor_ln785_7_fu_2092_p2 = (select_ln777_3_fu_2050_p3 ^ 1'd1);

assign xor_ln785_8_fu_2104_p2 = (tmp_99_fu_1949_p3 ^ 1'd1);

assign xor_ln785_9_fu_2315_p2 = (select_ln777_4_fu_2273_p3 ^ 1'd1);

assign xor_ln785_fu_759_p2 = (p_Result_s_reg_3896 ^ carry_2_reg_3910);

assign xor_ln786_10_fu_3466_p2 = (or_ln786_10_fu_3460_p2 ^ 1'd1);

assign xor_ln786_1_fu_1455_p2 = (or_ln786_1_fu_1449_p2 ^ 1'd1);

assign xor_ln786_2_fu_1678_p2 = (or_ln786_2_fu_1672_p2 ^ 1'd1);

assign xor_ln786_3_fu_1901_p2 = (or_ln786_3_fu_1895_p2 ^ 1'd1);

assign xor_ln786_4_fu_2128_p2 = (or_ln786_4_fu_2122_p2 ^ 1'd1);

assign xor_ln786_5_fu_2351_p2 = (or_ln786_5_fu_2345_p2 ^ 1'd1);

assign xor_ln786_6_fu_2574_p2 = (or_ln786_6_fu_2568_p2 ^ 1'd1);

assign xor_ln786_7_fu_2797_p2 = (or_ln786_7_fu_2791_p2 ^ 1'd1);

assign xor_ln786_8_fu_3020_p2 = (or_ln786_8_fu_3014_p2 ^ 1'd1);

assign xor_ln786_9_fu_3243_p2 = (or_ln786_9_fu_3237_p2 ^ 1'd1);

assign xor_ln786_fu_784_p2 = (or_ln786_fu_779_p2 ^ 1'd1);

assign zext_ln273_fu_671_p1 = cii_0_reg_475;

assign zext_ln286_fu_3626_p1 = coo4_0_reg_486;

assign zext_ln415_10_fu_3313_p1 = tmp_137_reg_4175;

assign zext_ln415_11_fu_852_p1 = trunc_ln415_fu_848_p1;

assign zext_ln415_12_fu_880_p1 = trunc_ln415_1_fu_876_p1;

assign zext_ln415_13_fu_908_p1 = trunc_ln415_2_fu_904_p1;

assign zext_ln415_14_fu_936_p1 = trunc_ln415_3_fu_932_p1;

assign zext_ln415_15_fu_964_p1 = trunc_ln415_4_fu_960_p1;

assign zext_ln415_16_fu_992_p1 = trunc_ln415_5_fu_988_p1;

assign zext_ln415_17_fu_1020_p1 = trunc_ln415_6_fu_1016_p1;

assign zext_ln415_18_fu_1048_p1 = trunc_ln415_7_fu_1044_p1;

assign zext_ln415_19_fu_1076_p1 = trunc_ln415_8_fu_1072_p1;

assign zext_ln415_1_fu_1302_p1 = tmp_83_reg_4040;

assign zext_ln415_20_fu_1104_p1 = trunc_ln415_9_fu_1100_p1;

assign zext_ln415_2_fu_1525_p1 = tmp_89_reg_4055;

assign zext_ln415_3_fu_1748_p1 = tmp_95_reg_4070;

assign zext_ln415_4_fu_1975_p1 = tmp_101_reg_4085;

assign zext_ln415_5_fu_2198_p1 = tmp_107_reg_4100;

assign zext_ln415_6_fu_2421_p1 = tmp_113_reg_4115;

assign zext_ln415_7_fu_2644_p1 = tmp_119_reg_4130;

assign zext_ln415_8_fu_2867_p1 = tmp_125_reg_4145;

assign zext_ln415_9_fu_3090_p1 = tmp_131_reg_4160;

assign zext_ln415_fu_710_p1 = tmp_68_fu_702_p3;

assign zext_ln713_fu_595_p1 = trunc_ln700_fu_577_p1;

always @ (posedge ap_clk) begin
    zext_ln273_reg_3877[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //matmul
