// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FracNet_T_avgpool_8x8_Pipeline_VITIS_LOOP_237_2_VITIS_LOOP_238_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tmp_V_31_reload,
        tmp_V_30_reload,
        tmp_V_29_reload,
        tmp_V_28_reload,
        tmp_V_27_reload,
        tmp_V_26_reload,
        tmp_V_25_reload,
        tmp_V_24_reload,
        tmp_V_23_reload,
        tmp_V_22_reload,
        tmp_V_21_reload,
        tmp_V_20_reload,
        tmp_V_19_reload,
        tmp_V_18_reload,
        tmp_V_17_reload,
        tmp_V_16_reload,
        inputs_0_0_address0,
        inputs_0_0_ce0,
        inputs_0_0_q0,
        inputs_0_1_address0,
        inputs_0_1_ce0,
        inputs_0_1_q0,
        inputs_0_2_address0,
        inputs_0_2_ce0,
        inputs_0_2_q0,
        inputs_0_3_address0,
        inputs_0_3_ce0,
        inputs_0_3_q0,
        inputs_0_4_address0,
        inputs_0_4_ce0,
        inputs_0_4_q0,
        inputs_0_5_address0,
        inputs_0_5_ce0,
        inputs_0_5_q0,
        inputs_0_6_address0,
        inputs_0_6_ce0,
        inputs_0_6_q0,
        inputs_0_7_address0,
        inputs_0_7_ce0,
        inputs_0_7_q0,
        inputs_0_8_address0,
        inputs_0_8_ce0,
        inputs_0_8_q0,
        inputs_0_9_address0,
        inputs_0_9_ce0,
        inputs_0_9_q0,
        inputs_0_10_address0,
        inputs_0_10_ce0,
        inputs_0_10_q0,
        inputs_0_11_address0,
        inputs_0_11_ce0,
        inputs_0_11_q0,
        inputs_0_12_address0,
        inputs_0_12_ce0,
        inputs_0_12_q0,
        inputs_0_13_address0,
        inputs_0_13_ce0,
        inputs_0_13_q0,
        inputs_0_14_address0,
        inputs_0_14_ce0,
        inputs_0_14_q0,
        inputs_0_15_address0,
        inputs_0_15_ce0,
        inputs_0_15_q0,
        inputs_1_0_address0,
        inputs_1_0_ce0,
        inputs_1_0_q0,
        inputs_1_1_address0,
        inputs_1_1_ce0,
        inputs_1_1_q0,
        inputs_1_2_address0,
        inputs_1_2_ce0,
        inputs_1_2_q0,
        inputs_1_3_address0,
        inputs_1_3_ce0,
        inputs_1_3_q0,
        inputs_1_4_address0,
        inputs_1_4_ce0,
        inputs_1_4_q0,
        inputs_1_5_address0,
        inputs_1_5_ce0,
        inputs_1_5_q0,
        inputs_1_6_address0,
        inputs_1_6_ce0,
        inputs_1_6_q0,
        inputs_1_7_address0,
        inputs_1_7_ce0,
        inputs_1_7_q0,
        inputs_1_8_address0,
        inputs_1_8_ce0,
        inputs_1_8_q0,
        inputs_1_9_address0,
        inputs_1_9_ce0,
        inputs_1_9_q0,
        inputs_1_10_address0,
        inputs_1_10_ce0,
        inputs_1_10_q0,
        inputs_1_11_address0,
        inputs_1_11_ce0,
        inputs_1_11_q0,
        inputs_1_12_address0,
        inputs_1_12_ce0,
        inputs_1_12_q0,
        inputs_1_13_address0,
        inputs_1_13_ce0,
        inputs_1_13_q0,
        inputs_1_14_address0,
        inputs_1_14_ce0,
        inputs_1_14_q0,
        inputs_1_15_address0,
        inputs_1_15_ce0,
        inputs_1_15_q0,
        inputs_2_0_address0,
        inputs_2_0_ce0,
        inputs_2_0_q0,
        inputs_2_1_address0,
        inputs_2_1_ce0,
        inputs_2_1_q0,
        inputs_2_2_address0,
        inputs_2_2_ce0,
        inputs_2_2_q0,
        inputs_2_3_address0,
        inputs_2_3_ce0,
        inputs_2_3_q0,
        inputs_2_4_address0,
        inputs_2_4_ce0,
        inputs_2_4_q0,
        inputs_2_5_address0,
        inputs_2_5_ce0,
        inputs_2_5_q0,
        inputs_2_6_address0,
        inputs_2_6_ce0,
        inputs_2_6_q0,
        inputs_2_7_address0,
        inputs_2_7_ce0,
        inputs_2_7_q0,
        inputs_2_8_address0,
        inputs_2_8_ce0,
        inputs_2_8_q0,
        inputs_2_9_address0,
        inputs_2_9_ce0,
        inputs_2_9_q0,
        inputs_2_10_address0,
        inputs_2_10_ce0,
        inputs_2_10_q0,
        inputs_2_11_address0,
        inputs_2_11_ce0,
        inputs_2_11_q0,
        inputs_2_12_address0,
        inputs_2_12_ce0,
        inputs_2_12_q0,
        inputs_2_13_address0,
        inputs_2_13_ce0,
        inputs_2_13_q0,
        inputs_2_14_address0,
        inputs_2_14_ce0,
        inputs_2_14_q0,
        inputs_2_15_address0,
        inputs_2_15_ce0,
        inputs_2_15_q0,
        inputs_3_0_address0,
        inputs_3_0_ce0,
        inputs_3_0_q0,
        inputs_3_1_address0,
        inputs_3_1_ce0,
        inputs_3_1_q0,
        inputs_3_2_address0,
        inputs_3_2_ce0,
        inputs_3_2_q0,
        inputs_3_3_address0,
        inputs_3_3_ce0,
        inputs_3_3_q0,
        inputs_3_4_address0,
        inputs_3_4_ce0,
        inputs_3_4_q0,
        inputs_3_5_address0,
        inputs_3_5_ce0,
        inputs_3_5_q0,
        inputs_3_6_address0,
        inputs_3_6_ce0,
        inputs_3_6_q0,
        inputs_3_7_address0,
        inputs_3_7_ce0,
        inputs_3_7_q0,
        inputs_3_8_address0,
        inputs_3_8_ce0,
        inputs_3_8_q0,
        inputs_3_9_address0,
        inputs_3_9_ce0,
        inputs_3_9_q0,
        inputs_3_10_address0,
        inputs_3_10_ce0,
        inputs_3_10_q0,
        inputs_3_11_address0,
        inputs_3_11_ce0,
        inputs_3_11_q0,
        inputs_3_12_address0,
        inputs_3_12_ce0,
        inputs_3_12_q0,
        inputs_3_13_address0,
        inputs_3_13_ce0,
        inputs_3_13_q0,
        inputs_3_14_address0,
        inputs_3_14_ce0,
        inputs_3_14_q0,
        inputs_3_15_address0,
        inputs_3_15_ce0,
        inputs_3_15_q0,
        tile,
        lhs_220_out,
        lhs_220_out_ap_vld,
        lhs_219_out,
        lhs_219_out_ap_vld,
        lhs_218_out,
        lhs_218_out_ap_vld,
        lhs_217_out,
        lhs_217_out_ap_vld,
        lhs_216_out,
        lhs_216_out_ap_vld,
        lhs_215_out,
        lhs_215_out_ap_vld,
        lhs_214_out,
        lhs_214_out_ap_vld,
        lhs_213_out,
        lhs_213_out_ap_vld,
        lhs_212_out,
        lhs_212_out_ap_vld,
        lhs_211_out,
        lhs_211_out_ap_vld,
        lhs_210_out,
        lhs_210_out_ap_vld,
        lhs_209_out,
        lhs_209_out_ap_vld,
        lhs_208_out,
        lhs_208_out_ap_vld,
        lhs_207_out,
        lhs_207_out_ap_vld,
        lhs_206_out,
        lhs_206_out_ap_vld,
        lhs_out,
        lhs_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] tmp_V_31_reload;
input  [31:0] tmp_V_30_reload;
input  [31:0] tmp_V_29_reload;
input  [31:0] tmp_V_28_reload;
input  [31:0] tmp_V_27_reload;
input  [31:0] tmp_V_26_reload;
input  [31:0] tmp_V_25_reload;
input  [31:0] tmp_V_24_reload;
input  [31:0] tmp_V_23_reload;
input  [31:0] tmp_V_22_reload;
input  [31:0] tmp_V_21_reload;
input  [31:0] tmp_V_20_reload;
input  [31:0] tmp_V_19_reload;
input  [31:0] tmp_V_18_reload;
input  [31:0] tmp_V_17_reload;
input  [31:0] tmp_V_16_reload;
output  [10:0] inputs_0_0_address0;
output   inputs_0_0_ce0;
input  [15:0] inputs_0_0_q0;
output  [10:0] inputs_0_1_address0;
output   inputs_0_1_ce0;
input  [15:0] inputs_0_1_q0;
output  [10:0] inputs_0_2_address0;
output   inputs_0_2_ce0;
input  [15:0] inputs_0_2_q0;
output  [10:0] inputs_0_3_address0;
output   inputs_0_3_ce0;
input  [15:0] inputs_0_3_q0;
output  [10:0] inputs_0_4_address0;
output   inputs_0_4_ce0;
input  [15:0] inputs_0_4_q0;
output  [10:0] inputs_0_5_address0;
output   inputs_0_5_ce0;
input  [15:0] inputs_0_5_q0;
output  [10:0] inputs_0_6_address0;
output   inputs_0_6_ce0;
input  [15:0] inputs_0_6_q0;
output  [10:0] inputs_0_7_address0;
output   inputs_0_7_ce0;
input  [15:0] inputs_0_7_q0;
output  [10:0] inputs_0_8_address0;
output   inputs_0_8_ce0;
input  [15:0] inputs_0_8_q0;
output  [10:0] inputs_0_9_address0;
output   inputs_0_9_ce0;
input  [15:0] inputs_0_9_q0;
output  [10:0] inputs_0_10_address0;
output   inputs_0_10_ce0;
input  [15:0] inputs_0_10_q0;
output  [10:0] inputs_0_11_address0;
output   inputs_0_11_ce0;
input  [15:0] inputs_0_11_q0;
output  [10:0] inputs_0_12_address0;
output   inputs_0_12_ce0;
input  [15:0] inputs_0_12_q0;
output  [10:0] inputs_0_13_address0;
output   inputs_0_13_ce0;
input  [15:0] inputs_0_13_q0;
output  [10:0] inputs_0_14_address0;
output   inputs_0_14_ce0;
input  [15:0] inputs_0_14_q0;
output  [10:0] inputs_0_15_address0;
output   inputs_0_15_ce0;
input  [15:0] inputs_0_15_q0;
output  [10:0] inputs_1_0_address0;
output   inputs_1_0_ce0;
input  [15:0] inputs_1_0_q0;
output  [10:0] inputs_1_1_address0;
output   inputs_1_1_ce0;
input  [15:0] inputs_1_1_q0;
output  [10:0] inputs_1_2_address0;
output   inputs_1_2_ce0;
input  [15:0] inputs_1_2_q0;
output  [10:0] inputs_1_3_address0;
output   inputs_1_3_ce0;
input  [15:0] inputs_1_3_q0;
output  [10:0] inputs_1_4_address0;
output   inputs_1_4_ce0;
input  [15:0] inputs_1_4_q0;
output  [10:0] inputs_1_5_address0;
output   inputs_1_5_ce0;
input  [15:0] inputs_1_5_q0;
output  [10:0] inputs_1_6_address0;
output   inputs_1_6_ce0;
input  [15:0] inputs_1_6_q0;
output  [10:0] inputs_1_7_address0;
output   inputs_1_7_ce0;
input  [15:0] inputs_1_7_q0;
output  [10:0] inputs_1_8_address0;
output   inputs_1_8_ce0;
input  [15:0] inputs_1_8_q0;
output  [10:0] inputs_1_9_address0;
output   inputs_1_9_ce0;
input  [15:0] inputs_1_9_q0;
output  [10:0] inputs_1_10_address0;
output   inputs_1_10_ce0;
input  [15:0] inputs_1_10_q0;
output  [10:0] inputs_1_11_address0;
output   inputs_1_11_ce0;
input  [15:0] inputs_1_11_q0;
output  [10:0] inputs_1_12_address0;
output   inputs_1_12_ce0;
input  [15:0] inputs_1_12_q0;
output  [10:0] inputs_1_13_address0;
output   inputs_1_13_ce0;
input  [15:0] inputs_1_13_q0;
output  [10:0] inputs_1_14_address0;
output   inputs_1_14_ce0;
input  [15:0] inputs_1_14_q0;
output  [10:0] inputs_1_15_address0;
output   inputs_1_15_ce0;
input  [15:0] inputs_1_15_q0;
output  [10:0] inputs_2_0_address0;
output   inputs_2_0_ce0;
input  [15:0] inputs_2_0_q0;
output  [10:0] inputs_2_1_address0;
output   inputs_2_1_ce0;
input  [15:0] inputs_2_1_q0;
output  [10:0] inputs_2_2_address0;
output   inputs_2_2_ce0;
input  [15:0] inputs_2_2_q0;
output  [10:0] inputs_2_3_address0;
output   inputs_2_3_ce0;
input  [15:0] inputs_2_3_q0;
output  [10:0] inputs_2_4_address0;
output   inputs_2_4_ce0;
input  [15:0] inputs_2_4_q0;
output  [10:0] inputs_2_5_address0;
output   inputs_2_5_ce0;
input  [15:0] inputs_2_5_q0;
output  [10:0] inputs_2_6_address0;
output   inputs_2_6_ce0;
input  [15:0] inputs_2_6_q0;
output  [10:0] inputs_2_7_address0;
output   inputs_2_7_ce0;
input  [15:0] inputs_2_7_q0;
output  [10:0] inputs_2_8_address0;
output   inputs_2_8_ce0;
input  [15:0] inputs_2_8_q0;
output  [10:0] inputs_2_9_address0;
output   inputs_2_9_ce0;
input  [15:0] inputs_2_9_q0;
output  [10:0] inputs_2_10_address0;
output   inputs_2_10_ce0;
input  [15:0] inputs_2_10_q0;
output  [10:0] inputs_2_11_address0;
output   inputs_2_11_ce0;
input  [15:0] inputs_2_11_q0;
output  [10:0] inputs_2_12_address0;
output   inputs_2_12_ce0;
input  [15:0] inputs_2_12_q0;
output  [10:0] inputs_2_13_address0;
output   inputs_2_13_ce0;
input  [15:0] inputs_2_13_q0;
output  [10:0] inputs_2_14_address0;
output   inputs_2_14_ce0;
input  [15:0] inputs_2_14_q0;
output  [10:0] inputs_2_15_address0;
output   inputs_2_15_ce0;
input  [15:0] inputs_2_15_q0;
output  [10:0] inputs_3_0_address0;
output   inputs_3_0_ce0;
input  [15:0] inputs_3_0_q0;
output  [10:0] inputs_3_1_address0;
output   inputs_3_1_ce0;
input  [15:0] inputs_3_1_q0;
output  [10:0] inputs_3_2_address0;
output   inputs_3_2_ce0;
input  [15:0] inputs_3_2_q0;
output  [10:0] inputs_3_3_address0;
output   inputs_3_3_ce0;
input  [15:0] inputs_3_3_q0;
output  [10:0] inputs_3_4_address0;
output   inputs_3_4_ce0;
input  [15:0] inputs_3_4_q0;
output  [10:0] inputs_3_5_address0;
output   inputs_3_5_ce0;
input  [15:0] inputs_3_5_q0;
output  [10:0] inputs_3_6_address0;
output   inputs_3_6_ce0;
input  [15:0] inputs_3_6_q0;
output  [10:0] inputs_3_7_address0;
output   inputs_3_7_ce0;
input  [15:0] inputs_3_7_q0;
output  [10:0] inputs_3_8_address0;
output   inputs_3_8_ce0;
input  [15:0] inputs_3_8_q0;
output  [10:0] inputs_3_9_address0;
output   inputs_3_9_ce0;
input  [15:0] inputs_3_9_q0;
output  [10:0] inputs_3_10_address0;
output   inputs_3_10_ce0;
input  [15:0] inputs_3_10_q0;
output  [10:0] inputs_3_11_address0;
output   inputs_3_11_ce0;
input  [15:0] inputs_3_11_q0;
output  [10:0] inputs_3_12_address0;
output   inputs_3_12_ce0;
input  [15:0] inputs_3_12_q0;
output  [10:0] inputs_3_13_address0;
output   inputs_3_13_ce0;
input  [15:0] inputs_3_13_q0;
output  [10:0] inputs_3_14_address0;
output   inputs_3_14_ce0;
input  [15:0] inputs_3_14_q0;
output  [10:0] inputs_3_15_address0;
output   inputs_3_15_ce0;
input  [15:0] inputs_3_15_q0;
input  [1:0] tile;
output  [31:0] lhs_220_out;
output   lhs_220_out_ap_vld;
output  [31:0] lhs_219_out;
output   lhs_219_out_ap_vld;
output  [31:0] lhs_218_out;
output   lhs_218_out_ap_vld;
output  [31:0] lhs_217_out;
output   lhs_217_out_ap_vld;
output  [31:0] lhs_216_out;
output   lhs_216_out_ap_vld;
output  [31:0] lhs_215_out;
output   lhs_215_out_ap_vld;
output  [31:0] lhs_214_out;
output   lhs_214_out_ap_vld;
output  [31:0] lhs_213_out;
output   lhs_213_out_ap_vld;
output  [31:0] lhs_212_out;
output   lhs_212_out_ap_vld;
output  [31:0] lhs_211_out;
output   lhs_211_out_ap_vld;
output  [31:0] lhs_210_out;
output   lhs_210_out_ap_vld;
output  [31:0] lhs_209_out;
output   lhs_209_out_ap_vld;
output  [31:0] lhs_208_out;
output   lhs_208_out_ap_vld;
output  [31:0] lhs_207_out;
output   lhs_207_out_ap_vld;
output  [31:0] lhs_206_out;
output   lhs_206_out_ap_vld;
output  [31:0] lhs_out;
output   lhs_out_ap_vld;

reg ap_idle;
reg inputs_0_0_ce0;
reg inputs_0_1_ce0;
reg inputs_0_2_ce0;
reg inputs_0_3_ce0;
reg inputs_0_4_ce0;
reg inputs_0_5_ce0;
reg inputs_0_6_ce0;
reg inputs_0_7_ce0;
reg inputs_0_8_ce0;
reg inputs_0_9_ce0;
reg inputs_0_10_ce0;
reg inputs_0_11_ce0;
reg inputs_0_12_ce0;
reg inputs_0_13_ce0;
reg inputs_0_14_ce0;
reg inputs_0_15_ce0;
reg inputs_1_0_ce0;
reg inputs_1_1_ce0;
reg inputs_1_2_ce0;
reg inputs_1_3_ce0;
reg inputs_1_4_ce0;
reg inputs_1_5_ce0;
reg inputs_1_6_ce0;
reg inputs_1_7_ce0;
reg inputs_1_8_ce0;
reg inputs_1_9_ce0;
reg inputs_1_10_ce0;
reg inputs_1_11_ce0;
reg inputs_1_12_ce0;
reg inputs_1_13_ce0;
reg inputs_1_14_ce0;
reg inputs_1_15_ce0;
reg inputs_2_0_ce0;
reg inputs_2_1_ce0;
reg inputs_2_2_ce0;
reg inputs_2_3_ce0;
reg inputs_2_4_ce0;
reg inputs_2_5_ce0;
reg inputs_2_6_ce0;
reg inputs_2_7_ce0;
reg inputs_2_8_ce0;
reg inputs_2_9_ce0;
reg inputs_2_10_ce0;
reg inputs_2_11_ce0;
reg inputs_2_12_ce0;
reg inputs_2_13_ce0;
reg inputs_2_14_ce0;
reg inputs_2_15_ce0;
reg inputs_3_0_ce0;
reg inputs_3_1_ce0;
reg inputs_3_2_ce0;
reg inputs_3_3_ce0;
reg inputs_3_4_ce0;
reg inputs_3_5_ce0;
reg inputs_3_6_ce0;
reg inputs_3_7_ce0;
reg inputs_3_8_ce0;
reg inputs_3_9_ce0;
reg inputs_3_10_ce0;
reg inputs_3_11_ce0;
reg inputs_3_12_ce0;
reg inputs_3_13_ce0;
reg inputs_3_14_ce0;
reg inputs_3_15_ce0;
reg lhs_220_out_ap_vld;
reg lhs_219_out_ap_vld;
reg lhs_218_out_ap_vld;
reg lhs_217_out_ap_vld;
reg lhs_216_out_ap_vld;
reg lhs_215_out_ap_vld;
reg lhs_214_out_ap_vld;
reg lhs_213_out_ap_vld;
reg lhs_212_out_ap_vld;
reg lhs_211_out_ap_vld;
reg lhs_210_out_ap_vld;
reg lhs_209_out_ap_vld;
reg lhs_208_out_ap_vld;
reg lhs_207_out_ap_vld;
reg lhs_206_out_ap_vld;
reg lhs_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln237_fu_1478_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln237_reg_3499;
reg   [0:0] icmp_ln237_reg_3499_pp0_iter1_reg;
wire   [3:0] select_ln237_fu_1508_p3;
reg   [3:0] select_ln237_reg_3503;
wire   [3:0] select_ln237_1_fu_1516_p3;
reg   [3:0] select_ln237_1_reg_3508;
wire   [15:0] rhs_fu_1634_p6;
reg   [15:0] rhs_reg_3834;
wire   [15:0] rhs_120_fu_1647_p6;
reg   [15:0] rhs_120_reg_3839;
wire   [15:0] rhs_122_fu_1660_p6;
reg   [15:0] rhs_122_reg_3844;
wire   [15:0] rhs_124_fu_1673_p6;
reg   [15:0] rhs_124_reg_3849;
wire   [15:0] rhs_126_fu_1686_p6;
reg   [15:0] rhs_126_reg_3854;
wire   [15:0] rhs_128_fu_1699_p6;
reg   [15:0] rhs_128_reg_3859;
wire   [15:0] rhs_130_fu_1712_p6;
reg   [15:0] rhs_130_reg_3864;
wire   [15:0] rhs_132_fu_1725_p6;
reg   [15:0] rhs_132_reg_3869;
wire   [15:0] rhs_134_fu_1738_p6;
reg   [15:0] rhs_134_reg_3874;
wire   [15:0] rhs_136_fu_1751_p6;
reg   [15:0] rhs_136_reg_3879;
wire   [15:0] rhs_138_fu_1764_p6;
reg   [15:0] rhs_138_reg_3884;
wire   [15:0] rhs_140_fu_1777_p6;
reg   [15:0] rhs_140_reg_3889;
wire   [15:0] rhs_142_fu_1790_p6;
reg   [15:0] rhs_142_reg_3894;
wire   [15:0] rhs_144_fu_1803_p6;
reg   [15:0] rhs_144_reg_3899;
wire   [15:0] rhs_146_fu_1816_p6;
reg   [15:0] rhs_146_reg_3904;
wire   [15:0] rhs_148_fu_1829_p6;
reg   [15:0] rhs_148_reg_3909;
wire   [63:0] zext_ln883_1_fu_1566_p1;
wire    ap_block_pp0_stage0;
reg   [31:0] lhs_fu_258;
wire   [31:0] select_ln348_fu_1963_p3;
wire    ap_loop_init;
reg   [31:0] lhs_206_fu_262;
wire   [31:0] select_ln348_49_fu_2044_p3;
reg   [31:0] lhs_207_fu_266;
wire   [31:0] select_ln348_50_fu_2125_p3;
reg   [31:0] lhs_208_fu_270;
wire   [31:0] select_ln348_51_fu_2206_p3;
reg   [31:0] lhs_209_fu_274;
wire   [31:0] select_ln348_52_fu_2287_p3;
reg   [31:0] lhs_210_fu_278;
wire   [31:0] select_ln348_53_fu_2368_p3;
reg   [31:0] lhs_211_fu_282;
wire   [31:0] select_ln348_54_fu_2449_p3;
reg   [31:0] lhs_212_fu_286;
wire   [31:0] select_ln348_55_fu_2530_p3;
reg   [31:0] lhs_213_fu_290;
wire   [31:0] select_ln348_56_fu_2611_p3;
reg   [31:0] lhs_214_fu_294;
wire   [31:0] select_ln348_57_fu_2692_p3;
reg   [31:0] lhs_215_fu_298;
wire   [31:0] select_ln348_58_fu_2773_p3;
reg   [31:0] lhs_216_fu_302;
wire   [31:0] select_ln348_59_fu_2854_p3;
reg   [31:0] lhs_217_fu_306;
wire   [31:0] select_ln348_60_fu_2935_p3;
reg   [31:0] lhs_218_fu_310;
wire   [31:0] select_ln348_61_fu_3016_p3;
reg   [31:0] lhs_219_fu_314;
wire   [31:0] select_ln348_62_fu_3097_p3;
reg   [31:0] lhs_220_fu_318;
wire   [31:0] select_ln348_63_fu_3178_p3;
reg   [3:0] j_fu_322;
wire   [3:0] add_ln238_fu_1524_p2;
reg   [3:0] ap_sig_allocacmp_j_load;
reg   [3:0] i_fu_326;
reg   [3:0] ap_sig_allocacmp_i_load;
reg   [6:0] indvar_flatten_fu_330;
wire   [6:0] add_ln237_1_fu_1484_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten_load;
wire    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln238_fu_1502_p2;
wire   [3:0] add_ln237_fu_1496_p2;
wire   [8:0] or_ln_fu_1545_p4;
wire   [9:0] zext_ln238_fu_1553_p1;
wire   [9:0] zext_ln883_fu_1557_p1;
wire   [9:0] add_ln883_fu_1560_p2;
wire  signed [31:0] sext_ln859_fu_1890_p0;
wire  signed [30:0] rhs_119_fu_1894_p3;
wire  signed [32:0] sext_ln1393_fu_1901_p1;
wire  signed [32:0] sext_ln859_fu_1890_p1;
wire   [32:0] ret_V_fu_1909_p2;
wire  signed [31:0] sext_ln1393_232_fu_1905_p1;
wire  signed [31:0] p_Val2_1014_fu_1923_p1;
wire   [31:0] p_Val2_1014_fu_1923_p2;
wire   [0:0] p_Result_s_fu_1915_p3;
wire   [0:0] p_Result_969_fu_1929_p3;
wire   [0:0] xor_ln941_fu_1937_p2;
wire   [0:0] overflow_fu_1943_p2;
wire   [0:0] xor_ln348_fu_1949_p2;
wire   [31:0] select_ln392_521_fu_1955_p3;
wire  signed [31:0] sext_ln859_94_fu_1971_p0;
wire  signed [30:0] rhs_121_fu_1975_p3;
wire  signed [32:0] sext_ln1393_233_fu_1982_p1;
wire  signed [32:0] sext_ln859_94_fu_1971_p1;
wire   [32:0] ret_V_219_fu_1990_p2;
wire  signed [31:0] sext_ln1393_234_fu_1986_p1;
wire  signed [31:0] p_Val2_1016_fu_2004_p1;
wire   [31:0] p_Val2_1016_fu_2004_p2;
wire   [0:0] p_Result_970_fu_1996_p3;
wire   [0:0] p_Result_971_fu_2010_p3;
wire   [0:0] xor_ln941_540_fu_2018_p2;
wire   [0:0] overflow_359_fu_2024_p2;
wire   [0:0] xor_ln348_46_fu_2030_p2;
wire   [31:0] select_ln392_522_fu_2036_p3;
wire  signed [31:0] sext_ln859_95_fu_2052_p0;
wire  signed [30:0] rhs_123_fu_2056_p3;
wire  signed [32:0] sext_ln1393_235_fu_2063_p1;
wire  signed [32:0] sext_ln859_95_fu_2052_p1;
wire   [32:0] ret_V_220_fu_2071_p2;
wire  signed [31:0] sext_ln1393_236_fu_2067_p1;
wire  signed [31:0] p_Val2_1018_fu_2085_p1;
wire   [31:0] p_Val2_1018_fu_2085_p2;
wire   [0:0] p_Result_972_fu_2077_p3;
wire   [0:0] p_Result_973_fu_2091_p3;
wire   [0:0] xor_ln941_541_fu_2099_p2;
wire   [0:0] overflow_360_fu_2105_p2;
wire   [0:0] xor_ln348_47_fu_2111_p2;
wire   [31:0] select_ln392_523_fu_2117_p3;
wire  signed [31:0] sext_ln859_96_fu_2133_p0;
wire  signed [30:0] rhs_125_fu_2137_p3;
wire  signed [32:0] sext_ln1393_237_fu_2144_p1;
wire  signed [32:0] sext_ln859_96_fu_2133_p1;
wire   [32:0] ret_V_221_fu_2152_p2;
wire  signed [31:0] sext_ln1393_238_fu_2148_p1;
wire  signed [31:0] p_Val2_1020_fu_2166_p1;
wire   [31:0] p_Val2_1020_fu_2166_p2;
wire   [0:0] p_Result_974_fu_2158_p3;
wire   [0:0] p_Result_975_fu_2172_p3;
wire   [0:0] xor_ln941_542_fu_2180_p2;
wire   [0:0] overflow_361_fu_2186_p2;
wire   [0:0] xor_ln348_48_fu_2192_p2;
wire   [31:0] select_ln392_524_fu_2198_p3;
wire  signed [31:0] sext_ln859_97_fu_2214_p0;
wire  signed [30:0] rhs_127_fu_2218_p3;
wire  signed [32:0] sext_ln1393_239_fu_2225_p1;
wire  signed [32:0] sext_ln859_97_fu_2214_p1;
wire   [32:0] ret_V_222_fu_2233_p2;
wire  signed [31:0] sext_ln1393_240_fu_2229_p1;
wire  signed [31:0] p_Val2_1022_fu_2247_p1;
wire   [31:0] p_Val2_1022_fu_2247_p2;
wire   [0:0] p_Result_976_fu_2239_p3;
wire   [0:0] p_Result_977_fu_2253_p3;
wire   [0:0] xor_ln941_543_fu_2261_p2;
wire   [0:0] overflow_362_fu_2267_p2;
wire   [0:0] xor_ln348_49_fu_2273_p2;
wire   [31:0] select_ln392_525_fu_2279_p3;
wire  signed [31:0] sext_ln859_98_fu_2295_p0;
wire  signed [30:0] rhs_129_fu_2299_p3;
wire  signed [32:0] sext_ln1393_241_fu_2306_p1;
wire  signed [32:0] sext_ln859_98_fu_2295_p1;
wire   [32:0] ret_V_223_fu_2314_p2;
wire  signed [31:0] sext_ln1393_242_fu_2310_p1;
wire  signed [31:0] p_Val2_1024_fu_2328_p1;
wire   [31:0] p_Val2_1024_fu_2328_p2;
wire   [0:0] p_Result_978_fu_2320_p3;
wire   [0:0] p_Result_979_fu_2334_p3;
wire   [0:0] xor_ln941_544_fu_2342_p2;
wire   [0:0] overflow_363_fu_2348_p2;
wire   [0:0] xor_ln348_50_fu_2354_p2;
wire   [31:0] select_ln392_526_fu_2360_p3;
wire  signed [31:0] sext_ln859_99_fu_2376_p0;
wire  signed [30:0] rhs_131_fu_2380_p3;
wire  signed [32:0] sext_ln1393_243_fu_2387_p1;
wire  signed [32:0] sext_ln859_99_fu_2376_p1;
wire   [32:0] ret_V_224_fu_2395_p2;
wire  signed [31:0] sext_ln1393_244_fu_2391_p1;
wire  signed [31:0] p_Val2_1026_fu_2409_p1;
wire   [31:0] p_Val2_1026_fu_2409_p2;
wire   [0:0] p_Result_980_fu_2401_p3;
wire   [0:0] p_Result_981_fu_2415_p3;
wire   [0:0] xor_ln941_545_fu_2423_p2;
wire   [0:0] overflow_364_fu_2429_p2;
wire   [0:0] xor_ln348_51_fu_2435_p2;
wire   [31:0] select_ln392_527_fu_2441_p3;
wire  signed [31:0] sext_ln859_100_fu_2457_p0;
wire  signed [30:0] rhs_133_fu_2461_p3;
wire  signed [32:0] sext_ln1393_245_fu_2468_p1;
wire  signed [32:0] sext_ln859_100_fu_2457_p1;
wire   [32:0] ret_V_225_fu_2476_p2;
wire  signed [31:0] sext_ln1393_246_fu_2472_p1;
wire  signed [31:0] p_Val2_1028_fu_2490_p1;
wire   [31:0] p_Val2_1028_fu_2490_p2;
wire   [0:0] p_Result_982_fu_2482_p3;
wire   [0:0] p_Result_983_fu_2496_p3;
wire   [0:0] xor_ln941_546_fu_2504_p2;
wire   [0:0] overflow_365_fu_2510_p2;
wire   [0:0] xor_ln348_52_fu_2516_p2;
wire   [31:0] select_ln392_528_fu_2522_p3;
wire  signed [31:0] sext_ln859_101_fu_2538_p0;
wire  signed [30:0] rhs_135_fu_2542_p3;
wire  signed [32:0] sext_ln1393_247_fu_2549_p1;
wire  signed [32:0] sext_ln859_101_fu_2538_p1;
wire   [32:0] ret_V_226_fu_2557_p2;
wire  signed [31:0] sext_ln1393_248_fu_2553_p1;
wire  signed [31:0] p_Val2_1030_fu_2571_p1;
wire   [31:0] p_Val2_1030_fu_2571_p2;
wire   [0:0] p_Result_984_fu_2563_p3;
wire   [0:0] p_Result_985_fu_2577_p3;
wire   [0:0] xor_ln941_547_fu_2585_p2;
wire   [0:0] overflow_366_fu_2591_p2;
wire   [0:0] xor_ln348_53_fu_2597_p2;
wire   [31:0] select_ln392_529_fu_2603_p3;
wire  signed [31:0] sext_ln859_102_fu_2619_p0;
wire  signed [30:0] rhs_137_fu_2623_p3;
wire  signed [32:0] sext_ln1393_249_fu_2630_p1;
wire  signed [32:0] sext_ln859_102_fu_2619_p1;
wire   [32:0] ret_V_227_fu_2638_p2;
wire  signed [31:0] sext_ln1393_250_fu_2634_p1;
wire  signed [31:0] p_Val2_1032_fu_2652_p1;
wire   [31:0] p_Val2_1032_fu_2652_p2;
wire   [0:0] p_Result_986_fu_2644_p3;
wire   [0:0] p_Result_987_fu_2658_p3;
wire   [0:0] xor_ln941_548_fu_2666_p2;
wire   [0:0] overflow_367_fu_2672_p2;
wire   [0:0] xor_ln348_54_fu_2678_p2;
wire   [31:0] select_ln392_530_fu_2684_p3;
wire  signed [31:0] sext_ln859_103_fu_2700_p0;
wire  signed [30:0] rhs_139_fu_2704_p3;
wire  signed [32:0] sext_ln1393_251_fu_2711_p1;
wire  signed [32:0] sext_ln859_103_fu_2700_p1;
wire   [32:0] ret_V_228_fu_2719_p2;
wire  signed [31:0] sext_ln1393_252_fu_2715_p1;
wire  signed [31:0] p_Val2_1034_fu_2733_p1;
wire   [31:0] p_Val2_1034_fu_2733_p2;
wire   [0:0] p_Result_988_fu_2725_p3;
wire   [0:0] p_Result_989_fu_2739_p3;
wire   [0:0] xor_ln941_549_fu_2747_p2;
wire   [0:0] overflow_368_fu_2753_p2;
wire   [0:0] xor_ln348_55_fu_2759_p2;
wire   [31:0] select_ln392_531_fu_2765_p3;
wire  signed [31:0] sext_ln859_104_fu_2781_p0;
wire  signed [30:0] rhs_141_fu_2785_p3;
wire  signed [32:0] sext_ln1393_253_fu_2792_p1;
wire  signed [32:0] sext_ln859_104_fu_2781_p1;
wire   [32:0] ret_V_229_fu_2800_p2;
wire  signed [31:0] sext_ln1393_254_fu_2796_p1;
wire  signed [31:0] p_Val2_1036_fu_2814_p1;
wire   [31:0] p_Val2_1036_fu_2814_p2;
wire   [0:0] p_Result_990_fu_2806_p3;
wire   [0:0] p_Result_991_fu_2820_p3;
wire   [0:0] xor_ln941_550_fu_2828_p2;
wire   [0:0] overflow_369_fu_2834_p2;
wire   [0:0] xor_ln348_56_fu_2840_p2;
wire   [31:0] select_ln392_532_fu_2846_p3;
wire  signed [31:0] sext_ln859_105_fu_2862_p0;
wire  signed [30:0] rhs_143_fu_2866_p3;
wire  signed [32:0] sext_ln1393_255_fu_2873_p1;
wire  signed [32:0] sext_ln859_105_fu_2862_p1;
wire   [32:0] ret_V_230_fu_2881_p2;
wire  signed [31:0] sext_ln1393_256_fu_2877_p1;
wire  signed [31:0] p_Val2_1038_fu_2895_p1;
wire   [31:0] p_Val2_1038_fu_2895_p2;
wire   [0:0] p_Result_992_fu_2887_p3;
wire   [0:0] p_Result_993_fu_2901_p3;
wire   [0:0] xor_ln941_551_fu_2909_p2;
wire   [0:0] overflow_370_fu_2915_p2;
wire   [0:0] xor_ln348_57_fu_2921_p2;
wire   [31:0] select_ln392_533_fu_2927_p3;
wire  signed [31:0] sext_ln859_106_fu_2943_p0;
wire  signed [30:0] rhs_145_fu_2947_p3;
wire  signed [32:0] sext_ln1393_257_fu_2954_p1;
wire  signed [32:0] sext_ln859_106_fu_2943_p1;
wire   [32:0] ret_V_231_fu_2962_p2;
wire  signed [31:0] sext_ln1393_258_fu_2958_p1;
wire  signed [31:0] p_Val2_1040_fu_2976_p1;
wire   [31:0] p_Val2_1040_fu_2976_p2;
wire   [0:0] p_Result_994_fu_2968_p3;
wire   [0:0] p_Result_995_fu_2982_p3;
wire   [0:0] xor_ln941_552_fu_2990_p2;
wire   [0:0] overflow_371_fu_2996_p2;
wire   [0:0] xor_ln348_58_fu_3002_p2;
wire   [31:0] select_ln392_534_fu_3008_p3;
wire  signed [31:0] sext_ln859_107_fu_3024_p0;
wire  signed [30:0] rhs_147_fu_3028_p3;
wire  signed [32:0] sext_ln1393_259_fu_3035_p1;
wire  signed [32:0] sext_ln859_107_fu_3024_p1;
wire   [32:0] ret_V_232_fu_3043_p2;
wire  signed [31:0] sext_ln1393_260_fu_3039_p1;
wire  signed [31:0] p_Val2_1042_fu_3057_p1;
wire   [31:0] p_Val2_1042_fu_3057_p2;
wire   [0:0] p_Result_996_fu_3049_p3;
wire   [0:0] p_Result_997_fu_3063_p3;
wire   [0:0] xor_ln941_553_fu_3071_p2;
wire   [0:0] overflow_372_fu_3077_p2;
wire   [0:0] xor_ln348_59_fu_3083_p2;
wire   [31:0] select_ln392_535_fu_3089_p3;
wire  signed [31:0] sext_ln859_108_fu_3105_p0;
wire  signed [30:0] rhs_149_fu_3109_p3;
wire  signed [32:0] sext_ln1393_261_fu_3116_p1;
wire  signed [32:0] sext_ln859_108_fu_3105_p1;
wire   [32:0] ret_V_233_fu_3124_p2;
wire  signed [31:0] sext_ln1393_262_fu_3120_p1;
wire  signed [31:0] p_Val2_1044_fu_3138_p1;
wire   [31:0] p_Val2_1044_fu_3138_p2;
wire   [0:0] p_Result_998_fu_3130_p3;
wire   [0:0] p_Result_999_fu_3144_p3;
wire   [0:0] xor_ln941_554_fu_3152_p2;
wire   [0:0] overflow_373_fu_3158_p2;
wire   [0:0] xor_ln348_60_fu_3164_p2;
wire   [31:0] select_ln392_536_fu_3170_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

FracNet_T_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U2473(
    .din0(inputs_0_0_q0),
    .din1(inputs_1_0_q0),
    .din2(inputs_2_0_q0),
    .din3(inputs_3_0_q0),
    .din4(tile),
    .dout(rhs_fu_1634_p6)
);

FracNet_T_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U2474(
    .din0(inputs_0_1_q0),
    .din1(inputs_1_1_q0),
    .din2(inputs_2_1_q0),
    .din3(inputs_3_1_q0),
    .din4(tile),
    .dout(rhs_120_fu_1647_p6)
);

FracNet_T_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U2475(
    .din0(inputs_0_2_q0),
    .din1(inputs_1_2_q0),
    .din2(inputs_2_2_q0),
    .din3(inputs_3_2_q0),
    .din4(tile),
    .dout(rhs_122_fu_1660_p6)
);

FracNet_T_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U2476(
    .din0(inputs_0_3_q0),
    .din1(inputs_1_3_q0),
    .din2(inputs_2_3_q0),
    .din3(inputs_3_3_q0),
    .din4(tile),
    .dout(rhs_124_fu_1673_p6)
);

FracNet_T_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U2477(
    .din0(inputs_0_4_q0),
    .din1(inputs_1_4_q0),
    .din2(inputs_2_4_q0),
    .din3(inputs_3_4_q0),
    .din4(tile),
    .dout(rhs_126_fu_1686_p6)
);

FracNet_T_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U2478(
    .din0(inputs_0_5_q0),
    .din1(inputs_1_5_q0),
    .din2(inputs_2_5_q0),
    .din3(inputs_3_5_q0),
    .din4(tile),
    .dout(rhs_128_fu_1699_p6)
);

FracNet_T_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U2479(
    .din0(inputs_0_6_q0),
    .din1(inputs_1_6_q0),
    .din2(inputs_2_6_q0),
    .din3(inputs_3_6_q0),
    .din4(tile),
    .dout(rhs_130_fu_1712_p6)
);

FracNet_T_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U2480(
    .din0(inputs_0_7_q0),
    .din1(inputs_1_7_q0),
    .din2(inputs_2_7_q0),
    .din3(inputs_3_7_q0),
    .din4(tile),
    .dout(rhs_132_fu_1725_p6)
);

FracNet_T_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U2481(
    .din0(inputs_0_8_q0),
    .din1(inputs_1_8_q0),
    .din2(inputs_2_8_q0),
    .din3(inputs_3_8_q0),
    .din4(tile),
    .dout(rhs_134_fu_1738_p6)
);

FracNet_T_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U2482(
    .din0(inputs_0_9_q0),
    .din1(inputs_1_9_q0),
    .din2(inputs_2_9_q0),
    .din3(inputs_3_9_q0),
    .din4(tile),
    .dout(rhs_136_fu_1751_p6)
);

FracNet_T_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U2483(
    .din0(inputs_0_10_q0),
    .din1(inputs_1_10_q0),
    .din2(inputs_2_10_q0),
    .din3(inputs_3_10_q0),
    .din4(tile),
    .dout(rhs_138_fu_1764_p6)
);

FracNet_T_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U2484(
    .din0(inputs_0_11_q0),
    .din1(inputs_1_11_q0),
    .din2(inputs_2_11_q0),
    .din3(inputs_3_11_q0),
    .din4(tile),
    .dout(rhs_140_fu_1777_p6)
);

FracNet_T_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U2485(
    .din0(inputs_0_12_q0),
    .din1(inputs_1_12_q0),
    .din2(inputs_2_12_q0),
    .din3(inputs_3_12_q0),
    .din4(tile),
    .dout(rhs_142_fu_1790_p6)
);

FracNet_T_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U2486(
    .din0(inputs_0_13_q0),
    .din1(inputs_1_13_q0),
    .din2(inputs_2_13_q0),
    .din3(inputs_3_13_q0),
    .din4(tile),
    .dout(rhs_144_fu_1803_p6)
);

FracNet_T_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U2487(
    .din0(inputs_0_14_q0),
    .din1(inputs_1_14_q0),
    .din2(inputs_2_14_q0),
    .din3(inputs_3_14_q0),
    .din4(tile),
    .dout(rhs_146_fu_1816_p6)
);

FracNet_T_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U2488(
    .din0(inputs_0_15_q0),
    .din1(inputs_1_15_q0),
    .din2(inputs_2_15_q0),
    .din3(inputs_3_15_q0),
    .din4(tile),
    .dout(rhs_148_fu_1829_p6)
);

FracNet_T_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln237_fu_1478_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_326 <= select_ln237_1_fu_1516_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_326 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln237_fu_1478_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_330 <= add_ln237_1_fu_1484_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_330 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln237_fu_1478_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_322 <= add_ln238_fu_1524_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_322 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_206_fu_262 <= tmp_V_17_reload;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            lhs_206_fu_262 <= select_ln348_49_fu_2044_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_207_fu_266 <= tmp_V_18_reload;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            lhs_207_fu_266 <= select_ln348_50_fu_2125_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_208_fu_270 <= tmp_V_19_reload;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            lhs_208_fu_270 <= select_ln348_51_fu_2206_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_209_fu_274 <= tmp_V_20_reload;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            lhs_209_fu_274 <= select_ln348_52_fu_2287_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_210_fu_278 <= tmp_V_21_reload;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            lhs_210_fu_278 <= select_ln348_53_fu_2368_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_211_fu_282 <= tmp_V_22_reload;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            lhs_211_fu_282 <= select_ln348_54_fu_2449_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_212_fu_286 <= tmp_V_23_reload;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            lhs_212_fu_286 <= select_ln348_55_fu_2530_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_213_fu_290 <= tmp_V_24_reload;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            lhs_213_fu_290 <= select_ln348_56_fu_2611_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_214_fu_294 <= tmp_V_25_reload;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            lhs_214_fu_294 <= select_ln348_57_fu_2692_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_215_fu_298 <= tmp_V_26_reload;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            lhs_215_fu_298 <= select_ln348_58_fu_2773_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_216_fu_302 <= tmp_V_27_reload;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            lhs_216_fu_302 <= select_ln348_59_fu_2854_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_217_fu_306 <= tmp_V_28_reload;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            lhs_217_fu_306 <= select_ln348_60_fu_2935_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_218_fu_310 <= tmp_V_29_reload;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            lhs_218_fu_310 <= select_ln348_61_fu_3016_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_219_fu_314 <= tmp_V_30_reload;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            lhs_219_fu_314 <= select_ln348_62_fu_3097_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_220_fu_318 <= tmp_V_31_reload;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            lhs_220_fu_318 <= select_ln348_63_fu_3178_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_fu_258 <= tmp_V_16_reload;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            lhs_fu_258 <= select_ln348_fu_1963_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln237_reg_3499 <= icmp_ln237_fu_1478_p2;
        icmp_ln237_reg_3499_pp0_iter1_reg <= icmp_ln237_reg_3499;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        rhs_120_reg_3839 <= rhs_120_fu_1647_p6;
        rhs_122_reg_3844 <= rhs_122_fu_1660_p6;
        rhs_124_reg_3849 <= rhs_124_fu_1673_p6;
        rhs_126_reg_3854 <= rhs_126_fu_1686_p6;
        rhs_128_reg_3859 <= rhs_128_fu_1699_p6;
        rhs_130_reg_3864 <= rhs_130_fu_1712_p6;
        rhs_132_reg_3869 <= rhs_132_fu_1725_p6;
        rhs_134_reg_3874 <= rhs_134_fu_1738_p6;
        rhs_136_reg_3879 <= rhs_136_fu_1751_p6;
        rhs_138_reg_3884 <= rhs_138_fu_1764_p6;
        rhs_140_reg_3889 <= rhs_140_fu_1777_p6;
        rhs_142_reg_3894 <= rhs_142_fu_1790_p6;
        rhs_144_reg_3899 <= rhs_144_fu_1803_p6;
        rhs_146_reg_3904 <= rhs_146_fu_1816_p6;
        rhs_148_reg_3909 <= rhs_148_fu_1829_p6;
        rhs_reg_3834 <= rhs_fu_1634_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_fu_1478_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln237_1_reg_3508 <= select_ln237_1_fu_1516_p3;
        select_ln237_reg_3503 <= select_ln237_fu_1508_p3;
    end
end

always @ (*) begin
    if (((icmp_ln237_fu_1478_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 4'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_326;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_330;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_322;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_0_0_ce0 = 1'b1;
    end else begin
        inputs_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_0_10_ce0 = 1'b1;
    end else begin
        inputs_0_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_0_11_ce0 = 1'b1;
    end else begin
        inputs_0_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_0_12_ce0 = 1'b1;
    end else begin
        inputs_0_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_0_13_ce0 = 1'b1;
    end else begin
        inputs_0_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_0_14_ce0 = 1'b1;
    end else begin
        inputs_0_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_0_15_ce0 = 1'b1;
    end else begin
        inputs_0_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_0_1_ce0 = 1'b1;
    end else begin
        inputs_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_0_2_ce0 = 1'b1;
    end else begin
        inputs_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_0_3_ce0 = 1'b1;
    end else begin
        inputs_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_0_4_ce0 = 1'b1;
    end else begin
        inputs_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_0_5_ce0 = 1'b1;
    end else begin
        inputs_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_0_6_ce0 = 1'b1;
    end else begin
        inputs_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_0_7_ce0 = 1'b1;
    end else begin
        inputs_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_0_8_ce0 = 1'b1;
    end else begin
        inputs_0_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_0_9_ce0 = 1'b1;
    end else begin
        inputs_0_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_1_0_ce0 = 1'b1;
    end else begin
        inputs_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_1_10_ce0 = 1'b1;
    end else begin
        inputs_1_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_1_11_ce0 = 1'b1;
    end else begin
        inputs_1_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_1_12_ce0 = 1'b1;
    end else begin
        inputs_1_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_1_13_ce0 = 1'b1;
    end else begin
        inputs_1_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_1_14_ce0 = 1'b1;
    end else begin
        inputs_1_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_1_15_ce0 = 1'b1;
    end else begin
        inputs_1_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_1_1_ce0 = 1'b1;
    end else begin
        inputs_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_1_2_ce0 = 1'b1;
    end else begin
        inputs_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_1_3_ce0 = 1'b1;
    end else begin
        inputs_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_1_4_ce0 = 1'b1;
    end else begin
        inputs_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_1_5_ce0 = 1'b1;
    end else begin
        inputs_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_1_6_ce0 = 1'b1;
    end else begin
        inputs_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_1_7_ce0 = 1'b1;
    end else begin
        inputs_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_1_8_ce0 = 1'b1;
    end else begin
        inputs_1_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_1_9_ce0 = 1'b1;
    end else begin
        inputs_1_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_2_0_ce0 = 1'b1;
    end else begin
        inputs_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_2_10_ce0 = 1'b1;
    end else begin
        inputs_2_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_2_11_ce0 = 1'b1;
    end else begin
        inputs_2_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_2_12_ce0 = 1'b1;
    end else begin
        inputs_2_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_2_13_ce0 = 1'b1;
    end else begin
        inputs_2_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_2_14_ce0 = 1'b1;
    end else begin
        inputs_2_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_2_15_ce0 = 1'b1;
    end else begin
        inputs_2_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_2_1_ce0 = 1'b1;
    end else begin
        inputs_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_2_2_ce0 = 1'b1;
    end else begin
        inputs_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_2_3_ce0 = 1'b1;
    end else begin
        inputs_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_2_4_ce0 = 1'b1;
    end else begin
        inputs_2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_2_5_ce0 = 1'b1;
    end else begin
        inputs_2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_2_6_ce0 = 1'b1;
    end else begin
        inputs_2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_2_7_ce0 = 1'b1;
    end else begin
        inputs_2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_2_8_ce0 = 1'b1;
    end else begin
        inputs_2_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_2_9_ce0 = 1'b1;
    end else begin
        inputs_2_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_3_0_ce0 = 1'b1;
    end else begin
        inputs_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_3_10_ce0 = 1'b1;
    end else begin
        inputs_3_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_3_11_ce0 = 1'b1;
    end else begin
        inputs_3_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_3_12_ce0 = 1'b1;
    end else begin
        inputs_3_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_3_13_ce0 = 1'b1;
    end else begin
        inputs_3_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_3_14_ce0 = 1'b1;
    end else begin
        inputs_3_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_3_15_ce0 = 1'b1;
    end else begin
        inputs_3_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_3_1_ce0 = 1'b1;
    end else begin
        inputs_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_3_2_ce0 = 1'b1;
    end else begin
        inputs_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_3_3_ce0 = 1'b1;
    end else begin
        inputs_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_3_4_ce0 = 1'b1;
    end else begin
        inputs_3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_3_5_ce0 = 1'b1;
    end else begin
        inputs_3_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_3_6_ce0 = 1'b1;
    end else begin
        inputs_3_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_3_7_ce0 = 1'b1;
    end else begin
        inputs_3_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_3_8_ce0 = 1'b1;
    end else begin
        inputs_3_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_3_9_ce0 = 1'b1;
    end else begin
        inputs_3_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_reg_3499_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_206_out_ap_vld = 1'b1;
    end else begin
        lhs_206_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_reg_3499_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_207_out_ap_vld = 1'b1;
    end else begin
        lhs_207_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_reg_3499_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_208_out_ap_vld = 1'b1;
    end else begin
        lhs_208_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_reg_3499_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_209_out_ap_vld = 1'b1;
    end else begin
        lhs_209_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_reg_3499_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_210_out_ap_vld = 1'b1;
    end else begin
        lhs_210_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_reg_3499_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_211_out_ap_vld = 1'b1;
    end else begin
        lhs_211_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_reg_3499_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_212_out_ap_vld = 1'b1;
    end else begin
        lhs_212_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_reg_3499_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_213_out_ap_vld = 1'b1;
    end else begin
        lhs_213_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_reg_3499_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_214_out_ap_vld = 1'b1;
    end else begin
        lhs_214_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_reg_3499_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_215_out_ap_vld = 1'b1;
    end else begin
        lhs_215_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_reg_3499_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_216_out_ap_vld = 1'b1;
    end else begin
        lhs_216_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_reg_3499_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_217_out_ap_vld = 1'b1;
    end else begin
        lhs_217_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_reg_3499_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_218_out_ap_vld = 1'b1;
    end else begin
        lhs_218_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_reg_3499_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_219_out_ap_vld = 1'b1;
    end else begin
        lhs_219_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_reg_3499_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_220_out_ap_vld = 1'b1;
    end else begin
        lhs_220_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_reg_3499_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_out_ap_vld = 1'b1;
    end else begin
        lhs_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln237_1_fu_1484_p2 = (ap_sig_allocacmp_indvar_flatten_load + 7'd1);

assign add_ln237_fu_1496_p2 = (ap_sig_allocacmp_i_load + 4'd1);

assign add_ln238_fu_1524_p2 = (select_ln237_fu_1508_p3 + 4'd1);

assign add_ln883_fu_1560_p2 = (zext_ln238_fu_1553_p1 + zext_ln883_fu_1557_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln237_fu_1478_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln238_fu_1502_p2 = ((ap_sig_allocacmp_j_load == 4'd8) ? 1'b1 : 1'b0);

assign inputs_0_0_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_0_10_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_0_11_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_0_12_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_0_13_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_0_14_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_0_15_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_0_1_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_0_2_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_0_3_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_0_4_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_0_5_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_0_6_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_0_7_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_0_8_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_0_9_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_1_0_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_1_10_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_1_11_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_1_12_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_1_13_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_1_14_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_1_15_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_1_1_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_1_2_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_1_3_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_1_4_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_1_5_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_1_6_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_1_7_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_1_8_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_1_9_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_2_0_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_2_10_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_2_11_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_2_12_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_2_13_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_2_14_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_2_15_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_2_1_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_2_2_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_2_3_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_2_4_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_2_5_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_2_6_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_2_7_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_2_8_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_2_9_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_3_0_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_3_10_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_3_11_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_3_12_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_3_13_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_3_14_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_3_15_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_3_1_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_3_2_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_3_3_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_3_4_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_3_5_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_3_6_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_3_7_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_3_8_address0 = zext_ln883_1_fu_1566_p1;

assign inputs_3_9_address0 = zext_ln883_1_fu_1566_p1;

assign lhs_206_out = lhs_206_fu_262;

assign lhs_207_out = lhs_207_fu_266;

assign lhs_208_out = lhs_208_fu_270;

assign lhs_209_out = lhs_209_fu_274;

assign lhs_210_out = lhs_210_fu_278;

assign lhs_211_out = lhs_211_fu_282;

assign lhs_212_out = lhs_212_fu_286;

assign lhs_213_out = lhs_213_fu_290;

assign lhs_214_out = lhs_214_fu_294;

assign lhs_215_out = lhs_215_fu_298;

assign lhs_216_out = lhs_216_fu_302;

assign lhs_217_out = lhs_217_fu_306;

assign lhs_218_out = lhs_218_fu_310;

assign lhs_219_out = lhs_219_fu_314;

assign lhs_220_out = lhs_220_fu_318;

assign lhs_out = lhs_fu_258;

assign or_ln_fu_1545_p4 = {{{select_ln237_1_reg_3508}, {1'd0}}, {select_ln237_1_reg_3508}};

assign overflow_359_fu_2024_p2 = (xor_ln941_540_fu_2018_p2 & p_Result_971_fu_2010_p3);

assign overflow_360_fu_2105_p2 = (xor_ln941_541_fu_2099_p2 & p_Result_973_fu_2091_p3);

assign overflow_361_fu_2186_p2 = (xor_ln941_542_fu_2180_p2 & p_Result_975_fu_2172_p3);

assign overflow_362_fu_2267_p2 = (xor_ln941_543_fu_2261_p2 & p_Result_977_fu_2253_p3);

assign overflow_363_fu_2348_p2 = (xor_ln941_544_fu_2342_p2 & p_Result_979_fu_2334_p3);

assign overflow_364_fu_2429_p2 = (xor_ln941_545_fu_2423_p2 & p_Result_981_fu_2415_p3);

assign overflow_365_fu_2510_p2 = (xor_ln941_546_fu_2504_p2 & p_Result_983_fu_2496_p3);

assign overflow_366_fu_2591_p2 = (xor_ln941_547_fu_2585_p2 & p_Result_985_fu_2577_p3);

assign overflow_367_fu_2672_p2 = (xor_ln941_548_fu_2666_p2 & p_Result_987_fu_2658_p3);

assign overflow_368_fu_2753_p2 = (xor_ln941_549_fu_2747_p2 & p_Result_989_fu_2739_p3);

assign overflow_369_fu_2834_p2 = (xor_ln941_550_fu_2828_p2 & p_Result_991_fu_2820_p3);

assign overflow_370_fu_2915_p2 = (xor_ln941_551_fu_2909_p2 & p_Result_993_fu_2901_p3);

assign overflow_371_fu_2996_p2 = (xor_ln941_552_fu_2990_p2 & p_Result_995_fu_2982_p3);

assign overflow_372_fu_3077_p2 = (xor_ln941_553_fu_3071_p2 & p_Result_997_fu_3063_p3);

assign overflow_373_fu_3158_p2 = (xor_ln941_554_fu_3152_p2 & p_Result_999_fu_3144_p3);

assign overflow_fu_1943_p2 = (xor_ln941_fu_1937_p2 & p_Result_969_fu_1929_p3);

assign p_Result_969_fu_1929_p3 = p_Val2_1014_fu_1923_p2[32'd31];

assign p_Result_970_fu_1996_p3 = ret_V_219_fu_1990_p2[32'd32];

assign p_Result_971_fu_2010_p3 = p_Val2_1016_fu_2004_p2[32'd31];

assign p_Result_972_fu_2077_p3 = ret_V_220_fu_2071_p2[32'd32];

assign p_Result_973_fu_2091_p3 = p_Val2_1018_fu_2085_p2[32'd31];

assign p_Result_974_fu_2158_p3 = ret_V_221_fu_2152_p2[32'd32];

assign p_Result_975_fu_2172_p3 = p_Val2_1020_fu_2166_p2[32'd31];

assign p_Result_976_fu_2239_p3 = ret_V_222_fu_2233_p2[32'd32];

assign p_Result_977_fu_2253_p3 = p_Val2_1022_fu_2247_p2[32'd31];

assign p_Result_978_fu_2320_p3 = ret_V_223_fu_2314_p2[32'd32];

assign p_Result_979_fu_2334_p3 = p_Val2_1024_fu_2328_p2[32'd31];

assign p_Result_980_fu_2401_p3 = ret_V_224_fu_2395_p2[32'd32];

assign p_Result_981_fu_2415_p3 = p_Val2_1026_fu_2409_p2[32'd31];

assign p_Result_982_fu_2482_p3 = ret_V_225_fu_2476_p2[32'd32];

assign p_Result_983_fu_2496_p3 = p_Val2_1028_fu_2490_p2[32'd31];

assign p_Result_984_fu_2563_p3 = ret_V_226_fu_2557_p2[32'd32];

assign p_Result_985_fu_2577_p3 = p_Val2_1030_fu_2571_p2[32'd31];

assign p_Result_986_fu_2644_p3 = ret_V_227_fu_2638_p2[32'd32];

assign p_Result_987_fu_2658_p3 = p_Val2_1032_fu_2652_p2[32'd31];

assign p_Result_988_fu_2725_p3 = ret_V_228_fu_2719_p2[32'd32];

assign p_Result_989_fu_2739_p3 = p_Val2_1034_fu_2733_p2[32'd31];

assign p_Result_990_fu_2806_p3 = ret_V_229_fu_2800_p2[32'd32];

assign p_Result_991_fu_2820_p3 = p_Val2_1036_fu_2814_p2[32'd31];

assign p_Result_992_fu_2887_p3 = ret_V_230_fu_2881_p2[32'd32];

assign p_Result_993_fu_2901_p3 = p_Val2_1038_fu_2895_p2[32'd31];

assign p_Result_994_fu_2968_p3 = ret_V_231_fu_2962_p2[32'd32];

assign p_Result_995_fu_2982_p3 = p_Val2_1040_fu_2976_p2[32'd31];

assign p_Result_996_fu_3049_p3 = ret_V_232_fu_3043_p2[32'd32];

assign p_Result_997_fu_3063_p3 = p_Val2_1042_fu_3057_p2[32'd31];

assign p_Result_998_fu_3130_p3 = ret_V_233_fu_3124_p2[32'd32];

assign p_Result_999_fu_3144_p3 = p_Val2_1044_fu_3138_p2[32'd31];

assign p_Result_s_fu_1915_p3 = ret_V_fu_1909_p2[32'd32];

assign p_Val2_1014_fu_1923_p1 = lhs_fu_258;

assign p_Val2_1014_fu_1923_p2 = ($signed(sext_ln1393_232_fu_1905_p1) + $signed(p_Val2_1014_fu_1923_p1));

assign p_Val2_1016_fu_2004_p1 = lhs_206_fu_262;

assign p_Val2_1016_fu_2004_p2 = ($signed(sext_ln1393_234_fu_1986_p1) + $signed(p_Val2_1016_fu_2004_p1));

assign p_Val2_1018_fu_2085_p1 = lhs_207_fu_266;

assign p_Val2_1018_fu_2085_p2 = ($signed(sext_ln1393_236_fu_2067_p1) + $signed(p_Val2_1018_fu_2085_p1));

assign p_Val2_1020_fu_2166_p1 = lhs_208_fu_270;

assign p_Val2_1020_fu_2166_p2 = ($signed(sext_ln1393_238_fu_2148_p1) + $signed(p_Val2_1020_fu_2166_p1));

assign p_Val2_1022_fu_2247_p1 = lhs_209_fu_274;

assign p_Val2_1022_fu_2247_p2 = ($signed(sext_ln1393_240_fu_2229_p1) + $signed(p_Val2_1022_fu_2247_p1));

assign p_Val2_1024_fu_2328_p1 = lhs_210_fu_278;

assign p_Val2_1024_fu_2328_p2 = ($signed(sext_ln1393_242_fu_2310_p1) + $signed(p_Val2_1024_fu_2328_p1));

assign p_Val2_1026_fu_2409_p1 = lhs_211_fu_282;

assign p_Val2_1026_fu_2409_p2 = ($signed(sext_ln1393_244_fu_2391_p1) + $signed(p_Val2_1026_fu_2409_p1));

assign p_Val2_1028_fu_2490_p1 = lhs_212_fu_286;

assign p_Val2_1028_fu_2490_p2 = ($signed(sext_ln1393_246_fu_2472_p1) + $signed(p_Val2_1028_fu_2490_p1));

assign p_Val2_1030_fu_2571_p1 = lhs_213_fu_290;

assign p_Val2_1030_fu_2571_p2 = ($signed(sext_ln1393_248_fu_2553_p1) + $signed(p_Val2_1030_fu_2571_p1));

assign p_Val2_1032_fu_2652_p1 = lhs_214_fu_294;

assign p_Val2_1032_fu_2652_p2 = ($signed(sext_ln1393_250_fu_2634_p1) + $signed(p_Val2_1032_fu_2652_p1));

assign p_Val2_1034_fu_2733_p1 = lhs_215_fu_298;

assign p_Val2_1034_fu_2733_p2 = ($signed(sext_ln1393_252_fu_2715_p1) + $signed(p_Val2_1034_fu_2733_p1));

assign p_Val2_1036_fu_2814_p1 = lhs_216_fu_302;

assign p_Val2_1036_fu_2814_p2 = ($signed(sext_ln1393_254_fu_2796_p1) + $signed(p_Val2_1036_fu_2814_p1));

assign p_Val2_1038_fu_2895_p1 = lhs_217_fu_306;

assign p_Val2_1038_fu_2895_p2 = ($signed(sext_ln1393_256_fu_2877_p1) + $signed(p_Val2_1038_fu_2895_p1));

assign p_Val2_1040_fu_2976_p1 = lhs_218_fu_310;

assign p_Val2_1040_fu_2976_p2 = ($signed(sext_ln1393_258_fu_2958_p1) + $signed(p_Val2_1040_fu_2976_p1));

assign p_Val2_1042_fu_3057_p1 = lhs_219_fu_314;

assign p_Val2_1042_fu_3057_p2 = ($signed(sext_ln1393_260_fu_3039_p1) + $signed(p_Val2_1042_fu_3057_p1));

assign p_Val2_1044_fu_3138_p1 = lhs_220_fu_318;

assign p_Val2_1044_fu_3138_p2 = ($signed(sext_ln1393_262_fu_3120_p1) + $signed(p_Val2_1044_fu_3138_p1));

assign ret_V_219_fu_1990_p2 = ($signed(sext_ln1393_233_fu_1982_p1) + $signed(sext_ln859_94_fu_1971_p1));

assign ret_V_220_fu_2071_p2 = ($signed(sext_ln1393_235_fu_2063_p1) + $signed(sext_ln859_95_fu_2052_p1));

assign ret_V_221_fu_2152_p2 = ($signed(sext_ln1393_237_fu_2144_p1) + $signed(sext_ln859_96_fu_2133_p1));

assign ret_V_222_fu_2233_p2 = ($signed(sext_ln1393_239_fu_2225_p1) + $signed(sext_ln859_97_fu_2214_p1));

assign ret_V_223_fu_2314_p2 = ($signed(sext_ln1393_241_fu_2306_p1) + $signed(sext_ln859_98_fu_2295_p1));

assign ret_V_224_fu_2395_p2 = ($signed(sext_ln1393_243_fu_2387_p1) + $signed(sext_ln859_99_fu_2376_p1));

assign ret_V_225_fu_2476_p2 = ($signed(sext_ln1393_245_fu_2468_p1) + $signed(sext_ln859_100_fu_2457_p1));

assign ret_V_226_fu_2557_p2 = ($signed(sext_ln1393_247_fu_2549_p1) + $signed(sext_ln859_101_fu_2538_p1));

assign ret_V_227_fu_2638_p2 = ($signed(sext_ln1393_249_fu_2630_p1) + $signed(sext_ln859_102_fu_2619_p1));

assign ret_V_228_fu_2719_p2 = ($signed(sext_ln1393_251_fu_2711_p1) + $signed(sext_ln859_103_fu_2700_p1));

assign ret_V_229_fu_2800_p2 = ($signed(sext_ln1393_253_fu_2792_p1) + $signed(sext_ln859_104_fu_2781_p1));

assign ret_V_230_fu_2881_p2 = ($signed(sext_ln1393_255_fu_2873_p1) + $signed(sext_ln859_105_fu_2862_p1));

assign ret_V_231_fu_2962_p2 = ($signed(sext_ln1393_257_fu_2954_p1) + $signed(sext_ln859_106_fu_2943_p1));

assign ret_V_232_fu_3043_p2 = ($signed(sext_ln1393_259_fu_3035_p1) + $signed(sext_ln859_107_fu_3024_p1));

assign ret_V_233_fu_3124_p2 = ($signed(sext_ln1393_261_fu_3116_p1) + $signed(sext_ln859_108_fu_3105_p1));

assign ret_V_fu_1909_p2 = ($signed(sext_ln1393_fu_1901_p1) + $signed(sext_ln859_fu_1890_p1));

assign rhs_119_fu_1894_p3 = {{rhs_reg_3834}, {15'd0}};

assign rhs_121_fu_1975_p3 = {{rhs_120_reg_3839}, {15'd0}};

assign rhs_123_fu_2056_p3 = {{rhs_122_reg_3844}, {15'd0}};

assign rhs_125_fu_2137_p3 = {{rhs_124_reg_3849}, {15'd0}};

assign rhs_127_fu_2218_p3 = {{rhs_126_reg_3854}, {15'd0}};

assign rhs_129_fu_2299_p3 = {{rhs_128_reg_3859}, {15'd0}};

assign rhs_131_fu_2380_p3 = {{rhs_130_reg_3864}, {15'd0}};

assign rhs_133_fu_2461_p3 = {{rhs_132_reg_3869}, {15'd0}};

assign rhs_135_fu_2542_p3 = {{rhs_134_reg_3874}, {15'd0}};

assign rhs_137_fu_2623_p3 = {{rhs_136_reg_3879}, {15'd0}};

assign rhs_139_fu_2704_p3 = {{rhs_138_reg_3884}, {15'd0}};

assign rhs_141_fu_2785_p3 = {{rhs_140_reg_3889}, {15'd0}};

assign rhs_143_fu_2866_p3 = {{rhs_142_reg_3894}, {15'd0}};

assign rhs_145_fu_2947_p3 = {{rhs_144_reg_3899}, {15'd0}};

assign rhs_147_fu_3028_p3 = {{rhs_146_reg_3904}, {15'd0}};

assign rhs_149_fu_3109_p3 = {{rhs_148_reg_3909}, {15'd0}};

assign select_ln237_1_fu_1516_p3 = ((icmp_ln238_fu_1502_p2[0:0] == 1'b1) ? add_ln237_fu_1496_p2 : ap_sig_allocacmp_i_load);

assign select_ln237_fu_1508_p3 = ((icmp_ln238_fu_1502_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j_load);

assign select_ln348_49_fu_2044_p3 = ((xor_ln348_46_fu_2030_p2[0:0] == 1'b1) ? select_ln392_522_fu_2036_p3 : p_Val2_1016_fu_2004_p2);

assign select_ln348_50_fu_2125_p3 = ((xor_ln348_47_fu_2111_p2[0:0] == 1'b1) ? select_ln392_523_fu_2117_p3 : p_Val2_1018_fu_2085_p2);

assign select_ln348_51_fu_2206_p3 = ((xor_ln348_48_fu_2192_p2[0:0] == 1'b1) ? select_ln392_524_fu_2198_p3 : p_Val2_1020_fu_2166_p2);

assign select_ln348_52_fu_2287_p3 = ((xor_ln348_49_fu_2273_p2[0:0] == 1'b1) ? select_ln392_525_fu_2279_p3 : p_Val2_1022_fu_2247_p2);

assign select_ln348_53_fu_2368_p3 = ((xor_ln348_50_fu_2354_p2[0:0] == 1'b1) ? select_ln392_526_fu_2360_p3 : p_Val2_1024_fu_2328_p2);

assign select_ln348_54_fu_2449_p3 = ((xor_ln348_51_fu_2435_p2[0:0] == 1'b1) ? select_ln392_527_fu_2441_p3 : p_Val2_1026_fu_2409_p2);

assign select_ln348_55_fu_2530_p3 = ((xor_ln348_52_fu_2516_p2[0:0] == 1'b1) ? select_ln392_528_fu_2522_p3 : p_Val2_1028_fu_2490_p2);

assign select_ln348_56_fu_2611_p3 = ((xor_ln348_53_fu_2597_p2[0:0] == 1'b1) ? select_ln392_529_fu_2603_p3 : p_Val2_1030_fu_2571_p2);

assign select_ln348_57_fu_2692_p3 = ((xor_ln348_54_fu_2678_p2[0:0] == 1'b1) ? select_ln392_530_fu_2684_p3 : p_Val2_1032_fu_2652_p2);

assign select_ln348_58_fu_2773_p3 = ((xor_ln348_55_fu_2759_p2[0:0] == 1'b1) ? select_ln392_531_fu_2765_p3 : p_Val2_1034_fu_2733_p2);

assign select_ln348_59_fu_2854_p3 = ((xor_ln348_56_fu_2840_p2[0:0] == 1'b1) ? select_ln392_532_fu_2846_p3 : p_Val2_1036_fu_2814_p2);

assign select_ln348_60_fu_2935_p3 = ((xor_ln348_57_fu_2921_p2[0:0] == 1'b1) ? select_ln392_533_fu_2927_p3 : p_Val2_1038_fu_2895_p2);

assign select_ln348_61_fu_3016_p3 = ((xor_ln348_58_fu_3002_p2[0:0] == 1'b1) ? select_ln392_534_fu_3008_p3 : p_Val2_1040_fu_2976_p2);

assign select_ln348_62_fu_3097_p3 = ((xor_ln348_59_fu_3083_p2[0:0] == 1'b1) ? select_ln392_535_fu_3089_p3 : p_Val2_1042_fu_3057_p2);

assign select_ln348_63_fu_3178_p3 = ((xor_ln348_60_fu_3164_p2[0:0] == 1'b1) ? select_ln392_536_fu_3170_p3 : p_Val2_1044_fu_3138_p2);

assign select_ln348_fu_1963_p3 = ((xor_ln348_fu_1949_p2[0:0] == 1'b1) ? select_ln392_521_fu_1955_p3 : p_Val2_1014_fu_1923_p2);

assign select_ln392_521_fu_1955_p3 = ((overflow_fu_1943_p2[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln392_522_fu_2036_p3 = ((overflow_359_fu_2024_p2[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln392_523_fu_2117_p3 = ((overflow_360_fu_2105_p2[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln392_524_fu_2198_p3 = ((overflow_361_fu_2186_p2[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln392_525_fu_2279_p3 = ((overflow_362_fu_2267_p2[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln392_526_fu_2360_p3 = ((overflow_363_fu_2348_p2[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln392_527_fu_2441_p3 = ((overflow_364_fu_2429_p2[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln392_528_fu_2522_p3 = ((overflow_365_fu_2510_p2[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln392_529_fu_2603_p3 = ((overflow_366_fu_2591_p2[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln392_530_fu_2684_p3 = ((overflow_367_fu_2672_p2[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln392_531_fu_2765_p3 = ((overflow_368_fu_2753_p2[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln392_532_fu_2846_p3 = ((overflow_369_fu_2834_p2[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln392_533_fu_2927_p3 = ((overflow_370_fu_2915_p2[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln392_534_fu_3008_p3 = ((overflow_371_fu_2996_p2[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln392_535_fu_3089_p3 = ((overflow_372_fu_3077_p2[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln392_536_fu_3170_p3 = ((overflow_373_fu_3158_p2[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign sext_ln1393_232_fu_1905_p1 = rhs_119_fu_1894_p3;

assign sext_ln1393_233_fu_1982_p1 = rhs_121_fu_1975_p3;

assign sext_ln1393_234_fu_1986_p1 = rhs_121_fu_1975_p3;

assign sext_ln1393_235_fu_2063_p1 = rhs_123_fu_2056_p3;

assign sext_ln1393_236_fu_2067_p1 = rhs_123_fu_2056_p3;

assign sext_ln1393_237_fu_2144_p1 = rhs_125_fu_2137_p3;

assign sext_ln1393_238_fu_2148_p1 = rhs_125_fu_2137_p3;

assign sext_ln1393_239_fu_2225_p1 = rhs_127_fu_2218_p3;

assign sext_ln1393_240_fu_2229_p1 = rhs_127_fu_2218_p3;

assign sext_ln1393_241_fu_2306_p1 = rhs_129_fu_2299_p3;

assign sext_ln1393_242_fu_2310_p1 = rhs_129_fu_2299_p3;

assign sext_ln1393_243_fu_2387_p1 = rhs_131_fu_2380_p3;

assign sext_ln1393_244_fu_2391_p1 = rhs_131_fu_2380_p3;

assign sext_ln1393_245_fu_2468_p1 = rhs_133_fu_2461_p3;

assign sext_ln1393_246_fu_2472_p1 = rhs_133_fu_2461_p3;

assign sext_ln1393_247_fu_2549_p1 = rhs_135_fu_2542_p3;

assign sext_ln1393_248_fu_2553_p1 = rhs_135_fu_2542_p3;

assign sext_ln1393_249_fu_2630_p1 = rhs_137_fu_2623_p3;

assign sext_ln1393_250_fu_2634_p1 = rhs_137_fu_2623_p3;

assign sext_ln1393_251_fu_2711_p1 = rhs_139_fu_2704_p3;

assign sext_ln1393_252_fu_2715_p1 = rhs_139_fu_2704_p3;

assign sext_ln1393_253_fu_2792_p1 = rhs_141_fu_2785_p3;

assign sext_ln1393_254_fu_2796_p1 = rhs_141_fu_2785_p3;

assign sext_ln1393_255_fu_2873_p1 = rhs_143_fu_2866_p3;

assign sext_ln1393_256_fu_2877_p1 = rhs_143_fu_2866_p3;

assign sext_ln1393_257_fu_2954_p1 = rhs_145_fu_2947_p3;

assign sext_ln1393_258_fu_2958_p1 = rhs_145_fu_2947_p3;

assign sext_ln1393_259_fu_3035_p1 = rhs_147_fu_3028_p3;

assign sext_ln1393_260_fu_3039_p1 = rhs_147_fu_3028_p3;

assign sext_ln1393_261_fu_3116_p1 = rhs_149_fu_3109_p3;

assign sext_ln1393_262_fu_3120_p1 = rhs_149_fu_3109_p3;

assign sext_ln1393_fu_1901_p1 = rhs_119_fu_1894_p3;

assign sext_ln859_100_fu_2457_p0 = lhs_212_fu_286;

assign sext_ln859_100_fu_2457_p1 = sext_ln859_100_fu_2457_p0;

assign sext_ln859_101_fu_2538_p0 = lhs_213_fu_290;

assign sext_ln859_101_fu_2538_p1 = sext_ln859_101_fu_2538_p0;

assign sext_ln859_102_fu_2619_p0 = lhs_214_fu_294;

assign sext_ln859_102_fu_2619_p1 = sext_ln859_102_fu_2619_p0;

assign sext_ln859_103_fu_2700_p0 = lhs_215_fu_298;

assign sext_ln859_103_fu_2700_p1 = sext_ln859_103_fu_2700_p0;

assign sext_ln859_104_fu_2781_p0 = lhs_216_fu_302;

assign sext_ln859_104_fu_2781_p1 = sext_ln859_104_fu_2781_p0;

assign sext_ln859_105_fu_2862_p0 = lhs_217_fu_306;

assign sext_ln859_105_fu_2862_p1 = sext_ln859_105_fu_2862_p0;

assign sext_ln859_106_fu_2943_p0 = lhs_218_fu_310;

assign sext_ln859_106_fu_2943_p1 = sext_ln859_106_fu_2943_p0;

assign sext_ln859_107_fu_3024_p0 = lhs_219_fu_314;

assign sext_ln859_107_fu_3024_p1 = sext_ln859_107_fu_3024_p0;

assign sext_ln859_108_fu_3105_p0 = lhs_220_fu_318;

assign sext_ln859_108_fu_3105_p1 = sext_ln859_108_fu_3105_p0;

assign sext_ln859_94_fu_1971_p0 = lhs_206_fu_262;

assign sext_ln859_94_fu_1971_p1 = sext_ln859_94_fu_1971_p0;

assign sext_ln859_95_fu_2052_p0 = lhs_207_fu_266;

assign sext_ln859_95_fu_2052_p1 = sext_ln859_95_fu_2052_p0;

assign sext_ln859_96_fu_2133_p0 = lhs_208_fu_270;

assign sext_ln859_96_fu_2133_p1 = sext_ln859_96_fu_2133_p0;

assign sext_ln859_97_fu_2214_p0 = lhs_209_fu_274;

assign sext_ln859_97_fu_2214_p1 = sext_ln859_97_fu_2214_p0;

assign sext_ln859_98_fu_2295_p0 = lhs_210_fu_278;

assign sext_ln859_98_fu_2295_p1 = sext_ln859_98_fu_2295_p0;

assign sext_ln859_99_fu_2376_p0 = lhs_211_fu_282;

assign sext_ln859_99_fu_2376_p1 = sext_ln859_99_fu_2376_p0;

assign sext_ln859_fu_1890_p0 = lhs_fu_258;

assign sext_ln859_fu_1890_p1 = sext_ln859_fu_1890_p0;

assign xor_ln348_46_fu_2030_p2 = (p_Result_971_fu_2010_p3 ^ p_Result_970_fu_1996_p3);

assign xor_ln348_47_fu_2111_p2 = (p_Result_973_fu_2091_p3 ^ p_Result_972_fu_2077_p3);

assign xor_ln348_48_fu_2192_p2 = (p_Result_975_fu_2172_p3 ^ p_Result_974_fu_2158_p3);

assign xor_ln348_49_fu_2273_p2 = (p_Result_977_fu_2253_p3 ^ p_Result_976_fu_2239_p3);

assign xor_ln348_50_fu_2354_p2 = (p_Result_979_fu_2334_p3 ^ p_Result_978_fu_2320_p3);

assign xor_ln348_51_fu_2435_p2 = (p_Result_981_fu_2415_p3 ^ p_Result_980_fu_2401_p3);

assign xor_ln348_52_fu_2516_p2 = (p_Result_983_fu_2496_p3 ^ p_Result_982_fu_2482_p3);

assign xor_ln348_53_fu_2597_p2 = (p_Result_985_fu_2577_p3 ^ p_Result_984_fu_2563_p3);

assign xor_ln348_54_fu_2678_p2 = (p_Result_987_fu_2658_p3 ^ p_Result_986_fu_2644_p3);

assign xor_ln348_55_fu_2759_p2 = (p_Result_989_fu_2739_p3 ^ p_Result_988_fu_2725_p3);

assign xor_ln348_56_fu_2840_p2 = (p_Result_991_fu_2820_p3 ^ p_Result_990_fu_2806_p3);

assign xor_ln348_57_fu_2921_p2 = (p_Result_993_fu_2901_p3 ^ p_Result_992_fu_2887_p3);

assign xor_ln348_58_fu_3002_p2 = (p_Result_995_fu_2982_p3 ^ p_Result_994_fu_2968_p3);

assign xor_ln348_59_fu_3083_p2 = (p_Result_997_fu_3063_p3 ^ p_Result_996_fu_3049_p3);

assign xor_ln348_60_fu_3164_p2 = (p_Result_999_fu_3144_p3 ^ p_Result_998_fu_3130_p3);

assign xor_ln348_fu_1949_p2 = (p_Result_s_fu_1915_p3 ^ p_Result_969_fu_1929_p3);

assign xor_ln941_540_fu_2018_p2 = (p_Result_970_fu_1996_p3 ^ 1'd1);

assign xor_ln941_541_fu_2099_p2 = (p_Result_972_fu_2077_p3 ^ 1'd1);

assign xor_ln941_542_fu_2180_p2 = (p_Result_974_fu_2158_p3 ^ 1'd1);

assign xor_ln941_543_fu_2261_p2 = (p_Result_976_fu_2239_p3 ^ 1'd1);

assign xor_ln941_544_fu_2342_p2 = (p_Result_978_fu_2320_p3 ^ 1'd1);

assign xor_ln941_545_fu_2423_p2 = (p_Result_980_fu_2401_p3 ^ 1'd1);

assign xor_ln941_546_fu_2504_p2 = (p_Result_982_fu_2482_p3 ^ 1'd1);

assign xor_ln941_547_fu_2585_p2 = (p_Result_984_fu_2563_p3 ^ 1'd1);

assign xor_ln941_548_fu_2666_p2 = (p_Result_986_fu_2644_p3 ^ 1'd1);

assign xor_ln941_549_fu_2747_p2 = (p_Result_988_fu_2725_p3 ^ 1'd1);

assign xor_ln941_550_fu_2828_p2 = (p_Result_990_fu_2806_p3 ^ 1'd1);

assign xor_ln941_551_fu_2909_p2 = (p_Result_992_fu_2887_p3 ^ 1'd1);

assign xor_ln941_552_fu_2990_p2 = (p_Result_994_fu_2968_p3 ^ 1'd1);

assign xor_ln941_553_fu_3071_p2 = (p_Result_996_fu_3049_p3 ^ 1'd1);

assign xor_ln941_554_fu_3152_p2 = (p_Result_998_fu_3130_p3 ^ 1'd1);

assign xor_ln941_fu_1937_p2 = (p_Result_s_fu_1915_p3 ^ 1'd1);

assign zext_ln238_fu_1553_p1 = or_ln_fu_1545_p4;

assign zext_ln883_1_fu_1566_p1 = add_ln883_fu_1560_p2;

assign zext_ln883_fu_1557_p1 = select_ln237_reg_3503;

endmodule //FracNet_T_avgpool_8x8_Pipeline_VITIS_LOOP_237_2_VITIS_LOOP_238_3
